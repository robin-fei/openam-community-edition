//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v1.0.6-b27-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2012.06.11 at 10:34:16 AM PDT 
//


package com.sun.identity.wsfederation.jaxb.wsspolicy;


/**
 * This object contains factory methods for each 
 * Java content interface and Java element interface 
 * generated in the com.sun.identity.wsfederation.jaxb.wsspolicy package. 
 * <p>An ObjectFactory allows you to programatically 
 * construct new instances of the Java representation 
 * for XML content. The Java representation of XML 
 * content can consist of schema derived interfaces 
 * and classes representing the binding of schema 
 * type definitions, element declarations and model 
 * groups.  Factory methods for each of these are 
 * provided in this class.
 * 
 */
public class ObjectFactory
    extends com.sun.identity.wsfederation.jaxb.entityconfig.impl.runtime.DefaultJAXBContextImpl
{

    private static java.util.HashMap defaultImplementations = new java.util.HashMap(175, 0.75F);
    private static java.util.HashMap rootTagMap = new java.util.HashMap();
    public final static com.sun.identity.wsfederation.jaxb.entityconfig.impl.runtime.GrammarInfo grammarInfo = new com.sun.identity.wsfederation.jaxb.entityconfig.impl.runtime.GrammarInfoImpl(rootTagMap, defaultImplementations, (com.sun.identity.wsfederation.jaxb.wsspolicy.ObjectFactory.class));
    public final static java.lang.Class version = (com.sun.identity.wsfederation.jaxb.wsspolicy.impl.JAXBVersion.class);

    static {
        defaultImplementations.put((com.sun.identity.wsfederation.jaxb.wsspolicy.TripleDesElement.class), "com.sun.identity.wsfederation.jaxb.wsspolicy.impl.TripleDesElementImpl");
        defaultImplementations.put((com.sun.identity.wsfederation.jaxb.wsspolicy.Wss11Element.class), "com.sun.identity.wsfederation.jaxb.wsspolicy.impl.Wss11ElementImpl");
        defaultImplementations.put((com.sun.identity.wsfederation.jaxb.wsspolicy.ProtectionTokenElement.class), "com.sun.identity.wsfederation.jaxb.wsspolicy.impl.ProtectionTokenElementImpl");
        defaultImplementations.put((com.sun.identity.wsfederation.jaxb.wsspolicy.HttpBasicAuthenticationElement.class), "com.sun.identity.wsfederation.jaxb.wsspolicy.impl.HttpBasicAuthenticationElementImpl");
        defaultImplementations.put((com.sun.identity.wsfederation.jaxb.wsspolicy.RequireClientCertificateElement.class), "com.sun.identity.wsfederation.jaxb.wsspolicy.impl.RequireClientCertificateElementImpl");
        defaultImplementations.put((com.sun.identity.wsfederation.jaxb.wsspolicy.Basic256Rsa15Element.class), "com.sun.identity.wsfederation.jaxb.wsspolicy.impl.Basic256Rsa15ElementImpl");
        defaultImplementations.put((com.sun.identity.wsfederation.jaxb.wsspolicy.Basic128Rsa15Element.class), "com.sun.identity.wsfederation.jaxb.wsspolicy.impl.Basic128Rsa15ElementImpl");
        defaultImplementations.put((com.sun.identity.wsfederation.jaxb.wsspolicy.Basic128Element.class), "com.sun.identity.wsfederation.jaxb.wsspolicy.impl.Basic128ElementImpl");
        defaultImplementations.put((com.sun.identity.wsfederation.jaxb.wsspolicy.WssSamlV20Token11Element.class), "com.sun.identity.wsfederation.jaxb.wsspolicy.impl.WssSamlV20Token11ElementImpl");
        defaultImplementations.put((com.sun.identity.wsfederation.jaxb.wsspolicy.XPathFilter20Element.class), "com.sun.identity.wsfederation.jaxb.wsspolicy.impl.XPathFilter20ElementImpl");
        defaultImplementations.put((com.sun.identity.wsfederation.jaxb.wsspolicy.RequestSecurityTokenTemplateType.class), "com.sun.identity.wsfederation.jaxb.wsspolicy.impl.RequestSecurityTokenTemplateTypeImpl");
        defaultImplementations.put((com.sun.identity.wsfederation.jaxb.wsspolicy.HashPasswordElement.class), "com.sun.identity.wsfederation.jaxb.wsspolicy.impl.HashPasswordElementImpl");
        defaultImplementations.put((com.sun.identity.wsfederation.jaxb.wsspolicy.OnlySignEntireHeadersAndBodyElement.class), "com.sun.identity.wsfederation.jaxb.wsspolicy.impl.OnlySignEntireHeadersAndBodyElementImpl");
        defaultImplementations.put((com.sun.identity.wsfederation.jaxb.wsspolicy.LayoutElement.class), "com.sun.identity.wsfederation.jaxb.wsspolicy.impl.LayoutElementImpl");
        defaultImplementations.put((com.sun.identity.wsfederation.jaxb.wsspolicy.XPath10Element.class), "com.sun.identity.wsfederation.jaxb.wsspolicy.impl.XPath10ElementImpl");
        defaultImplementations.put((com.sun.identity.wsfederation.jaxb.wsspolicy.WssRelV10Token10Element.class), "com.sun.identity.wsfederation.jaxb.wsspolicy.impl.WssRelV10Token10ElementImpl");
        defaultImplementations.put((com.sun.identity.wsfederation.jaxb.wsspolicy.Basic192Element.class), "com.sun.identity.wsfederation.jaxb.wsspolicy.impl.Basic192ElementImpl");
        defaultImplementations.put((com.sun.identity.wsfederation.jaxb.wsspolicy.SupportingTokensElement.class), "com.sun.identity.wsfederation.jaxb.wsspolicy.impl.SupportingTokensElementImpl");
        defaultImplementations.put((com.sun.identity.wsfederation.jaxb.wsspolicy.InitiatorTokenElement.class), "com.sun.identity.wsfederation.jaxb.wsspolicy.impl.InitiatorTokenElementImpl");
        defaultImplementations.put((com.sun.identity.wsfederation.jaxb.wsspolicy.MustSupportRefIssuerSerialElement.class), "com.sun.identity.wsfederation.jaxb.wsspolicy.impl.MustSupportRefIssuerSerialElementImpl");
        defaultImplementations.put((com.sun.identity.wsfederation.jaxb.wsspolicy.SecurityContextTokenElement.class), "com.sun.identity.wsfederation.jaxb.wsspolicy.impl.SecurityContextTokenElementImpl");
        defaultImplementations.put((com.sun.identity.wsfederation.jaxb.wsspolicy.RequireIssuerSerialReferenceElement.class), "com.sun.identity.wsfederation.jaxb.wsspolicy.impl.RequireIssuerSerialReferenceElementImpl");
        defaultImplementations.put((com.sun.identity.wsfederation.jaxb.wsspolicy.WssKerberosV5ApReqToken11Element.class), "com.sun.identity.wsfederation.jaxb.wsspolicy.impl.WssKerberosV5ApReqToken11ElementImpl");
        defaultImplementations.put((com.sun.identity.wsfederation.jaxb.wsspolicy.QNameAssertionType.class), "com.sun.identity.wsfederation.jaxb.wsspolicy.impl.QNameAssertionTypeImpl");
        defaultImplementations.put((com.sun.identity.wsfederation.jaxb.wsspolicy.STRTransform10Element.class), "com.sun.identity.wsfederation.jaxb.wsspolicy.impl.STRTransform10ElementImpl");
        defaultImplementations.put((com.sun.identity.wsfederation.jaxb.wsspolicy.RequireExplicitDerivedKeysElement.class), "com.sun.identity.wsfederation.jaxb.wsspolicy.impl.RequireExplicitDerivedKeysElementImpl");
        defaultImplementations.put((com.sun.identity.wsfederation.jaxb.wsspolicy.AbsXPathElement.class), "com.sun.identity.wsfederation.jaxb.wsspolicy.impl.AbsXPathElementImpl");
        defaultImplementations.put((com.sun.identity.wsfederation.jaxb.wsspolicy.TripleDesRsa15Element.class), "com.sun.identity.wsfederation.jaxb.wsspolicy.impl.TripleDesRsa15ElementImpl");
        defaultImplementations.put((com.sun.identity.wsfederation.jaxb.wsspolicy.EncryptBeforeSigningElement.class), "com.sun.identity.wsfederation.jaxb.wsspolicy.impl.EncryptBeforeSigningElementImpl");
        defaultImplementations.put((com.sun.identity.wsfederation.jaxb.wsspolicy.EncryptionTokenElement.class), "com.sun.identity.wsfederation.jaxb.wsspolicy.impl.EncryptionTokenElementImpl");
        defaultImplementations.put((com.sun.identity.wsfederation.jaxb.wsspolicy.RequireSignatureConfirmationElement.class), "com.sun.identity.wsfederation.jaxb.wsspolicy.impl.RequireSignatureConfirmationElementImpl");
        defaultImplementations.put((com.sun.identity.wsfederation.jaxb.wsspolicy.SignatureTokenElement.class), "com.sun.identity.wsfederation.jaxb.wsspolicy.impl.SignatureTokenElementImpl");
        defaultImplementations.put((com.sun.identity.wsfederation.jaxb.wsspolicy.WssX509V3Token10Element.class), "com.sun.identity.wsfederation.jaxb.wsspolicy.impl.WssX509V3Token10ElementImpl");
        defaultImplementations.put((com.sun.identity.wsfederation.jaxb.wsspolicy.Trust10Element.class), "com.sun.identity.wsfederation.jaxb.wsspolicy.impl.Trust10ElementImpl");
        defaultImplementations.put((com.sun.identity.wsfederation.jaxb.wsspolicy.RequireExternalUriReferenceElement.class), "com.sun.identity.wsfederation.jaxb.wsspolicy.impl.RequireExternalUriReferenceElementImpl");
        defaultImplementations.put((com.sun.identity.wsfederation.jaxb.wsspolicy.RequireServerEntropyElement.class), "com.sun.identity.wsfederation.jaxb.wsspolicy.impl.RequireServerEntropyElementImpl");
        defaultImplementations.put((com.sun.identity.wsfederation.jaxb.wsspolicy.IssuedTokenElement.class), "com.sun.identity.wsfederation.jaxb.wsspolicy.impl.IssuedTokenElementImpl");
        defaultImplementations.put((com.sun.identity.wsfederation.jaxb.wsspolicy.RecipientSignatureTokenElement.class), "com.sun.identity.wsfederation.jaxb.wsspolicy.impl.RecipientSignatureTokenElementImpl");
        defaultImplementations.put((com.sun.identity.wsfederation.jaxb.wsspolicy.HeaderType.class), "com.sun.identity.wsfederation.jaxb.wsspolicy.impl.HeaderTypeImpl");
        defaultImplementations.put((com.sun.identity.wsfederation.jaxb.wsspolicy.InitiatorSignatureTokenElement.class), "com.sun.identity.wsfederation.jaxb.wsspolicy.impl.InitiatorSignatureTokenElementImpl");
        defaultImplementations.put((com.sun.identity.wsfederation.jaxb.wsspolicy.LaxTsLastElement.class), "com.sun.identity.wsfederation.jaxb.wsspolicy.impl.LaxTsLastElementImpl");
        defaultImplementations.put((com.sun.identity.wsfederation.jaxb.wsspolicy.SignedElementsElement.class), "com.sun.identity.wsfederation.jaxb.wsspolicy.impl.SignedElementsElementImpl");
        defaultImplementations.put((com.sun.identity.wsfederation.jaxb.wsspolicy.AsymmetricBindingElement.class), "com.sun.identity.wsfederation.jaxb.wsspolicy.impl.AsymmetricBindingElementImpl");
        defaultImplementations.put((com.sun.identity.wsfederation.jaxb.wsspolicy.SamlTokenElement.class), "com.sun.identity.wsfederation.jaxb.wsspolicy.impl.SamlTokenElementImpl");
        defaultImplementations.put((com.sun.identity.wsfederation.jaxb.wsspolicy.EndorsingSupportingTokensElement.class), "com.sun.identity.wsfederation.jaxb.wsspolicy.impl.EndorsingSupportingTokensElementImpl");
        defaultImplementations.put((com.sun.identity.wsfederation.jaxb.wsspolicy.WssX509Pkcs7Token11Element.class), "com.sun.identity.wsfederation.jaxb.wsspolicy.impl.WssX509Pkcs7Token11ElementImpl");
        defaultImplementations.put((com.sun.identity.wsfederation.jaxb.wsspolicy.TripleDesSha256Element.class), "com.sun.identity.wsfederation.jaxb.wsspolicy.impl.TripleDesSha256ElementImpl");
        defaultImplementations.put((com.sun.identity.wsfederation.jaxb.wsspolicy.RequireDerivedKeysElement.class), "com.sun.identity.wsfederation.jaxb.wsspolicy.impl.RequireDerivedKeysElementImpl");
        defaultImplementations.put((com.sun.identity.wsfederation.jaxb.wsspolicy.TokenAssertionType.class), "com.sun.identity.wsfederation.jaxb.wsspolicy.impl.TokenAssertionTypeImpl");
        defaultImplementations.put((com.sun.identity.wsfederation.jaxb.wsspolicy.HttpDigestAuthenticationElement.class), "com.sun.identity.wsfederation.jaxb.wsspolicy.impl.HttpDigestAuthenticationElementImpl");
        defaultImplementations.put((com.sun.identity.wsfederation.jaxb.wsspolicy.MustSupportClientChallengeElement.class), "com.sun.identity.wsfederation.jaxb.wsspolicy.impl.MustSupportClientChallengeElementImpl");
        defaultImplementations.put((com.sun.identity.wsfederation.jaxb.wsspolicy.IncludeTimestampElement.class), "com.sun.identity.wsfederation.jaxb.wsspolicy.impl.IncludeTimestampElementImpl");
        defaultImplementations.put((com.sun.identity.wsfederation.jaxb.wsspolicy.MustSupportRefThumbprintElement.class), "com.sun.identity.wsfederation.jaxb.wsspolicy.impl.MustSupportRefThumbprintElementImpl");
        defaultImplementations.put((com.sun.identity.wsfederation.jaxb.wsspolicy.InitiatorEncryptionTokenElement.class), "com.sun.identity.wsfederation.jaxb.wsspolicy.impl.InitiatorEncryptionTokenElementImpl");
        defaultImplementations.put((com.sun.identity.wsfederation.jaxb.wsspolicy.SignedSupportingTokensElement.class), "com.sun.identity.wsfederation.jaxb.wsspolicy.impl.SignedSupportingTokensElementImpl");
        defaultImplementations.put((com.sun.identity.wsfederation.jaxb.wsspolicy.WssRelV20Token11Element.class), "com.sun.identity.wsfederation.jaxb.wsspolicy.impl.WssRelV20Token11ElementImpl");
        defaultImplementations.put((com.sun.identity.wsfederation.jaxb.wsspolicy.LaxElement.class), "com.sun.identity.wsfederation.jaxb.wsspolicy.impl.LaxElementImpl");
        defaultImplementations.put((com.sun.identity.wsfederation.jaxb.wsspolicy.WssX509V3Token11Element.class), "com.sun.identity.wsfederation.jaxb.wsspolicy.impl.WssX509V3Token11ElementImpl");
        defaultImplementations.put((com.sun.identity.wsfederation.jaxb.wsspolicy.MustSupportIssuedTokensElement.class), "com.sun.identity.wsfederation.jaxb.wsspolicy.impl.MustSupportIssuedTokensElementImpl");
        defaultImplementations.put((com.sun.identity.wsfederation.jaxb.wsspolicy.RequireImplicitDerivedKeysElement.class), "com.sun.identity.wsfederation.jaxb.wsspolicy.impl.RequireImplicitDerivedKeysElementImpl");
        defaultImplementations.put((com.sun.identity.wsfederation.jaxb.wsspolicy.SignedEndorsingEncryptedSupportingTokensElement.class), "com.sun.identity.wsfederation.jaxb.wsspolicy.impl.SignedEndorsingEncryptedSupportingTokensElementImpl");
        defaultImplementations.put((com.sun.identity.wsfederation.jaxb.wsspolicy.SignedEncryptedSupportingTokensElement.class), "com.sun.identity.wsfederation.jaxb.wsspolicy.impl.SignedEncryptedSupportingTokensElementImpl");
        defaultImplementations.put((com.sun.identity.wsfederation.jaxb.wsspolicy.SePartsType.class), "com.sun.identity.wsfederation.jaxb.wsspolicy.impl.SePartsTypeImpl");
        defaultImplementations.put((com.sun.identity.wsfederation.jaxb.wsspolicy.RequireClientEntropyElement.class), "com.sun.identity.wsfederation.jaxb.wsspolicy.impl.RequireClientEntropyElementImpl");
        defaultImplementations.put((com.sun.identity.wsfederation.jaxb.wsspolicy.EncryptSignatureElement.class), "com.sun.identity.wsfederation.jaxb.wsspolicy.impl.EncryptSignatureElementImpl");
        defaultImplementations.put((com.sun.identity.wsfederation.jaxb.wsspolicy.Basic192Rsa15Element.class), "com.sun.identity.wsfederation.jaxb.wsspolicy.impl.Basic192Rsa15ElementImpl");
        defaultImplementations.put((com.sun.identity.wsfederation.jaxb.wsspolicy.TripleDesSha256Rsa15Element.class), "com.sun.identity.wsfederation.jaxb.wsspolicy.impl.TripleDesSha256Rsa15ElementImpl");
        defaultImplementations.put((com.sun.identity.wsfederation.jaxb.wsspolicy.MustSupportServerChallengeElement.class), "com.sun.identity.wsfederation.jaxb.wsspolicy.impl.MustSupportServerChallengeElementImpl");
        defaultImplementations.put((com.sun.identity.wsfederation.jaxb.wsspolicy.RequireEmbeddedTokenReferenceElement.class), "com.sun.identity.wsfederation.jaxb.wsspolicy.impl.RequireEmbeddedTokenReferenceElementImpl");
        defaultImplementations.put((com.sun.identity.wsfederation.jaxb.wsspolicy.AlgorithmSuiteElement.class), "com.sun.identity.wsfederation.jaxb.wsspolicy.impl.AlgorithmSuiteElementImpl");
        defaultImplementations.put((com.sun.identity.wsfederation.jaxb.wsspolicy.RequireExternalReferenceElement.class), "com.sun.identity.wsfederation.jaxb.wsspolicy.impl.RequireExternalReferenceElementImpl");
        defaultImplementations.put((com.sun.identity.wsfederation.jaxb.wsspolicy.RecipientEncryptionTokenElement.class), "com.sun.identity.wsfederation.jaxb.wsspolicy.impl.RecipientEncryptionTokenElementImpl");
        defaultImplementations.put((com.sun.identity.wsfederation.jaxb.wsspolicy.WssUsernameToken10Element.class), "com.sun.identity.wsfederation.jaxb.wsspolicy.impl.WssUsernameToken10ElementImpl");
        defaultImplementations.put((com.sun.identity.wsfederation.jaxb.wsspolicy.NestedPolicyType.class), "com.sun.identity.wsfederation.jaxb.wsspolicy.impl.NestedPolicyTypeImpl");
        defaultImplementations.put((com.sun.identity.wsfederation.jaxb.wsspolicy.InclusiveC14NElement.class), "com.sun.identity.wsfederation.jaxb.wsspolicy.impl.InclusiveC14NElementImpl");
        defaultImplementations.put((com.sun.identity.wsfederation.jaxb.wsspolicy.TransportBindingElement.class), "com.sun.identity.wsfederation.jaxb.wsspolicy.impl.TransportBindingElementImpl");
        defaultImplementations.put((com.sun.identity.wsfederation.jaxb.wsspolicy.EncryptedPartsElement.class), "com.sun.identity.wsfederation.jaxb.wsspolicy.impl.EncryptedPartsElementImpl");
        defaultImplementations.put((com.sun.identity.wsfederation.jaxb.wsspolicy.Wss10Element.class), "com.sun.identity.wsfederation.jaxb.wsspolicy.impl.Wss10ElementImpl");
        defaultImplementations.put((com.sun.identity.wsfederation.jaxb.wsspolicy.TransportTokenElement.class), "com.sun.identity.wsfederation.jaxb.wsspolicy.impl.TransportTokenElementImpl");
        defaultImplementations.put((com.sun.identity.wsfederation.jaxb.wsspolicy.HttpsTokenElement.class), "com.sun.identity.wsfederation.jaxb.wsspolicy.impl.HttpsTokenElementImpl");
        defaultImplementations.put((com.sun.identity.wsfederation.jaxb.wsspolicy.SecureConversationTokenType.class), "com.sun.identity.wsfederation.jaxb.wsspolicy.impl.SecureConversationTokenTypeImpl");
        defaultImplementations.put((com.sun.identity.wsfederation.jaxb.wsspolicy.Basic256Element.class), "com.sun.identity.wsfederation.jaxb.wsspolicy.impl.Basic256ElementImpl");
        defaultImplementations.put((com.sun.identity.wsfederation.jaxb.wsspolicy.SecureConversationTokenElement.class), "com.sun.identity.wsfederation.jaxb.wsspolicy.impl.SecureConversationTokenElementImpl");
        defaultImplementations.put((com.sun.identity.wsfederation.jaxb.wsspolicy.Basic192Sha256Element.class), "com.sun.identity.wsfederation.jaxb.wsspolicy.impl.Basic192Sha256ElementImpl");
        defaultImplementations.put((com.sun.identity.wsfederation.jaxb.wsspolicy.WssRelV20Token10Element.class), "com.sun.identity.wsfederation.jaxb.wsspolicy.impl.WssRelV20Token10ElementImpl");
        defaultImplementations.put((com.sun.identity.wsfederation.jaxb.wsspolicy.Basic192Sha256Rsa15Element.class), "com.sun.identity.wsfederation.jaxb.wsspolicy.impl.Basic192Sha256Rsa15ElementImpl");
        defaultImplementations.put((com.sun.identity.wsfederation.jaxb.wsspolicy.WssSamlV11Token11Element.class), "com.sun.identity.wsfederation.jaxb.wsspolicy.impl.WssSamlV11Token11ElementImpl");
        defaultImplementations.put((com.sun.identity.wsfederation.jaxb.wsspolicy.MustSupportRefExternalURIElement.class), "com.sun.identity.wsfederation.jaxb.wsspolicy.impl.MustSupportRefExternalURIElementImpl");
        defaultImplementations.put((com.sun.identity.wsfederation.jaxb.wsspolicy.EncryptedElementsElement.class), "com.sun.identity.wsfederation.jaxb.wsspolicy.impl.EncryptedElementsElementImpl");
        defaultImplementations.put((com.sun.identity.wsfederation.jaxb.wsspolicy.WssUsernameToken11Element.class), "com.sun.identity.wsfederation.jaxb.wsspolicy.impl.WssUsernameToken11ElementImpl");
        defaultImplementations.put((com.sun.identity.wsfederation.jaxb.wsspolicy.WssX509Pkcs7Token10Element.class), "com.sun.identity.wsfederation.jaxb.wsspolicy.impl.WssX509Pkcs7Token10ElementImpl");
        defaultImplementations.put((com.sun.identity.wsfederation.jaxb.wsspolicy.SC200502SecurityContextTokenElement.class), "com.sun.identity.wsfederation.jaxb.wsspolicy.impl.SC200502SecurityContextTokenElementImpl");
        defaultImplementations.put((com.sun.identity.wsfederation.jaxb.wsspolicy.RecipientTokenElement.class), "com.sun.identity.wsfederation.jaxb.wsspolicy.impl.RecipientTokenElementImpl");
        defaultImplementations.put((com.sun.identity.wsfederation.jaxb.wsspolicy.SOAPNormalization10Element.class), "com.sun.identity.wsfederation.jaxb.wsspolicy.impl.SOAPNormalization10ElementImpl");
        defaultImplementations.put((com.sun.identity.wsfederation.jaxb.wsspolicy.X509TokenElement.class), "com.sun.identity.wsfederation.jaxb.wsspolicy.impl.X509TokenElementImpl");
        defaultImplementations.put((com.sun.identity.wsfederation.jaxb.wsspolicy.KerberosTokenElement.class), "com.sun.identity.wsfederation.jaxb.wsspolicy.impl.KerberosTokenElementImpl");
        defaultImplementations.put((com.sun.identity.wsfederation.jaxb.wsspolicy.MustSupportRefKeyIdentifierElement.class), "com.sun.identity.wsfederation.jaxb.wsspolicy.impl.MustSupportRefKeyIdentifierElementImpl");
        defaultImplementations.put((com.sun.identity.wsfederation.jaxb.wsspolicy.Basic256Sha256Rsa15Element.class), "com.sun.identity.wsfederation.jaxb.wsspolicy.impl.Basic256Sha256Rsa15ElementImpl");
        defaultImplementations.put((com.sun.identity.wsfederation.jaxb.wsspolicy.WssRelV10Token11Element.class), "com.sun.identity.wsfederation.jaxb.wsspolicy.impl.WssRelV10Token11ElementImpl");
        defaultImplementations.put((com.sun.identity.wsfederation.jaxb.wsspolicy.WssX509PkiPathV1Token10Element.class), "com.sun.identity.wsfederation.jaxb.wsspolicy.impl.WssX509PkiPathV1Token10ElementImpl");
        defaultImplementations.put((com.sun.identity.wsfederation.jaxb.wsspolicy.SignedPartsElement.class), "com.sun.identity.wsfederation.jaxb.wsspolicy.impl.SignedPartsElementImpl");
        defaultImplementations.put((com.sun.identity.wsfederation.jaxb.wsspolicy.MustSupportRefEncryptedKeyElement.class), "com.sun.identity.wsfederation.jaxb.wsspolicy.impl.MustSupportRefEncryptedKeyElementImpl");
        defaultImplementations.put((com.sun.identity.wsfederation.jaxb.wsspolicy.NoPasswordElement.class), "com.sun.identity.wsfederation.jaxb.wsspolicy.impl.NoPasswordElementImpl");
        defaultImplementations.put((com.sun.identity.wsfederation.jaxb.wsspolicy.StrictElement.class), "com.sun.identity.wsfederation.jaxb.wsspolicy.impl.StrictElementImpl");
        defaultImplementations.put((com.sun.identity.wsfederation.jaxb.wsspolicy.SerElementsType.class), "com.sun.identity.wsfederation.jaxb.wsspolicy.impl.SerElementsTypeImpl");
        defaultImplementations.put((com.sun.identity.wsfederation.jaxb.wsspolicy.WssX509PkiPathV1Token11Element.class), "com.sun.identity.wsfederation.jaxb.wsspolicy.impl.WssX509PkiPathV1Token11ElementImpl");
        defaultImplementations.put((com.sun.identity.wsfederation.jaxb.wsspolicy.Basic128Sha256Element.class), "com.sun.identity.wsfederation.jaxb.wsspolicy.impl.Basic128Sha256ElementImpl");
        defaultImplementations.put((com.sun.identity.wsfederation.jaxb.wsspolicy.SignedEndorsingSupportingTokensElement.class), "com.sun.identity.wsfederation.jaxb.wsspolicy.impl.SignedEndorsingSupportingTokensElementImpl");
        defaultImplementations.put((com.sun.identity.wsfederation.jaxb.wsspolicy.MustSupportRefEmbeddedTokenElement.class), "com.sun.identity.wsfederation.jaxb.wsspolicy.impl.MustSupportRefEmbeddedTokenElementImpl");
        defaultImplementations.put((com.sun.identity.wsfederation.jaxb.wsspolicy.SymmetricBindingElement.class), "com.sun.identity.wsfederation.jaxb.wsspolicy.impl.SymmetricBindingElementImpl");
        defaultImplementations.put((com.sun.identity.wsfederation.jaxb.wsspolicy.WssSamlV11Token10Element.class), "com.sun.identity.wsfederation.jaxb.wsspolicy.impl.WssSamlV11Token10ElementImpl");
        defaultImplementations.put((com.sun.identity.wsfederation.jaxb.wsspolicy.ProtectTokensElement.class), "com.sun.identity.wsfederation.jaxb.wsspolicy.impl.ProtectTokensElementImpl");
        defaultImplementations.put((com.sun.identity.wsfederation.jaxb.wsspolicy.IssuedTokenType.class), "com.sun.identity.wsfederation.jaxb.wsspolicy.impl.IssuedTokenTypeImpl");
        defaultImplementations.put((com.sun.identity.wsfederation.jaxb.wsspolicy.RequiredElementsElement.class), "com.sun.identity.wsfederation.jaxb.wsspolicy.impl.RequiredElementsElementImpl");
        defaultImplementations.put((com.sun.identity.wsfederation.jaxb.wsspolicy.LaxTsFirstElement.class), "com.sun.identity.wsfederation.jaxb.wsspolicy.impl.LaxTsFirstElementImpl");
        defaultImplementations.put((com.sun.identity.wsfederation.jaxb.wsspolicy.RequireThumbprintReferenceElement.class), "com.sun.identity.wsfederation.jaxb.wsspolicy.impl.RequireThumbprintReferenceElementImpl");
        defaultImplementations.put((com.sun.identity.wsfederation.jaxb.wsspolicy.EmptyType.class), "com.sun.identity.wsfederation.jaxb.wsspolicy.impl.EmptyTypeImpl");
        defaultImplementations.put((com.sun.identity.wsfederation.jaxb.wsspolicy.SpnegoContextTokenType.class), "com.sun.identity.wsfederation.jaxb.wsspolicy.impl.SpnegoContextTokenTypeImpl");
        defaultImplementations.put((com.sun.identity.wsfederation.jaxb.wsspolicy.BootstrapPolicyElement.class), "com.sun.identity.wsfederation.jaxb.wsspolicy.impl.BootstrapPolicyElementImpl");
        defaultImplementations.put((com.sun.identity.wsfederation.jaxb.wsspolicy.WssX509V1Token11Element.class), "com.sun.identity.wsfederation.jaxb.wsspolicy.impl.WssX509V1Token11ElementImpl");
        defaultImplementations.put((com.sun.identity.wsfederation.jaxb.wsspolicy.RelTokenElement.class), "com.sun.identity.wsfederation.jaxb.wsspolicy.impl.RelTokenElementImpl");
        defaultImplementations.put((com.sun.identity.wsfederation.jaxb.wsspolicy.UsernameTokenElement.class), "com.sun.identity.wsfederation.jaxb.wsspolicy.impl.UsernameTokenElementImpl");
        defaultImplementations.put((com.sun.identity.wsfederation.jaxb.wsspolicy.RequireInternalReferenceElement.class), "com.sun.identity.wsfederation.jaxb.wsspolicy.impl.RequireInternalReferenceElementImpl");
        defaultImplementations.put((com.sun.identity.wsfederation.jaxb.wsspolicy.SpnegoContextTokenElement.class), "com.sun.identity.wsfederation.jaxb.wsspolicy.impl.SpnegoContextTokenElementImpl");
        defaultImplementations.put((com.sun.identity.wsfederation.jaxb.wsspolicy.EndorsingEncryptedSupportingTokensElement.class), "com.sun.identity.wsfederation.jaxb.wsspolicy.impl.EndorsingEncryptedSupportingTokensElementImpl");
        defaultImplementations.put((com.sun.identity.wsfederation.jaxb.wsspolicy.Basic128Sha256Rsa15Element.class), "com.sun.identity.wsfederation.jaxb.wsspolicy.impl.Basic128Sha256Rsa15ElementImpl");
        defaultImplementations.put((com.sun.identity.wsfederation.jaxb.wsspolicy.Basic256Sha256Element.class), "com.sun.identity.wsfederation.jaxb.wsspolicy.impl.Basic256Sha256ElementImpl");
        defaultImplementations.put((com.sun.identity.wsfederation.jaxb.wsspolicy.WssGssKerberosV5ApReqToken11Element.class), "com.sun.identity.wsfederation.jaxb.wsspolicy.impl.WssGssKerberosV5ApReqToken11ElementImpl");
        defaultImplementations.put((com.sun.identity.wsfederation.jaxb.wsspolicy.RequireRequestSecurityTokenCollectionElement.class), "com.sun.identity.wsfederation.jaxb.wsspolicy.impl.RequireRequestSecurityTokenCollectionElementImpl");
        defaultImplementations.put((com.sun.identity.wsfederation.jaxb.wsspolicy.RequireKeyIdentifierReferenceElement.class), "com.sun.identity.wsfederation.jaxb.wsspolicy.impl.RequireKeyIdentifierReferenceElementImpl");
        rootTagMap.put(new javax.xml.namespace.QName("http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200512", "InitiatorEncryptionToken"), (com.sun.identity.wsfederation.jaxb.wsspolicy.InitiatorEncryptionTokenElement.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200512", "X509Token"), (com.sun.identity.wsfederation.jaxb.wsspolicy.X509TokenElement.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200512", "RelToken"), (com.sun.identity.wsfederation.jaxb.wsspolicy.RelTokenElement.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200512", "EndorsingSupportingTokens"), (com.sun.identity.wsfederation.jaxb.wsspolicy.EndorsingSupportingTokensElement.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200512", "MustSupportRefIssuerSerial"), (com.sun.identity.wsfederation.jaxb.wsspolicy.MustSupportRefIssuerSerialElement.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200512", "RecipientSignatureToken"), (com.sun.identity.wsfederation.jaxb.wsspolicy.RecipientSignatureTokenElement.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200512", "MustSupportRefEncryptedKey"), (com.sun.identity.wsfederation.jaxb.wsspolicy.MustSupportRefEncryptedKeyElement.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200512", "HttpBasicAuthentication"), (com.sun.identity.wsfederation.jaxb.wsspolicy.HttpBasicAuthenticationElement.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200512", "SecurityContextToken"), (com.sun.identity.wsfederation.jaxb.wsspolicy.SecurityContextTokenElement.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200512", "RecipientEncryptionToken"), (com.sun.identity.wsfederation.jaxb.wsspolicy.RecipientEncryptionTokenElement.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200512", "RequireServerEntropy"), (com.sun.identity.wsfederation.jaxb.wsspolicy.RequireServerEntropyElement.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200512", "RequireExternalReference"), (com.sun.identity.wsfederation.jaxb.wsspolicy.RequireExternalReferenceElement.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200512", "EndorsingEncryptedSupportingTokens"), (com.sun.identity.wsfederation.jaxb.wsspolicy.EndorsingEncryptedSupportingTokensElement.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200512", "SymmetricBinding"), (com.sun.identity.wsfederation.jaxb.wsspolicy.SymmetricBindingElement.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200512", "Basic128Sha256"), (com.sun.identity.wsfederation.jaxb.wsspolicy.Basic128Sha256Element.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200512", "WssUsernameToken11"), (com.sun.identity.wsfederation.jaxb.wsspolicy.WssUsernameToken11Element.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200512", "WssUsernameToken10"), (com.sun.identity.wsfederation.jaxb.wsspolicy.WssUsernameToken10Element.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200512", "IncludeTimestamp"), (com.sun.identity.wsfederation.jaxb.wsspolicy.IncludeTimestampElement.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200512", "MustSupportRefExternalURI"), (com.sun.identity.wsfederation.jaxb.wsspolicy.MustSupportRefExternalURIElement.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200512", "Basic192Sha256Rsa15"), (com.sun.identity.wsfederation.jaxb.wsspolicy.Basic192Sha256Rsa15Element.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200512", "Wss11"), (com.sun.identity.wsfederation.jaxb.wsspolicy.Wss11Element.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200512", "Wss10"), (com.sun.identity.wsfederation.jaxb.wsspolicy.Wss10Element.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200512", "EncryptSignature"), (com.sun.identity.wsfederation.jaxb.wsspolicy.EncryptSignatureElement.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200512", "RequireThumbprintReference"), (com.sun.identity.wsfederation.jaxb.wsspolicy.RequireThumbprintReferenceElement.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200512", "MustSupportRefKeyIdentifier"), (com.sun.identity.wsfederation.jaxb.wsspolicy.MustSupportRefKeyIdentifierElement.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200512", "RequireExplicitDerivedKeys"), (com.sun.identity.wsfederation.jaxb.wsspolicy.RequireExplicitDerivedKeysElement.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200512", "RecipientToken"), (com.sun.identity.wsfederation.jaxb.wsspolicy.RecipientTokenElement.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200512", "MustSupportRefThumbprint"), (com.sun.identity.wsfederation.jaxb.wsspolicy.MustSupportRefThumbprintElement.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200512", "BootstrapPolicy"), (com.sun.identity.wsfederation.jaxb.wsspolicy.BootstrapPolicyElement.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200512", "WssX509V1Token11"), (com.sun.identity.wsfederation.jaxb.wsspolicy.WssX509V1Token11Element.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200512", "UsernameToken"), (com.sun.identity.wsfederation.jaxb.wsspolicy.UsernameTokenElement.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200512", "TripleDesSha256"), (com.sun.identity.wsfederation.jaxb.wsspolicy.TripleDesSha256Element.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200512", "Basic192"), (com.sun.identity.wsfederation.jaxb.wsspolicy.Basic192Element.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200512", "LaxTsLast"), (com.sun.identity.wsfederation.jaxb.wsspolicy.LaxTsLastElement.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200512", "SignedParts"), (com.sun.identity.wsfederation.jaxb.wsspolicy.SignedPartsElement.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200512", "RequireClientEntropy"), (com.sun.identity.wsfederation.jaxb.wsspolicy.RequireClientEntropyElement.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200512", "IssuedToken"), (com.sun.identity.wsfederation.jaxb.wsspolicy.IssuedTokenElement.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200512", "WssSamlV20Token11"), (com.sun.identity.wsfederation.jaxb.wsspolicy.WssSamlV20Token11Element.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200512", "Basic256Rsa15"), (com.sun.identity.wsfederation.jaxb.wsspolicy.Basic256Rsa15Element.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200512", "Trust10"), (com.sun.identity.wsfederation.jaxb.wsspolicy.Trust10Element.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200512", "Basic128Sha256Rsa15"), (com.sun.identity.wsfederation.jaxb.wsspolicy.Basic128Sha256Rsa15Element.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200512", "SpnegoContextToken"), (com.sun.identity.wsfederation.jaxb.wsspolicy.SpnegoContextTokenElement.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200512", "RequireDerivedKeys"), (com.sun.identity.wsfederation.jaxb.wsspolicy.RequireDerivedKeysElement.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200512", "WssKerberosV5ApReqToken11"), (com.sun.identity.wsfederation.jaxb.wsspolicy.WssKerberosV5ApReqToken11Element.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200512", "EncryptBeforeSigning"), (com.sun.identity.wsfederation.jaxb.wsspolicy.EncryptBeforeSigningElement.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200512", "WssRelV20Token10"), (com.sun.identity.wsfederation.jaxb.wsspolicy.WssRelV20Token10Element.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200512", "WssRelV10Token11"), (com.sun.identity.wsfederation.jaxb.wsspolicy.WssRelV10Token11Element.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200512", "WssRelV20Token11"), (com.sun.identity.wsfederation.jaxb.wsspolicy.WssRelV20Token11Element.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200512", "InclusiveC14N"), (com.sun.identity.wsfederation.jaxb.wsspolicy.InclusiveC14NElement.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200512", "SignedSupportingTokens"), (com.sun.identity.wsfederation.jaxb.wsspolicy.SignedSupportingTokensElement.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200512", "WssRelV10Token10"), (com.sun.identity.wsfederation.jaxb.wsspolicy.WssRelV10Token10Element.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200512", "MustSupportRefEmbeddedToken"), (com.sun.identity.wsfederation.jaxb.wsspolicy.MustSupportRefEmbeddedTokenElement.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200512", "SignatureToken"), (com.sun.identity.wsfederation.jaxb.wsspolicy.SignatureTokenElement.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200512", "MustSupportIssuedTokens"), (com.sun.identity.wsfederation.jaxb.wsspolicy.MustSupportIssuedTokensElement.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200512", "SignedEncryptedSupportingTokens"), (com.sun.identity.wsfederation.jaxb.wsspolicy.SignedEncryptedSupportingTokensElement.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200512", "HttpDigestAuthentication"), (com.sun.identity.wsfederation.jaxb.wsspolicy.HttpDigestAuthenticationElement.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200512", "XPathFilter20"), (com.sun.identity.wsfederation.jaxb.wsspolicy.XPathFilter20Element.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200512", "ProtectTokens"), (com.sun.identity.wsfederation.jaxb.wsspolicy.ProtectTokensElement.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200512", "RequireExternalUriReference"), (com.sun.identity.wsfederation.jaxb.wsspolicy.RequireExternalUriReferenceElement.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200512", "AsymmetricBinding"), (com.sun.identity.wsfederation.jaxb.wsspolicy.AsymmetricBindingElement.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200512", "SupportingTokens"), (com.sun.identity.wsfederation.jaxb.wsspolicy.SupportingTokensElement.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200512", "STRTransform10"), (com.sun.identity.wsfederation.jaxb.wsspolicy.STRTransform10Element.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200512", "XPath10"), (com.sun.identity.wsfederation.jaxb.wsspolicy.XPath10Element.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200512", "TripleDesSha256Rsa15"), (com.sun.identity.wsfederation.jaxb.wsspolicy.TripleDesSha256Rsa15Element.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200512", "HashPassword"), (com.sun.identity.wsfederation.jaxb.wsspolicy.HashPasswordElement.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200512", "WssX509V3Token11"), (com.sun.identity.wsfederation.jaxb.wsspolicy.WssX509V3Token11Element.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200512", "WssX509V3Token10"), (com.sun.identity.wsfederation.jaxb.wsspolicy.WssX509V3Token10Element.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200512", "RequireRequestSecurityTokenCollection"), (com.sun.identity.wsfederation.jaxb.wsspolicy.RequireRequestSecurityTokenCollectionElement.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200512", "Basic192Rsa15"), (com.sun.identity.wsfederation.jaxb.wsspolicy.Basic192Rsa15Element.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200512", "EncryptionToken"), (com.sun.identity.wsfederation.jaxb.wsspolicy.EncryptionTokenElement.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200512", "SOAPNormalization10"), (com.sun.identity.wsfederation.jaxb.wsspolicy.SOAPNormalization10Element.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200512", "RequireInternalReference"), (com.sun.identity.wsfederation.jaxb.wsspolicy.RequireInternalReferenceElement.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200512", "Basic256Sha256Rsa15"), (com.sun.identity.wsfederation.jaxb.wsspolicy.Basic256Sha256Rsa15Element.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200512", "Lax"), (com.sun.identity.wsfederation.jaxb.wsspolicy.LaxElement.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200512", "MustSupportClientChallenge"), (com.sun.identity.wsfederation.jaxb.wsspolicy.MustSupportClientChallengeElement.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200512", "AlgorithmSuite"), (com.sun.identity.wsfederation.jaxb.wsspolicy.AlgorithmSuiteElement.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200512", "Basic256Sha256"), (com.sun.identity.wsfederation.jaxb.wsspolicy.Basic256Sha256Element.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200512", "SamlToken"), (com.sun.identity.wsfederation.jaxb.wsspolicy.SamlTokenElement.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200512", "SignedElements"), (com.sun.identity.wsfederation.jaxb.wsspolicy.SignedElementsElement.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200512", "InitiatorSignatureToken"), (com.sun.identity.wsfederation.jaxb.wsspolicy.InitiatorSignatureTokenElement.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200512", "SecureConversationToken"), (com.sun.identity.wsfederation.jaxb.wsspolicy.SecureConversationTokenElement.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200512", "RequireSignatureConfirmation"), (com.sun.identity.wsfederation.jaxb.wsspolicy.RequireSignatureConfirmationElement.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200512", "InitiatorToken"), (com.sun.identity.wsfederation.jaxb.wsspolicy.InitiatorTokenElement.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200512", "TransportBinding"), (com.sun.identity.wsfederation.jaxb.wsspolicy.TransportBindingElement.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200512", "SC200502SecurityContextToken"), (com.sun.identity.wsfederation.jaxb.wsspolicy.SC200502SecurityContextTokenElement.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200512", "MustSupportServerChallenge"), (com.sun.identity.wsfederation.jaxb.wsspolicy.MustSupportServerChallengeElement.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200512", "WssX509PkiPathV1Token10"), (com.sun.identity.wsfederation.jaxb.wsspolicy.WssX509PkiPathV1Token10Element.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200512", "Basic192Sha256"), (com.sun.identity.wsfederation.jaxb.wsspolicy.Basic192Sha256Element.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200512", "HttpsToken"), (com.sun.identity.wsfederation.jaxb.wsspolicy.HttpsTokenElement.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200512", "WssX509PkiPathV1Token11"), (com.sun.identity.wsfederation.jaxb.wsspolicy.WssX509PkiPathV1Token11Element.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200512", "Basic128Rsa15"), (com.sun.identity.wsfederation.jaxb.wsspolicy.Basic128Rsa15Element.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200512", "RequiredElements"), (com.sun.identity.wsfederation.jaxb.wsspolicy.RequiredElementsElement.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200512", "RequireEmbeddedTokenReference"), (com.sun.identity.wsfederation.jaxb.wsspolicy.RequireEmbeddedTokenReferenceElement.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200512", "Basic256"), (com.sun.identity.wsfederation.jaxb.wsspolicy.Basic256Element.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200512", "Strict"), (com.sun.identity.wsfederation.jaxb.wsspolicy.StrictElement.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200512", "AbsXPath"), (com.sun.identity.wsfederation.jaxb.wsspolicy.AbsXPathElement.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200512", "TransportToken"), (com.sun.identity.wsfederation.jaxb.wsspolicy.TransportTokenElement.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200512", "ProtectionToken"), (com.sun.identity.wsfederation.jaxb.wsspolicy.ProtectionTokenElement.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200512", "SignedEndorsingEncryptedSupportingTokens"), (com.sun.identity.wsfederation.jaxb.wsspolicy.SignedEndorsingEncryptedSupportingTokensElement.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200512", "OnlySignEntireHeadersAndBody"), (com.sun.identity.wsfederation.jaxb.wsspolicy.OnlySignEntireHeadersAndBodyElement.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200512", "RequireImplicitDerivedKeys"), (com.sun.identity.wsfederation.jaxb.wsspolicy.RequireImplicitDerivedKeysElement.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200512", "TripleDesRsa15"), (com.sun.identity.wsfederation.jaxb.wsspolicy.TripleDesRsa15Element.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200512", "LaxTsFirst"), (com.sun.identity.wsfederation.jaxb.wsspolicy.LaxTsFirstElement.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200512", "EncryptedElements"), (com.sun.identity.wsfederation.jaxb.wsspolicy.EncryptedElementsElement.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200512", "RequireKeyIdentifierReference"), (com.sun.identity.wsfederation.jaxb.wsspolicy.RequireKeyIdentifierReferenceElement.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200512", "RequireIssuerSerialReference"), (com.sun.identity.wsfederation.jaxb.wsspolicy.RequireIssuerSerialReferenceElement.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200512", "TripleDes"), (com.sun.identity.wsfederation.jaxb.wsspolicy.TripleDesElement.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200512", "RequireClientCertificate"), (com.sun.identity.wsfederation.jaxb.wsspolicy.RequireClientCertificateElement.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200512", "KerberosToken"), (com.sun.identity.wsfederation.jaxb.wsspolicy.KerberosTokenElement.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200512", "WssSamlV11Token11"), (com.sun.identity.wsfederation.jaxb.wsspolicy.WssSamlV11Token11Element.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200512", "WssSamlV11Token10"), (com.sun.identity.wsfederation.jaxb.wsspolicy.WssSamlV11Token10Element.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200512", "SignedEndorsingSupportingTokens"), (com.sun.identity.wsfederation.jaxb.wsspolicy.SignedEndorsingSupportingTokensElement.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200512", "WssX509Pkcs7Token10"), (com.sun.identity.wsfederation.jaxb.wsspolicy.WssX509Pkcs7Token10Element.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200512", "WssGssKerberosV5ApReqToken11"), (com.sun.identity.wsfederation.jaxb.wsspolicy.WssGssKerberosV5ApReqToken11Element.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200512", "NoPassword"), (com.sun.identity.wsfederation.jaxb.wsspolicy.NoPasswordElement.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200512", "WssX509Pkcs7Token11"), (com.sun.identity.wsfederation.jaxb.wsspolicy.WssX509Pkcs7Token11Element.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200512", "Layout"), (com.sun.identity.wsfederation.jaxb.wsspolicy.LayoutElement.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200512", "EncryptedParts"), (com.sun.identity.wsfederation.jaxb.wsspolicy.EncryptedPartsElement.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200512", "Basic128"), (com.sun.identity.wsfederation.jaxb.wsspolicy.Basic128Element.class));
    }

    /**
     * Create a new ObjectFactory that can be used to create new instances of schema derived classes for package: com.sun.identity.wsfederation.jaxb.wsspolicy
     * 
     */
    public ObjectFactory() {
        super(grammarInfo);
    }

    /**
     * Create an instance of the specified Java content interface.
     * 
     * @param javaContentInterface
     *     the Class object of the javacontent interface to instantiate
     * @return
     *     a new instance
     * @throws JAXBException
     *     if an error occurs
     */
    public java.lang.Object newInstance(java.lang.Class javaContentInterface)
        throws javax.xml.bind.JAXBException
    {
        return super.newInstance(javaContentInterface);
    }

    /**
     * Get the specified property. This method can only be
     * used to get provider specific properties.
     * Attempting to get an undefined property will result
     * in a PropertyException being thrown.
     * 
     * @param name
     *     the name of the property to retrieve
     * @return
     *     the value of the requested property
     * @throws PropertyException
     *     when there is an error retrieving the given property or value
     */
    public java.lang.Object getProperty(java.lang.String name)
        throws javax.xml.bind.PropertyException
    {
        return super.getProperty(name);
    }

    /**
     * Set the specified property. This method can only be
     * used to set provider specific properties.
     * Attempting to set an undefined property will result
     * in a PropertyException being thrown.
     * 
     * @param name
     *     the name of the property to retrieve
     * @param value
     *     the value of the property to be set
     * @throws PropertyException
     *     when there is an error processing the given property or value
     */
    public void setProperty(java.lang.String name, java.lang.Object value)
        throws javax.xml.bind.PropertyException
    {
        super.setProperty(name, value);
    }

    /**
     * Create an instance of TripleDesElement
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public com.sun.identity.wsfederation.jaxb.wsspolicy.TripleDesElement createTripleDesElement()
        throws javax.xml.bind.JAXBException
    {
        return new com.sun.identity.wsfederation.jaxb.wsspolicy.impl.TripleDesElementImpl();
    }

    /**
     * Create an instance of Wss11Element
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public com.sun.identity.wsfederation.jaxb.wsspolicy.Wss11Element createWss11Element()
        throws javax.xml.bind.JAXBException
    {
        return new com.sun.identity.wsfederation.jaxb.wsspolicy.impl.Wss11ElementImpl();
    }

    /**
     * Create an instance of ProtectionTokenElement
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public com.sun.identity.wsfederation.jaxb.wsspolicy.ProtectionTokenElement createProtectionTokenElement()
        throws javax.xml.bind.JAXBException
    {
        return new com.sun.identity.wsfederation.jaxb.wsspolicy.impl.ProtectionTokenElementImpl();
    }

    /**
     * Create an instance of HttpBasicAuthenticationElement
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public com.sun.identity.wsfederation.jaxb.wsspolicy.HttpBasicAuthenticationElement createHttpBasicAuthenticationElement()
        throws javax.xml.bind.JAXBException
    {
        return new com.sun.identity.wsfederation.jaxb.wsspolicy.impl.HttpBasicAuthenticationElementImpl();
    }

    /**
     * Create an instance of RequireClientCertificateElement
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public com.sun.identity.wsfederation.jaxb.wsspolicy.RequireClientCertificateElement createRequireClientCertificateElement()
        throws javax.xml.bind.JAXBException
    {
        return new com.sun.identity.wsfederation.jaxb.wsspolicy.impl.RequireClientCertificateElementImpl();
    }

    /**
     * Create an instance of Basic256Rsa15Element
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public com.sun.identity.wsfederation.jaxb.wsspolicy.Basic256Rsa15Element createBasic256Rsa15Element()
        throws javax.xml.bind.JAXBException
    {
        return new com.sun.identity.wsfederation.jaxb.wsspolicy.impl.Basic256Rsa15ElementImpl();
    }

    /**
     * Create an instance of Basic128Rsa15Element
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public com.sun.identity.wsfederation.jaxb.wsspolicy.Basic128Rsa15Element createBasic128Rsa15Element()
        throws javax.xml.bind.JAXBException
    {
        return new com.sun.identity.wsfederation.jaxb.wsspolicy.impl.Basic128Rsa15ElementImpl();
    }

    /**
     * Create an instance of Basic128Element
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public com.sun.identity.wsfederation.jaxb.wsspolicy.Basic128Element createBasic128Element()
        throws javax.xml.bind.JAXBException
    {
        return new com.sun.identity.wsfederation.jaxb.wsspolicy.impl.Basic128ElementImpl();
    }

    /**
     * Create an instance of WssSamlV20Token11Element
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public com.sun.identity.wsfederation.jaxb.wsspolicy.WssSamlV20Token11Element createWssSamlV20Token11Element()
        throws javax.xml.bind.JAXBException
    {
        return new com.sun.identity.wsfederation.jaxb.wsspolicy.impl.WssSamlV20Token11ElementImpl();
    }

    /**
     * Create an instance of XPathFilter20Element
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public com.sun.identity.wsfederation.jaxb.wsspolicy.XPathFilter20Element createXPathFilter20Element()
        throws javax.xml.bind.JAXBException
    {
        return new com.sun.identity.wsfederation.jaxb.wsspolicy.impl.XPathFilter20ElementImpl();
    }

    /**
     * Create an instance of RequestSecurityTokenTemplateType
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public com.sun.identity.wsfederation.jaxb.wsspolicy.RequestSecurityTokenTemplateType createRequestSecurityTokenTemplateType()
        throws javax.xml.bind.JAXBException
    {
        return new com.sun.identity.wsfederation.jaxb.wsspolicy.impl.RequestSecurityTokenTemplateTypeImpl();
    }

    /**
     * Create an instance of HashPasswordElement
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public com.sun.identity.wsfederation.jaxb.wsspolicy.HashPasswordElement createHashPasswordElement()
        throws javax.xml.bind.JAXBException
    {
        return new com.sun.identity.wsfederation.jaxb.wsspolicy.impl.HashPasswordElementImpl();
    }

    /**
     * Create an instance of OnlySignEntireHeadersAndBodyElement
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public com.sun.identity.wsfederation.jaxb.wsspolicy.OnlySignEntireHeadersAndBodyElement createOnlySignEntireHeadersAndBodyElement()
        throws javax.xml.bind.JAXBException
    {
        return new com.sun.identity.wsfederation.jaxb.wsspolicy.impl.OnlySignEntireHeadersAndBodyElementImpl();
    }

    /**
     * Create an instance of LayoutElement
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public com.sun.identity.wsfederation.jaxb.wsspolicy.LayoutElement createLayoutElement()
        throws javax.xml.bind.JAXBException
    {
        return new com.sun.identity.wsfederation.jaxb.wsspolicy.impl.LayoutElementImpl();
    }

    /**
     * Create an instance of XPath10Element
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public com.sun.identity.wsfederation.jaxb.wsspolicy.XPath10Element createXPath10Element()
        throws javax.xml.bind.JAXBException
    {
        return new com.sun.identity.wsfederation.jaxb.wsspolicy.impl.XPath10ElementImpl();
    }

    /**
     * Create an instance of WssRelV10Token10Element
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public com.sun.identity.wsfederation.jaxb.wsspolicy.WssRelV10Token10Element createWssRelV10Token10Element()
        throws javax.xml.bind.JAXBException
    {
        return new com.sun.identity.wsfederation.jaxb.wsspolicy.impl.WssRelV10Token10ElementImpl();
    }

    /**
     * Create an instance of Basic192Element
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public com.sun.identity.wsfederation.jaxb.wsspolicy.Basic192Element createBasic192Element()
        throws javax.xml.bind.JAXBException
    {
        return new com.sun.identity.wsfederation.jaxb.wsspolicy.impl.Basic192ElementImpl();
    }

    /**
     * Create an instance of SupportingTokensElement
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public com.sun.identity.wsfederation.jaxb.wsspolicy.SupportingTokensElement createSupportingTokensElement()
        throws javax.xml.bind.JAXBException
    {
        return new com.sun.identity.wsfederation.jaxb.wsspolicy.impl.SupportingTokensElementImpl();
    }

    /**
     * Create an instance of InitiatorTokenElement
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public com.sun.identity.wsfederation.jaxb.wsspolicy.InitiatorTokenElement createInitiatorTokenElement()
        throws javax.xml.bind.JAXBException
    {
        return new com.sun.identity.wsfederation.jaxb.wsspolicy.impl.InitiatorTokenElementImpl();
    }

    /**
     * Create an instance of MustSupportRefIssuerSerialElement
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public com.sun.identity.wsfederation.jaxb.wsspolicy.MustSupportRefIssuerSerialElement createMustSupportRefIssuerSerialElement()
        throws javax.xml.bind.JAXBException
    {
        return new com.sun.identity.wsfederation.jaxb.wsspolicy.impl.MustSupportRefIssuerSerialElementImpl();
    }

    /**
     * Create an instance of SecurityContextTokenElement
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public com.sun.identity.wsfederation.jaxb.wsspolicy.SecurityContextTokenElement createSecurityContextTokenElement()
        throws javax.xml.bind.JAXBException
    {
        return new com.sun.identity.wsfederation.jaxb.wsspolicy.impl.SecurityContextTokenElementImpl();
    }

    /**
     * Create an instance of RequireIssuerSerialReferenceElement
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public com.sun.identity.wsfederation.jaxb.wsspolicy.RequireIssuerSerialReferenceElement createRequireIssuerSerialReferenceElement()
        throws javax.xml.bind.JAXBException
    {
        return new com.sun.identity.wsfederation.jaxb.wsspolicy.impl.RequireIssuerSerialReferenceElementImpl();
    }

    /**
     * Create an instance of WssKerberosV5ApReqToken11Element
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public com.sun.identity.wsfederation.jaxb.wsspolicy.WssKerberosV5ApReqToken11Element createWssKerberosV5ApReqToken11Element()
        throws javax.xml.bind.JAXBException
    {
        return new com.sun.identity.wsfederation.jaxb.wsspolicy.impl.WssKerberosV5ApReqToken11ElementImpl();
    }

    /**
     * Create an instance of QNameAssertionType
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public com.sun.identity.wsfederation.jaxb.wsspolicy.QNameAssertionType createQNameAssertionType()
        throws javax.xml.bind.JAXBException
    {
        return new com.sun.identity.wsfederation.jaxb.wsspolicy.impl.QNameAssertionTypeImpl();
    }

    /**
     * Create an instance of STRTransform10Element
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public com.sun.identity.wsfederation.jaxb.wsspolicy.STRTransform10Element createSTRTransform10Element()
        throws javax.xml.bind.JAXBException
    {
        return new com.sun.identity.wsfederation.jaxb.wsspolicy.impl.STRTransform10ElementImpl();
    }

    /**
     * Create an instance of RequireExplicitDerivedKeysElement
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public com.sun.identity.wsfederation.jaxb.wsspolicy.RequireExplicitDerivedKeysElement createRequireExplicitDerivedKeysElement()
        throws javax.xml.bind.JAXBException
    {
        return new com.sun.identity.wsfederation.jaxb.wsspolicy.impl.RequireExplicitDerivedKeysElementImpl();
    }

    /**
     * Create an instance of AbsXPathElement
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public com.sun.identity.wsfederation.jaxb.wsspolicy.AbsXPathElement createAbsXPathElement()
        throws javax.xml.bind.JAXBException
    {
        return new com.sun.identity.wsfederation.jaxb.wsspolicy.impl.AbsXPathElementImpl();
    }

    /**
     * Create an instance of TripleDesRsa15Element
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public com.sun.identity.wsfederation.jaxb.wsspolicy.TripleDesRsa15Element createTripleDesRsa15Element()
        throws javax.xml.bind.JAXBException
    {
        return new com.sun.identity.wsfederation.jaxb.wsspolicy.impl.TripleDesRsa15ElementImpl();
    }

    /**
     * Create an instance of EncryptBeforeSigningElement
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public com.sun.identity.wsfederation.jaxb.wsspolicy.EncryptBeforeSigningElement createEncryptBeforeSigningElement()
        throws javax.xml.bind.JAXBException
    {
        return new com.sun.identity.wsfederation.jaxb.wsspolicy.impl.EncryptBeforeSigningElementImpl();
    }

    /**
     * Create an instance of EncryptionTokenElement
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public com.sun.identity.wsfederation.jaxb.wsspolicy.EncryptionTokenElement createEncryptionTokenElement()
        throws javax.xml.bind.JAXBException
    {
        return new com.sun.identity.wsfederation.jaxb.wsspolicy.impl.EncryptionTokenElementImpl();
    }

    /**
     * Create an instance of RequireSignatureConfirmationElement
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public com.sun.identity.wsfederation.jaxb.wsspolicy.RequireSignatureConfirmationElement createRequireSignatureConfirmationElement()
        throws javax.xml.bind.JAXBException
    {
        return new com.sun.identity.wsfederation.jaxb.wsspolicy.impl.RequireSignatureConfirmationElementImpl();
    }

    /**
     * Create an instance of SignatureTokenElement
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public com.sun.identity.wsfederation.jaxb.wsspolicy.SignatureTokenElement createSignatureTokenElement()
        throws javax.xml.bind.JAXBException
    {
        return new com.sun.identity.wsfederation.jaxb.wsspolicy.impl.SignatureTokenElementImpl();
    }

    /**
     * Create an instance of WssX509V3Token10Element
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public com.sun.identity.wsfederation.jaxb.wsspolicy.WssX509V3Token10Element createWssX509V3Token10Element()
        throws javax.xml.bind.JAXBException
    {
        return new com.sun.identity.wsfederation.jaxb.wsspolicy.impl.WssX509V3Token10ElementImpl();
    }

    /**
     * Create an instance of Trust10Element
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public com.sun.identity.wsfederation.jaxb.wsspolicy.Trust10Element createTrust10Element()
        throws javax.xml.bind.JAXBException
    {
        return new com.sun.identity.wsfederation.jaxb.wsspolicy.impl.Trust10ElementImpl();
    }

    /**
     * Create an instance of RequireExternalUriReferenceElement
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public com.sun.identity.wsfederation.jaxb.wsspolicy.RequireExternalUriReferenceElement createRequireExternalUriReferenceElement()
        throws javax.xml.bind.JAXBException
    {
        return new com.sun.identity.wsfederation.jaxb.wsspolicy.impl.RequireExternalUriReferenceElementImpl();
    }

    /**
     * Create an instance of RequireServerEntropyElement
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public com.sun.identity.wsfederation.jaxb.wsspolicy.RequireServerEntropyElement createRequireServerEntropyElement()
        throws javax.xml.bind.JAXBException
    {
        return new com.sun.identity.wsfederation.jaxb.wsspolicy.impl.RequireServerEntropyElementImpl();
    }

    /**
     * Create an instance of IssuedTokenElement
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public com.sun.identity.wsfederation.jaxb.wsspolicy.IssuedTokenElement createIssuedTokenElement()
        throws javax.xml.bind.JAXBException
    {
        return new com.sun.identity.wsfederation.jaxb.wsspolicy.impl.IssuedTokenElementImpl();
    }

    /**
     * Create an instance of RecipientSignatureTokenElement
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public com.sun.identity.wsfederation.jaxb.wsspolicy.RecipientSignatureTokenElement createRecipientSignatureTokenElement()
        throws javax.xml.bind.JAXBException
    {
        return new com.sun.identity.wsfederation.jaxb.wsspolicy.impl.RecipientSignatureTokenElementImpl();
    }

    /**
     * Create an instance of HeaderType
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public com.sun.identity.wsfederation.jaxb.wsspolicy.HeaderType createHeaderType()
        throws javax.xml.bind.JAXBException
    {
        return new com.sun.identity.wsfederation.jaxb.wsspolicy.impl.HeaderTypeImpl();
    }

    /**
     * Create an instance of InitiatorSignatureTokenElement
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public com.sun.identity.wsfederation.jaxb.wsspolicy.InitiatorSignatureTokenElement createInitiatorSignatureTokenElement()
        throws javax.xml.bind.JAXBException
    {
        return new com.sun.identity.wsfederation.jaxb.wsspolicy.impl.InitiatorSignatureTokenElementImpl();
    }

    /**
     * Create an instance of LaxTsLastElement
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public com.sun.identity.wsfederation.jaxb.wsspolicy.LaxTsLastElement createLaxTsLastElement()
        throws javax.xml.bind.JAXBException
    {
        return new com.sun.identity.wsfederation.jaxb.wsspolicy.impl.LaxTsLastElementImpl();
    }

    /**
     * Create an instance of SignedElementsElement
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public com.sun.identity.wsfederation.jaxb.wsspolicy.SignedElementsElement createSignedElementsElement()
        throws javax.xml.bind.JAXBException
    {
        return new com.sun.identity.wsfederation.jaxb.wsspolicy.impl.SignedElementsElementImpl();
    }

    /**
     * Create an instance of AsymmetricBindingElement
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public com.sun.identity.wsfederation.jaxb.wsspolicy.AsymmetricBindingElement createAsymmetricBindingElement()
        throws javax.xml.bind.JAXBException
    {
        return new com.sun.identity.wsfederation.jaxb.wsspolicy.impl.AsymmetricBindingElementImpl();
    }

    /**
     * Create an instance of SamlTokenElement
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public com.sun.identity.wsfederation.jaxb.wsspolicy.SamlTokenElement createSamlTokenElement()
        throws javax.xml.bind.JAXBException
    {
        return new com.sun.identity.wsfederation.jaxb.wsspolicy.impl.SamlTokenElementImpl();
    }

    /**
     * Create an instance of EndorsingSupportingTokensElement
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public com.sun.identity.wsfederation.jaxb.wsspolicy.EndorsingSupportingTokensElement createEndorsingSupportingTokensElement()
        throws javax.xml.bind.JAXBException
    {
        return new com.sun.identity.wsfederation.jaxb.wsspolicy.impl.EndorsingSupportingTokensElementImpl();
    }

    /**
     * Create an instance of WssX509Pkcs7Token11Element
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public com.sun.identity.wsfederation.jaxb.wsspolicy.WssX509Pkcs7Token11Element createWssX509Pkcs7Token11Element()
        throws javax.xml.bind.JAXBException
    {
        return new com.sun.identity.wsfederation.jaxb.wsspolicy.impl.WssX509Pkcs7Token11ElementImpl();
    }

    /**
     * Create an instance of TripleDesSha256Element
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public com.sun.identity.wsfederation.jaxb.wsspolicy.TripleDesSha256Element createTripleDesSha256Element()
        throws javax.xml.bind.JAXBException
    {
        return new com.sun.identity.wsfederation.jaxb.wsspolicy.impl.TripleDesSha256ElementImpl();
    }

    /**
     * Create an instance of RequireDerivedKeysElement
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public com.sun.identity.wsfederation.jaxb.wsspolicy.RequireDerivedKeysElement createRequireDerivedKeysElement()
        throws javax.xml.bind.JAXBException
    {
        return new com.sun.identity.wsfederation.jaxb.wsspolicy.impl.RequireDerivedKeysElementImpl();
    }

    /**
     * Create an instance of TokenAssertionType
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public com.sun.identity.wsfederation.jaxb.wsspolicy.TokenAssertionType createTokenAssertionType()
        throws javax.xml.bind.JAXBException
    {
        return new com.sun.identity.wsfederation.jaxb.wsspolicy.impl.TokenAssertionTypeImpl();
    }

    /**
     * Create an instance of HttpDigestAuthenticationElement
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public com.sun.identity.wsfederation.jaxb.wsspolicy.HttpDigestAuthenticationElement createHttpDigestAuthenticationElement()
        throws javax.xml.bind.JAXBException
    {
        return new com.sun.identity.wsfederation.jaxb.wsspolicy.impl.HttpDigestAuthenticationElementImpl();
    }

    /**
     * Create an instance of MustSupportClientChallengeElement
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public com.sun.identity.wsfederation.jaxb.wsspolicy.MustSupportClientChallengeElement createMustSupportClientChallengeElement()
        throws javax.xml.bind.JAXBException
    {
        return new com.sun.identity.wsfederation.jaxb.wsspolicy.impl.MustSupportClientChallengeElementImpl();
    }

    /**
     * Create an instance of IncludeTimestampElement
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public com.sun.identity.wsfederation.jaxb.wsspolicy.IncludeTimestampElement createIncludeTimestampElement()
        throws javax.xml.bind.JAXBException
    {
        return new com.sun.identity.wsfederation.jaxb.wsspolicy.impl.IncludeTimestampElementImpl();
    }

    /**
     * Create an instance of MustSupportRefThumbprintElement
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public com.sun.identity.wsfederation.jaxb.wsspolicy.MustSupportRefThumbprintElement createMustSupportRefThumbprintElement()
        throws javax.xml.bind.JAXBException
    {
        return new com.sun.identity.wsfederation.jaxb.wsspolicy.impl.MustSupportRefThumbprintElementImpl();
    }

    /**
     * Create an instance of InitiatorEncryptionTokenElement
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public com.sun.identity.wsfederation.jaxb.wsspolicy.InitiatorEncryptionTokenElement createInitiatorEncryptionTokenElement()
        throws javax.xml.bind.JAXBException
    {
        return new com.sun.identity.wsfederation.jaxb.wsspolicy.impl.InitiatorEncryptionTokenElementImpl();
    }

    /**
     * Create an instance of SignedSupportingTokensElement
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public com.sun.identity.wsfederation.jaxb.wsspolicy.SignedSupportingTokensElement createSignedSupportingTokensElement()
        throws javax.xml.bind.JAXBException
    {
        return new com.sun.identity.wsfederation.jaxb.wsspolicy.impl.SignedSupportingTokensElementImpl();
    }

    /**
     * Create an instance of WssRelV20Token11Element
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public com.sun.identity.wsfederation.jaxb.wsspolicy.WssRelV20Token11Element createWssRelV20Token11Element()
        throws javax.xml.bind.JAXBException
    {
        return new com.sun.identity.wsfederation.jaxb.wsspolicy.impl.WssRelV20Token11ElementImpl();
    }

    /**
     * Create an instance of LaxElement
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public com.sun.identity.wsfederation.jaxb.wsspolicy.LaxElement createLaxElement()
        throws javax.xml.bind.JAXBException
    {
        return new com.sun.identity.wsfederation.jaxb.wsspolicy.impl.LaxElementImpl();
    }

    /**
     * Create an instance of WssX509V3Token11Element
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public com.sun.identity.wsfederation.jaxb.wsspolicy.WssX509V3Token11Element createWssX509V3Token11Element()
        throws javax.xml.bind.JAXBException
    {
        return new com.sun.identity.wsfederation.jaxb.wsspolicy.impl.WssX509V3Token11ElementImpl();
    }

    /**
     * Create an instance of MustSupportIssuedTokensElement
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public com.sun.identity.wsfederation.jaxb.wsspolicy.MustSupportIssuedTokensElement createMustSupportIssuedTokensElement()
        throws javax.xml.bind.JAXBException
    {
        return new com.sun.identity.wsfederation.jaxb.wsspolicy.impl.MustSupportIssuedTokensElementImpl();
    }

    /**
     * Create an instance of RequireImplicitDerivedKeysElement
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public com.sun.identity.wsfederation.jaxb.wsspolicy.RequireImplicitDerivedKeysElement createRequireImplicitDerivedKeysElement()
        throws javax.xml.bind.JAXBException
    {
        return new com.sun.identity.wsfederation.jaxb.wsspolicy.impl.RequireImplicitDerivedKeysElementImpl();
    }

    /**
     * Create an instance of SignedEndorsingEncryptedSupportingTokensElement
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public com.sun.identity.wsfederation.jaxb.wsspolicy.SignedEndorsingEncryptedSupportingTokensElement createSignedEndorsingEncryptedSupportingTokensElement()
        throws javax.xml.bind.JAXBException
    {
        return new com.sun.identity.wsfederation.jaxb.wsspolicy.impl.SignedEndorsingEncryptedSupportingTokensElementImpl();
    }

    /**
     * Create an instance of SignedEncryptedSupportingTokensElement
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public com.sun.identity.wsfederation.jaxb.wsspolicy.SignedEncryptedSupportingTokensElement createSignedEncryptedSupportingTokensElement()
        throws javax.xml.bind.JAXBException
    {
        return new com.sun.identity.wsfederation.jaxb.wsspolicy.impl.SignedEncryptedSupportingTokensElementImpl();
    }

    /**
     * Create an instance of SePartsType
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public com.sun.identity.wsfederation.jaxb.wsspolicy.SePartsType createSePartsType()
        throws javax.xml.bind.JAXBException
    {
        return new com.sun.identity.wsfederation.jaxb.wsspolicy.impl.SePartsTypeImpl();
    }

    /**
     * Create an instance of RequireClientEntropyElement
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public com.sun.identity.wsfederation.jaxb.wsspolicy.RequireClientEntropyElement createRequireClientEntropyElement()
        throws javax.xml.bind.JAXBException
    {
        return new com.sun.identity.wsfederation.jaxb.wsspolicy.impl.RequireClientEntropyElementImpl();
    }

    /**
     * Create an instance of EncryptSignatureElement
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public com.sun.identity.wsfederation.jaxb.wsspolicy.EncryptSignatureElement createEncryptSignatureElement()
        throws javax.xml.bind.JAXBException
    {
        return new com.sun.identity.wsfederation.jaxb.wsspolicy.impl.EncryptSignatureElementImpl();
    }

    /**
     * Create an instance of Basic192Rsa15Element
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public com.sun.identity.wsfederation.jaxb.wsspolicy.Basic192Rsa15Element createBasic192Rsa15Element()
        throws javax.xml.bind.JAXBException
    {
        return new com.sun.identity.wsfederation.jaxb.wsspolicy.impl.Basic192Rsa15ElementImpl();
    }

    /**
     * Create an instance of TripleDesSha256Rsa15Element
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public com.sun.identity.wsfederation.jaxb.wsspolicy.TripleDesSha256Rsa15Element createTripleDesSha256Rsa15Element()
        throws javax.xml.bind.JAXBException
    {
        return new com.sun.identity.wsfederation.jaxb.wsspolicy.impl.TripleDesSha256Rsa15ElementImpl();
    }

    /**
     * Create an instance of MustSupportServerChallengeElement
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public com.sun.identity.wsfederation.jaxb.wsspolicy.MustSupportServerChallengeElement createMustSupportServerChallengeElement()
        throws javax.xml.bind.JAXBException
    {
        return new com.sun.identity.wsfederation.jaxb.wsspolicy.impl.MustSupportServerChallengeElementImpl();
    }

    /**
     * Create an instance of RequireEmbeddedTokenReferenceElement
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public com.sun.identity.wsfederation.jaxb.wsspolicy.RequireEmbeddedTokenReferenceElement createRequireEmbeddedTokenReferenceElement()
        throws javax.xml.bind.JAXBException
    {
        return new com.sun.identity.wsfederation.jaxb.wsspolicy.impl.RequireEmbeddedTokenReferenceElementImpl();
    }

    /**
     * Create an instance of AlgorithmSuiteElement
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public com.sun.identity.wsfederation.jaxb.wsspolicy.AlgorithmSuiteElement createAlgorithmSuiteElement()
        throws javax.xml.bind.JAXBException
    {
        return new com.sun.identity.wsfederation.jaxb.wsspolicy.impl.AlgorithmSuiteElementImpl();
    }

    /**
     * Create an instance of RequireExternalReferenceElement
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public com.sun.identity.wsfederation.jaxb.wsspolicy.RequireExternalReferenceElement createRequireExternalReferenceElement()
        throws javax.xml.bind.JAXBException
    {
        return new com.sun.identity.wsfederation.jaxb.wsspolicy.impl.RequireExternalReferenceElementImpl();
    }

    /**
     * Create an instance of RecipientEncryptionTokenElement
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public com.sun.identity.wsfederation.jaxb.wsspolicy.RecipientEncryptionTokenElement createRecipientEncryptionTokenElement()
        throws javax.xml.bind.JAXBException
    {
        return new com.sun.identity.wsfederation.jaxb.wsspolicy.impl.RecipientEncryptionTokenElementImpl();
    }

    /**
     * Create an instance of WssUsernameToken10Element
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public com.sun.identity.wsfederation.jaxb.wsspolicy.WssUsernameToken10Element createWssUsernameToken10Element()
        throws javax.xml.bind.JAXBException
    {
        return new com.sun.identity.wsfederation.jaxb.wsspolicy.impl.WssUsernameToken10ElementImpl();
    }

    /**
     * Create an instance of NestedPolicyType
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public com.sun.identity.wsfederation.jaxb.wsspolicy.NestedPolicyType createNestedPolicyType()
        throws javax.xml.bind.JAXBException
    {
        return new com.sun.identity.wsfederation.jaxb.wsspolicy.impl.NestedPolicyTypeImpl();
    }

    /**
     * Create an instance of InclusiveC14NElement
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public com.sun.identity.wsfederation.jaxb.wsspolicy.InclusiveC14NElement createInclusiveC14NElement()
        throws javax.xml.bind.JAXBException
    {
        return new com.sun.identity.wsfederation.jaxb.wsspolicy.impl.InclusiveC14NElementImpl();
    }

    /**
     * Create an instance of TransportBindingElement
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public com.sun.identity.wsfederation.jaxb.wsspolicy.TransportBindingElement createTransportBindingElement()
        throws javax.xml.bind.JAXBException
    {
        return new com.sun.identity.wsfederation.jaxb.wsspolicy.impl.TransportBindingElementImpl();
    }

    /**
     * Create an instance of EncryptedPartsElement
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public com.sun.identity.wsfederation.jaxb.wsspolicy.EncryptedPartsElement createEncryptedPartsElement()
        throws javax.xml.bind.JAXBException
    {
        return new com.sun.identity.wsfederation.jaxb.wsspolicy.impl.EncryptedPartsElementImpl();
    }

    /**
     * Create an instance of Wss10Element
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public com.sun.identity.wsfederation.jaxb.wsspolicy.Wss10Element createWss10Element()
        throws javax.xml.bind.JAXBException
    {
        return new com.sun.identity.wsfederation.jaxb.wsspolicy.impl.Wss10ElementImpl();
    }

    /**
     * Create an instance of TransportTokenElement
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public com.sun.identity.wsfederation.jaxb.wsspolicy.TransportTokenElement createTransportTokenElement()
        throws javax.xml.bind.JAXBException
    {
        return new com.sun.identity.wsfederation.jaxb.wsspolicy.impl.TransportTokenElementImpl();
    }

    /**
     * Create an instance of HttpsTokenElement
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public com.sun.identity.wsfederation.jaxb.wsspolicy.HttpsTokenElement createHttpsTokenElement()
        throws javax.xml.bind.JAXBException
    {
        return new com.sun.identity.wsfederation.jaxb.wsspolicy.impl.HttpsTokenElementImpl();
    }

    /**
     * Create an instance of SecureConversationTokenType
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public com.sun.identity.wsfederation.jaxb.wsspolicy.SecureConversationTokenType createSecureConversationTokenType()
        throws javax.xml.bind.JAXBException
    {
        return new com.sun.identity.wsfederation.jaxb.wsspolicy.impl.SecureConversationTokenTypeImpl();
    }

    /**
     * Create an instance of Basic256Element
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public com.sun.identity.wsfederation.jaxb.wsspolicy.Basic256Element createBasic256Element()
        throws javax.xml.bind.JAXBException
    {
        return new com.sun.identity.wsfederation.jaxb.wsspolicy.impl.Basic256ElementImpl();
    }

    /**
     * Create an instance of SecureConversationTokenElement
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public com.sun.identity.wsfederation.jaxb.wsspolicy.SecureConversationTokenElement createSecureConversationTokenElement()
        throws javax.xml.bind.JAXBException
    {
        return new com.sun.identity.wsfederation.jaxb.wsspolicy.impl.SecureConversationTokenElementImpl();
    }

    /**
     * Create an instance of Basic192Sha256Element
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public com.sun.identity.wsfederation.jaxb.wsspolicy.Basic192Sha256Element createBasic192Sha256Element()
        throws javax.xml.bind.JAXBException
    {
        return new com.sun.identity.wsfederation.jaxb.wsspolicy.impl.Basic192Sha256ElementImpl();
    }

    /**
     * Create an instance of WssRelV20Token10Element
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public com.sun.identity.wsfederation.jaxb.wsspolicy.WssRelV20Token10Element createWssRelV20Token10Element()
        throws javax.xml.bind.JAXBException
    {
        return new com.sun.identity.wsfederation.jaxb.wsspolicy.impl.WssRelV20Token10ElementImpl();
    }

    /**
     * Create an instance of Basic192Sha256Rsa15Element
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public com.sun.identity.wsfederation.jaxb.wsspolicy.Basic192Sha256Rsa15Element createBasic192Sha256Rsa15Element()
        throws javax.xml.bind.JAXBException
    {
        return new com.sun.identity.wsfederation.jaxb.wsspolicy.impl.Basic192Sha256Rsa15ElementImpl();
    }

    /**
     * Create an instance of WssSamlV11Token11Element
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public com.sun.identity.wsfederation.jaxb.wsspolicy.WssSamlV11Token11Element createWssSamlV11Token11Element()
        throws javax.xml.bind.JAXBException
    {
        return new com.sun.identity.wsfederation.jaxb.wsspolicy.impl.WssSamlV11Token11ElementImpl();
    }

    /**
     * Create an instance of MustSupportRefExternalURIElement
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public com.sun.identity.wsfederation.jaxb.wsspolicy.MustSupportRefExternalURIElement createMustSupportRefExternalURIElement()
        throws javax.xml.bind.JAXBException
    {
        return new com.sun.identity.wsfederation.jaxb.wsspolicy.impl.MustSupportRefExternalURIElementImpl();
    }

    /**
     * Create an instance of EncryptedElementsElement
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public com.sun.identity.wsfederation.jaxb.wsspolicy.EncryptedElementsElement createEncryptedElementsElement()
        throws javax.xml.bind.JAXBException
    {
        return new com.sun.identity.wsfederation.jaxb.wsspolicy.impl.EncryptedElementsElementImpl();
    }

    /**
     * Create an instance of WssUsernameToken11Element
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public com.sun.identity.wsfederation.jaxb.wsspolicy.WssUsernameToken11Element createWssUsernameToken11Element()
        throws javax.xml.bind.JAXBException
    {
        return new com.sun.identity.wsfederation.jaxb.wsspolicy.impl.WssUsernameToken11ElementImpl();
    }

    /**
     * Create an instance of WssX509Pkcs7Token10Element
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public com.sun.identity.wsfederation.jaxb.wsspolicy.WssX509Pkcs7Token10Element createWssX509Pkcs7Token10Element()
        throws javax.xml.bind.JAXBException
    {
        return new com.sun.identity.wsfederation.jaxb.wsspolicy.impl.WssX509Pkcs7Token10ElementImpl();
    }

    /**
     * Create an instance of SC200502SecurityContextTokenElement
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public com.sun.identity.wsfederation.jaxb.wsspolicy.SC200502SecurityContextTokenElement createSC200502SecurityContextTokenElement()
        throws javax.xml.bind.JAXBException
    {
        return new com.sun.identity.wsfederation.jaxb.wsspolicy.impl.SC200502SecurityContextTokenElementImpl();
    }

    /**
     * Create an instance of RecipientTokenElement
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public com.sun.identity.wsfederation.jaxb.wsspolicy.RecipientTokenElement createRecipientTokenElement()
        throws javax.xml.bind.JAXBException
    {
        return new com.sun.identity.wsfederation.jaxb.wsspolicy.impl.RecipientTokenElementImpl();
    }

    /**
     * Create an instance of SOAPNormalization10Element
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public com.sun.identity.wsfederation.jaxb.wsspolicy.SOAPNormalization10Element createSOAPNormalization10Element()
        throws javax.xml.bind.JAXBException
    {
        return new com.sun.identity.wsfederation.jaxb.wsspolicy.impl.SOAPNormalization10ElementImpl();
    }

    /**
     * Create an instance of X509TokenElement
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public com.sun.identity.wsfederation.jaxb.wsspolicy.X509TokenElement createX509TokenElement()
        throws javax.xml.bind.JAXBException
    {
        return new com.sun.identity.wsfederation.jaxb.wsspolicy.impl.X509TokenElementImpl();
    }

    /**
     * Create an instance of KerberosTokenElement
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public com.sun.identity.wsfederation.jaxb.wsspolicy.KerberosTokenElement createKerberosTokenElement()
        throws javax.xml.bind.JAXBException
    {
        return new com.sun.identity.wsfederation.jaxb.wsspolicy.impl.KerberosTokenElementImpl();
    }

    /**
     * Create an instance of MustSupportRefKeyIdentifierElement
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public com.sun.identity.wsfederation.jaxb.wsspolicy.MustSupportRefKeyIdentifierElement createMustSupportRefKeyIdentifierElement()
        throws javax.xml.bind.JAXBException
    {
        return new com.sun.identity.wsfederation.jaxb.wsspolicy.impl.MustSupportRefKeyIdentifierElementImpl();
    }

    /**
     * Create an instance of Basic256Sha256Rsa15Element
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public com.sun.identity.wsfederation.jaxb.wsspolicy.Basic256Sha256Rsa15Element createBasic256Sha256Rsa15Element()
        throws javax.xml.bind.JAXBException
    {
        return new com.sun.identity.wsfederation.jaxb.wsspolicy.impl.Basic256Sha256Rsa15ElementImpl();
    }

    /**
     * Create an instance of WssRelV10Token11Element
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public com.sun.identity.wsfederation.jaxb.wsspolicy.WssRelV10Token11Element createWssRelV10Token11Element()
        throws javax.xml.bind.JAXBException
    {
        return new com.sun.identity.wsfederation.jaxb.wsspolicy.impl.WssRelV10Token11ElementImpl();
    }

    /**
     * Create an instance of WssX509PkiPathV1Token10Element
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public com.sun.identity.wsfederation.jaxb.wsspolicy.WssX509PkiPathV1Token10Element createWssX509PkiPathV1Token10Element()
        throws javax.xml.bind.JAXBException
    {
        return new com.sun.identity.wsfederation.jaxb.wsspolicy.impl.WssX509PkiPathV1Token10ElementImpl();
    }

    /**
     * Create an instance of SignedPartsElement
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public com.sun.identity.wsfederation.jaxb.wsspolicy.SignedPartsElement createSignedPartsElement()
        throws javax.xml.bind.JAXBException
    {
        return new com.sun.identity.wsfederation.jaxb.wsspolicy.impl.SignedPartsElementImpl();
    }

    /**
     * Create an instance of MustSupportRefEncryptedKeyElement
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public com.sun.identity.wsfederation.jaxb.wsspolicy.MustSupportRefEncryptedKeyElement createMustSupportRefEncryptedKeyElement()
        throws javax.xml.bind.JAXBException
    {
        return new com.sun.identity.wsfederation.jaxb.wsspolicy.impl.MustSupportRefEncryptedKeyElementImpl();
    }

    /**
     * Create an instance of NoPasswordElement
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public com.sun.identity.wsfederation.jaxb.wsspolicy.NoPasswordElement createNoPasswordElement()
        throws javax.xml.bind.JAXBException
    {
        return new com.sun.identity.wsfederation.jaxb.wsspolicy.impl.NoPasswordElementImpl();
    }

    /**
     * Create an instance of StrictElement
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public com.sun.identity.wsfederation.jaxb.wsspolicy.StrictElement createStrictElement()
        throws javax.xml.bind.JAXBException
    {
        return new com.sun.identity.wsfederation.jaxb.wsspolicy.impl.StrictElementImpl();
    }

    /**
     * Create an instance of SerElementsType
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public com.sun.identity.wsfederation.jaxb.wsspolicy.SerElementsType createSerElementsType()
        throws javax.xml.bind.JAXBException
    {
        return new com.sun.identity.wsfederation.jaxb.wsspolicy.impl.SerElementsTypeImpl();
    }

    /**
     * Create an instance of WssX509PkiPathV1Token11Element
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public com.sun.identity.wsfederation.jaxb.wsspolicy.WssX509PkiPathV1Token11Element createWssX509PkiPathV1Token11Element()
        throws javax.xml.bind.JAXBException
    {
        return new com.sun.identity.wsfederation.jaxb.wsspolicy.impl.WssX509PkiPathV1Token11ElementImpl();
    }

    /**
     * Create an instance of Basic128Sha256Element
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public com.sun.identity.wsfederation.jaxb.wsspolicy.Basic128Sha256Element createBasic128Sha256Element()
        throws javax.xml.bind.JAXBException
    {
        return new com.sun.identity.wsfederation.jaxb.wsspolicy.impl.Basic128Sha256ElementImpl();
    }

    /**
     * Create an instance of SignedEndorsingSupportingTokensElement
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public com.sun.identity.wsfederation.jaxb.wsspolicy.SignedEndorsingSupportingTokensElement createSignedEndorsingSupportingTokensElement()
        throws javax.xml.bind.JAXBException
    {
        return new com.sun.identity.wsfederation.jaxb.wsspolicy.impl.SignedEndorsingSupportingTokensElementImpl();
    }

    /**
     * Create an instance of MustSupportRefEmbeddedTokenElement
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public com.sun.identity.wsfederation.jaxb.wsspolicy.MustSupportRefEmbeddedTokenElement createMustSupportRefEmbeddedTokenElement()
        throws javax.xml.bind.JAXBException
    {
        return new com.sun.identity.wsfederation.jaxb.wsspolicy.impl.MustSupportRefEmbeddedTokenElementImpl();
    }

    /**
     * Create an instance of SymmetricBindingElement
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public com.sun.identity.wsfederation.jaxb.wsspolicy.SymmetricBindingElement createSymmetricBindingElement()
        throws javax.xml.bind.JAXBException
    {
        return new com.sun.identity.wsfederation.jaxb.wsspolicy.impl.SymmetricBindingElementImpl();
    }

    /**
     * Create an instance of WssSamlV11Token10Element
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public com.sun.identity.wsfederation.jaxb.wsspolicy.WssSamlV11Token10Element createWssSamlV11Token10Element()
        throws javax.xml.bind.JAXBException
    {
        return new com.sun.identity.wsfederation.jaxb.wsspolicy.impl.WssSamlV11Token10ElementImpl();
    }

    /**
     * Create an instance of ProtectTokensElement
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public com.sun.identity.wsfederation.jaxb.wsspolicy.ProtectTokensElement createProtectTokensElement()
        throws javax.xml.bind.JAXBException
    {
        return new com.sun.identity.wsfederation.jaxb.wsspolicy.impl.ProtectTokensElementImpl();
    }

    /**
     * Create an instance of IssuedTokenType
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public com.sun.identity.wsfederation.jaxb.wsspolicy.IssuedTokenType createIssuedTokenType()
        throws javax.xml.bind.JAXBException
    {
        return new com.sun.identity.wsfederation.jaxb.wsspolicy.impl.IssuedTokenTypeImpl();
    }

    /**
     * Create an instance of RequiredElementsElement
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public com.sun.identity.wsfederation.jaxb.wsspolicy.RequiredElementsElement createRequiredElementsElement()
        throws javax.xml.bind.JAXBException
    {
        return new com.sun.identity.wsfederation.jaxb.wsspolicy.impl.RequiredElementsElementImpl();
    }

    /**
     * Create an instance of LaxTsFirstElement
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public com.sun.identity.wsfederation.jaxb.wsspolicy.LaxTsFirstElement createLaxTsFirstElement()
        throws javax.xml.bind.JAXBException
    {
        return new com.sun.identity.wsfederation.jaxb.wsspolicy.impl.LaxTsFirstElementImpl();
    }

    /**
     * Create an instance of RequireThumbprintReferenceElement
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public com.sun.identity.wsfederation.jaxb.wsspolicy.RequireThumbprintReferenceElement createRequireThumbprintReferenceElement()
        throws javax.xml.bind.JAXBException
    {
        return new com.sun.identity.wsfederation.jaxb.wsspolicy.impl.RequireThumbprintReferenceElementImpl();
    }

    /**
     * Create an instance of EmptyType
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public com.sun.identity.wsfederation.jaxb.wsspolicy.EmptyType createEmptyType()
        throws javax.xml.bind.JAXBException
    {
        return new com.sun.identity.wsfederation.jaxb.wsspolicy.impl.EmptyTypeImpl();
    }

    /**
     * Create an instance of SpnegoContextTokenType
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public com.sun.identity.wsfederation.jaxb.wsspolicy.SpnegoContextTokenType createSpnegoContextTokenType()
        throws javax.xml.bind.JAXBException
    {
        return new com.sun.identity.wsfederation.jaxb.wsspolicy.impl.SpnegoContextTokenTypeImpl();
    }

    /**
     * Create an instance of BootstrapPolicyElement
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public com.sun.identity.wsfederation.jaxb.wsspolicy.BootstrapPolicyElement createBootstrapPolicyElement()
        throws javax.xml.bind.JAXBException
    {
        return new com.sun.identity.wsfederation.jaxb.wsspolicy.impl.BootstrapPolicyElementImpl();
    }

    /**
     * Create an instance of WssX509V1Token11Element
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public com.sun.identity.wsfederation.jaxb.wsspolicy.WssX509V1Token11Element createWssX509V1Token11Element()
        throws javax.xml.bind.JAXBException
    {
        return new com.sun.identity.wsfederation.jaxb.wsspolicy.impl.WssX509V1Token11ElementImpl();
    }

    /**
     * Create an instance of RelTokenElement
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public com.sun.identity.wsfederation.jaxb.wsspolicy.RelTokenElement createRelTokenElement()
        throws javax.xml.bind.JAXBException
    {
        return new com.sun.identity.wsfederation.jaxb.wsspolicy.impl.RelTokenElementImpl();
    }

    /**
     * Create an instance of UsernameTokenElement
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public com.sun.identity.wsfederation.jaxb.wsspolicy.UsernameTokenElement createUsernameTokenElement()
        throws javax.xml.bind.JAXBException
    {
        return new com.sun.identity.wsfederation.jaxb.wsspolicy.impl.UsernameTokenElementImpl();
    }

    /**
     * Create an instance of RequireInternalReferenceElement
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public com.sun.identity.wsfederation.jaxb.wsspolicy.RequireInternalReferenceElement createRequireInternalReferenceElement()
        throws javax.xml.bind.JAXBException
    {
        return new com.sun.identity.wsfederation.jaxb.wsspolicy.impl.RequireInternalReferenceElementImpl();
    }

    /**
     * Create an instance of SpnegoContextTokenElement
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public com.sun.identity.wsfederation.jaxb.wsspolicy.SpnegoContextTokenElement createSpnegoContextTokenElement()
        throws javax.xml.bind.JAXBException
    {
        return new com.sun.identity.wsfederation.jaxb.wsspolicy.impl.SpnegoContextTokenElementImpl();
    }

    /**
     * Create an instance of EndorsingEncryptedSupportingTokensElement
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public com.sun.identity.wsfederation.jaxb.wsspolicy.EndorsingEncryptedSupportingTokensElement createEndorsingEncryptedSupportingTokensElement()
        throws javax.xml.bind.JAXBException
    {
        return new com.sun.identity.wsfederation.jaxb.wsspolicy.impl.EndorsingEncryptedSupportingTokensElementImpl();
    }

    /**
     * Create an instance of Basic128Sha256Rsa15Element
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public com.sun.identity.wsfederation.jaxb.wsspolicy.Basic128Sha256Rsa15Element createBasic128Sha256Rsa15Element()
        throws javax.xml.bind.JAXBException
    {
        return new com.sun.identity.wsfederation.jaxb.wsspolicy.impl.Basic128Sha256Rsa15ElementImpl();
    }

    /**
     * Create an instance of Basic256Sha256Element
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public com.sun.identity.wsfederation.jaxb.wsspolicy.Basic256Sha256Element createBasic256Sha256Element()
        throws javax.xml.bind.JAXBException
    {
        return new com.sun.identity.wsfederation.jaxb.wsspolicy.impl.Basic256Sha256ElementImpl();
    }

    /**
     * Create an instance of WssGssKerberosV5ApReqToken11Element
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public com.sun.identity.wsfederation.jaxb.wsspolicy.WssGssKerberosV5ApReqToken11Element createWssGssKerberosV5ApReqToken11Element()
        throws javax.xml.bind.JAXBException
    {
        return new com.sun.identity.wsfederation.jaxb.wsspolicy.impl.WssGssKerberosV5ApReqToken11ElementImpl();
    }

    /**
     * Create an instance of RequireRequestSecurityTokenCollectionElement
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public com.sun.identity.wsfederation.jaxb.wsspolicy.RequireRequestSecurityTokenCollectionElement createRequireRequestSecurityTokenCollectionElement()
        throws javax.xml.bind.JAXBException
    {
        return new com.sun.identity.wsfederation.jaxb.wsspolicy.impl.RequireRequestSecurityTokenCollectionElementImpl();
    }

    /**
     * Create an instance of RequireKeyIdentifierReferenceElement
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public com.sun.identity.wsfederation.jaxb.wsspolicy.RequireKeyIdentifierReferenceElement createRequireKeyIdentifierReferenceElement()
        throws javax.xml.bind.JAXBException
    {
        return new com.sun.identity.wsfederation.jaxb.wsspolicy.impl.RequireKeyIdentifierReferenceElementImpl();
    }

}
