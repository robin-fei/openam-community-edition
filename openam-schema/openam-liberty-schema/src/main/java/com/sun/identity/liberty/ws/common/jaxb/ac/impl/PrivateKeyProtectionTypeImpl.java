//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v1.0.6-b27-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2012.06.11 at 10:33:54 AM PDT 
//


package com.sun.identity.liberty.ws.common.jaxb.ac.impl;

public class PrivateKeyProtectionTypeImpl implements com.sun.identity.liberty.ws.common.jaxb.ac.PrivateKeyProtectionType, com.sun.xml.bind.JAXBObject, com.sun.identity.federation.jaxb.entityconfig.impl.runtime.UnmarshallableObject, com.sun.identity.federation.jaxb.entityconfig.impl.runtime.XMLSerializable, com.sun.identity.federation.jaxb.entityconfig.impl.runtime.ValidatableObject
{

    protected com.sun.xml.bind.util.ListImpl _Extension;
    protected com.sun.identity.liberty.ws.common.jaxb.ac.KeySharingType _KeySharing;
    protected com.sun.identity.liberty.ws.common.jaxb.ac.KeyStorageType _KeyStorage;
    protected com.sun.identity.liberty.ws.common.jaxb.ac.KeyActivationType _KeyActivation;
    public final static java.lang.Class version = (com.sun.identity.liberty.ws.common.jaxb.ac.impl.JAXBVersion.class);
    private static com.sun.msv.grammar.Grammar schemaFragment;

    private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
        return (com.sun.identity.liberty.ws.common.jaxb.ac.PrivateKeyProtectionType.class);
    }

    protected com.sun.xml.bind.util.ListImpl _getExtension() {
        if (_Extension == null) {
            _Extension = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
        }
        return _Extension;
    }

    public java.util.List getExtension() {
        return _getExtension();
    }

    public com.sun.identity.liberty.ws.common.jaxb.ac.KeySharingType getKeySharing() {
        return _KeySharing;
    }

    public void setKeySharing(com.sun.identity.liberty.ws.common.jaxb.ac.KeySharingType value) {
        _KeySharing = value;
    }

    public com.sun.identity.liberty.ws.common.jaxb.ac.KeyStorageType getKeyStorage() {
        return _KeyStorage;
    }

    public void setKeyStorage(com.sun.identity.liberty.ws.common.jaxb.ac.KeyStorageType value) {
        _KeyStorage = value;
    }

    public com.sun.identity.liberty.ws.common.jaxb.ac.KeyActivationType getKeyActivation() {
        return _KeyActivation;
    }

    public void setKeyActivation(com.sun.identity.liberty.ws.common.jaxb.ac.KeyActivationType value) {
        _KeyActivation = value;
    }

    public com.sun.identity.federation.jaxb.entityconfig.impl.runtime.UnmarshallingEventHandler createUnmarshaller(com.sun.identity.federation.jaxb.entityconfig.impl.runtime.UnmarshallingContext context) {
        return new com.sun.identity.liberty.ws.common.jaxb.ac.impl.PrivateKeyProtectionTypeImpl.Unmarshaller(context);
    }

    public void serializeBody(com.sun.identity.federation.jaxb.entityconfig.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        int idx1 = 0;
        final int len1 = ((_Extension == null)? 0 :_Extension.size());
        if (_KeyActivation!= null) {
            if (_KeyActivation instanceof javax.xml.bind.Element) {
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _KeyActivation), "KeyActivation");
            } else {
                context.startElement("urn:liberty:ac:2003-08", "KeyActivation");
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _KeyActivation), "KeyActivation");
                context.endNamespaceDecls();
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _KeyActivation), "KeyActivation");
                context.endAttributes();
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _KeyActivation), "KeyActivation");
                context.endElement();
            }
        }
        if (_KeyStorage!= null) {
            if (_KeyStorage instanceof javax.xml.bind.Element) {
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _KeyStorage), "KeyStorage");
            } else {
                context.startElement("urn:liberty:ac:2003-08", "KeyStorage");
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _KeyStorage), "KeyStorage");
                context.endNamespaceDecls();
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _KeyStorage), "KeyStorage");
                context.endAttributes();
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _KeyStorage), "KeyStorage");
                context.endElement();
            }
        }
        if (_KeySharing!= null) {
            if (_KeySharing instanceof javax.xml.bind.Element) {
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _KeySharing), "KeySharing");
            } else {
                context.startElement("urn:liberty:ac:2003-08", "KeySharing");
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _KeySharing), "KeySharing");
                context.endNamespaceDecls();
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _KeySharing), "KeySharing");
                context.endAttributes();
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _KeySharing), "KeySharing");
                context.endElement();
            }
        }
        while (idx1 != len1) {
            if (_Extension.get(idx1) instanceof javax.xml.bind.Element) {
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _Extension.get(idx1 ++)), "Extension");
            } else {
                context.startElement("urn:liberty:ac:2003-08", "Extension");
                int idx_6 = idx1;
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Extension.get(idx_6 ++)), "Extension");
                context.endNamespaceDecls();
                int idx_7 = idx1;
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Extension.get(idx_7 ++)), "Extension");
                context.endAttributes();
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _Extension.get(idx1 ++)), "Extension");
                context.endElement();
            }
        }
    }

    public void serializeAttributes(com.sun.identity.federation.jaxb.entityconfig.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        int idx1 = 0;
        final int len1 = ((_Extension == null)? 0 :_Extension.size());
        if (_KeyActivation!= null) {
            if (_KeyActivation instanceof javax.xml.bind.Element) {
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _KeyActivation), "KeyActivation");
            }
        }
        if (_KeyStorage!= null) {
            if (_KeyStorage instanceof javax.xml.bind.Element) {
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _KeyStorage), "KeyStorage");
            }
        }
        if (_KeySharing!= null) {
            if (_KeySharing instanceof javax.xml.bind.Element) {
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _KeySharing), "KeySharing");
            }
        }
        while (idx1 != len1) {
            if (_Extension.get(idx1) instanceof javax.xml.bind.Element) {
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Extension.get(idx1 ++)), "Extension");
            } else {
                idx1 += 1;
            }
        }
    }

    public void serializeURIs(com.sun.identity.federation.jaxb.entityconfig.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        int idx1 = 0;
        final int len1 = ((_Extension == null)? 0 :_Extension.size());
        if (_KeyActivation!= null) {
            if (_KeyActivation instanceof javax.xml.bind.Element) {
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _KeyActivation), "KeyActivation");
            }
        }
        if (_KeyStorage!= null) {
            if (_KeyStorage instanceof javax.xml.bind.Element) {
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _KeyStorage), "KeyStorage");
            }
        }
        if (_KeySharing!= null) {
            if (_KeySharing instanceof javax.xml.bind.Element) {
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _KeySharing), "KeySharing");
            }
        }
        while (idx1 != len1) {
            if (_Extension.get(idx1) instanceof javax.xml.bind.Element) {
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Extension.get(idx1 ++)), "Extension");
            } else {
                idx1 += 1;
            }
        }
    }

    public java.lang.Class getPrimaryInterface() {
        return (com.sun.identity.liberty.ws.common.jaxb.ac.PrivateKeyProtectionType.class);
    }

    public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
        if (schemaFragment == null) {
            schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.su"
+"n.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gra"
+"mmar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expressi"
+"on\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0002L\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000b"
+"expandedExpq\u0000~\u0000\u0002xpppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsr\u0000\u001dcom.sun.msv.grammar."
+"ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0001ppsq\u0000~\u0000\bsr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5"
+"\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000psr\u0000\'com.sun.msv.grammar.trex.ElementPatter"
+"n\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\tnameClasst\u0000\u001fLcom/sun/msv/grammar/NameClass;xr"
+"\u0000\u001ecom.sun.msv.grammar.ElementExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUndeclar"
+"edAttributesL\u0000\fcontentModelq\u0000~\u0000\u0002xq\u0000~\u0000\u0003q\u0000~\u0000\fp\u0000sq\u0000~\u0000\bppsr\u0000 com"
+".sun.msv.grammar.OneOrMoreExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001ccom.sun.msv.gram"
+"mar.UnaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0003expq\u0000~\u0000\u0002xq\u0000~\u0000\u0003q\u0000~\u0000\fpsr\u0000 com.sun.ms"
+"v.grammar.AttributeExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnameClassq\u0000~\u0000"
+"\u000exq\u0000~\u0000\u0003q\u0000~\u0000\fpsr\u00002com.sun.msv.grammar.Expression$AnyStringExp"
+"ression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003sq\u0000~\u0000\u000b\u0001q\u0000~\u0000\u0018sr\u0000 com.sun.msv.grammar."
+"AnyNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.sun.msv.grammar.NameClass\u0000\u0000\u0000\u0000"
+"\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.sun.msv.grammar.Expression$EpsilonExpressio"
+"n\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003q\u0000~\u0000\u0019q\u0000~\u0000\u001esr\u0000#com.sun.msv.grammar.SimpleNa"
+"meClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNamet\u0000\u0012Ljava/lang/String;L\u0000\fnamesp"
+"aceURIq\u0000~\u0000 xq\u0000~\u0000\u001bt\u0000?com.sun.identity.liberty.ws.common.jaxb."
+"ac.KeyActivationElementt\u0000+http://java.sun.com/jaxb/xjc/dummy"
+"-elementssq\u0000~\u0000\rq\u0000~\u0000\fp\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\rpp\u0000sq\u0000~\u0000\bppsq\u0000~\u0000\u0012q\u0000~\u0000\fps"
+"q\u0000~\u0000\u0015q\u0000~\u0000\fpq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000<com.sun.identity.liberty."
+"ws.common.jaxb.ac.KeyActivationTypeq\u0000~\u0000#sq\u0000~\u0000\bppsq\u0000~\u0000\u0015q\u0000~\u0000\fp"
+"sr\u0000\u001bcom.sun.msv.grammar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/relax"
+"ng/datatype/Datatype;L\u0000\u0006exceptq\u0000~\u0000\u0002L\u0000\u0004namet\u0000\u001dLcom/sun/msv/ut"
+"il/StringPair;xq\u0000~\u0000\u0003q\u0000~\u0000\fpsr\u0000\"com.sun.msv.datatype.xsd.Qname"
+"Type\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000*com.sun.msv.datatype.xsd.BuiltinAtomicTyp"
+"e\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.datatype.xsd.ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0001\u0002\u0000\u0000xr\u0000\'com.sun.msv.datatype.xsd.XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000"
+"\fnamespaceUriq\u0000~\u0000 L\u0000\btypeNameq\u0000~\u0000 L\u0000\nwhiteSpacet\u0000.Lcom/sun/m"
+"sv/datatype/xsd/WhiteSpaceProcessor;xpt\u0000 http://www.w3.org/2"
+"001/XMLSchemat\u0000\u0005QNamesr\u00005com.sun.msv.datatype.xsd.WhiteSpace"
+"Processor$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun.msv.datatype.xsd.Wh"
+"iteSpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.sun.msv.grammar.Expres"
+"sion$NullSetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003q\u0000~\u0000\fpsr\u0000\u001bcom.sun.msv"
+".util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000 L\u0000\fnamespaceURIq"
+"\u0000~\u0000 xpq\u0000~\u00009q\u0000~\u00008sq\u0000~\u0000\u001ft\u0000\u0004typet\u0000)http://www.w3.org/2001/XMLSc"
+"hema-instanceq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000\rKeyActivationt\u0000\u0016urn:liberty:ac:20"
+"03-08q\u0000~\u0000\u001esq\u0000~\u0000\bppsq\u0000~\u0000\bq\u0000~\u0000\fpsq\u0000~\u0000\rq\u0000~\u0000\fp\u0000sq\u0000~\u0000\bppsq\u0000~\u0000\u0012q\u0000~"
+"\u0000\fpsq\u0000~\u0000\u0015q\u0000~\u0000\fpq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000<com.sun.identity.libe"
+"rty.ws.common.jaxb.ac.KeyStorageElementq\u0000~\u0000#sq\u0000~\u0000\rq\u0000~\u0000\fp\u0000sq\u0000"
+"~\u0000\u0000ppsq\u0000~\u0000\rpp\u0000sq\u0000~\u0000\bppsq\u0000~\u0000\u0012q\u0000~\u0000\fpsq\u0000~\u0000\u0015q\u0000~\u0000\fpq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000"
+"\u001esq\u0000~\u0000\u001ft\u00009com.sun.identity.liberty.ws.common.jaxb.ac.KeyStor"
+"ageTypeq\u0000~\u0000#sq\u0000~\u0000\bppsq\u0000~\u0000\u0015q\u0000~\u0000\fpq\u0000~\u00001q\u0000~\u0000Aq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000\nKeyS"
+"torageq\u0000~\u0000Fq\u0000~\u0000\u001esq\u0000~\u0000\bppsq\u0000~\u0000\bq\u0000~\u0000\fpsq\u0000~\u0000\rq\u0000~\u0000\fp\u0000sq\u0000~\u0000\bppsq\u0000"
+"~\u0000\u0012q\u0000~\u0000\fpsq\u0000~\u0000\u0015q\u0000~\u0000\fpq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000<com.sun.identit"
+"y.liberty.ws.common.jaxb.ac.KeySharingElementq\u0000~\u0000#sq\u0000~\u0000\rq\u0000~\u0000"
+"\fp\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\rpp\u0000sq\u0000~\u0000\bppsq\u0000~\u0000\u0012q\u0000~\u0000\fpsq\u0000~\u0000\u0015q\u0000~\u0000\fpq\u0000~\u0000\u0018q\u0000~"
+"\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u00009com.sun.identity.liberty.ws.common.jaxb.ac.K"
+"eySharingTypeq\u0000~\u0000#sq\u0000~\u0000\bppsq\u0000~\u0000\u0015q\u0000~\u0000\fpq\u0000~\u00001q\u0000~\u0000Aq\u0000~\u0000\u001esq\u0000~\u0000\u001ft"
+"\u0000\nKeySharingq\u0000~\u0000Fq\u0000~\u0000\u001esq\u0000~\u0000\bppsq\u0000~\u0000\u0012q\u0000~\u0000\fpsq\u0000~\u0000\bq\u0000~\u0000\fpsq\u0000~\u0000\r"
+"q\u0000~\u0000\fp\u0000sq\u0000~\u0000\bppsq\u0000~\u0000\u0012q\u0000~\u0000\fpsq\u0000~\u0000\u0015q\u0000~\u0000\fpq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001f"
+"t\u0000;com.sun.identity.liberty.ws.common.jaxb.ac.ExtensionEleme"
+"ntq\u0000~\u0000#sq\u0000~\u0000\rq\u0000~\u0000\fp\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\rpp\u0000sq\u0000~\u0000\bppsq\u0000~\u0000\u0012q\u0000~\u0000\fpsq\u0000"
+"~\u0000\u0015q\u0000~\u0000\fpq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u00008com.sun.identity.liberty.ws"
+".common.jaxb.ac.ExtensionTypeq\u0000~\u0000#sq\u0000~\u0000\bppsq\u0000~\u0000\u0015q\u0000~\u0000\fpq\u0000~\u00001q"
+"\u0000~\u0000Aq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000\tExtensionq\u0000~\u0000Fq\u0000~\u0000\u001esr\u0000\"com.sun.msv.grammar"
+".ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun/msv/grammar"
+"/ExpressionPool$ClosedHash;xpsr\u0000-com.sun.msv.grammar.Express"
+"ionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0003\u0000\u0003I\u0000\u0005countB\u0000\rstreamVersionL\u0000\u0006pare"
+"ntt\u0000$Lcom/sun/msv/grammar/ExpressionPool;xp\u0000\u0000\u0000$\u0001pq\u0000~\u0000Hq\u0000~\u0000\\q"
+"\u0000~\u0000qq\u0000~\u0000oq\u0000~\u0000pq\u0000~\u0000\u0014q\u0000~\u0000(q\u0000~\u0000Kq\u0000~\u0000Sq\u0000~\u0000_q\u0000~\u0000gq\u0000~\u0000tq\u0000~\u0000|q\u0000~\u0000\u0007q"
+"\u0000~\u0000\u0006q\u0000~\u0000\u0011q\u0000~\u0000\'q\u0000~\u0000Jq\u0000~\u0000Rq\u0000~\u0000^q\u0000~\u0000fq\u0000~\u0000sq\u0000~\u0000{q\u0000~\u0000%q\u0000~\u0000Pq\u0000~\u0000dq"
+"\u0000~\u0000yq\u0000~\u0000\u0005q\u0000~\u0000\tq\u0000~\u0000Gq\u0000~\u0000[q\u0000~\u0000,q\u0000~\u0000Wq\u0000~\u0000kq\u0000~\u0000\u0080q\u0000~\u0000\nx"));
        }
        return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
    }

    public class Unmarshaller
        extends com.sun.identity.federation.jaxb.entityconfig.impl.runtime.AbstractUnmarshallingEventHandlerImpl
    {


        public Unmarshaller(com.sun.identity.federation.jaxb.entityconfig.impl.runtime.UnmarshallingContext context) {
            super(context, "-------------");
        }

        protected Unmarshaller(com.sun.identity.federation.jaxb.entityconfig.impl.runtime.UnmarshallingContext context, int startState) {
            this(context);
            state = startState;
        }

        public java.lang.Object owner() {
            return com.sun.identity.liberty.ws.common.jaxb.ac.impl.PrivateKeyProtectionTypeImpl.this;
        }

        public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  11 :
                        if (("ActivationPin" == ___local)&&("urn:liberty:ac:2003-08" == ___uri)) {
                            _KeyActivation = ((com.sun.identity.liberty.ws.common.jaxb.ac.impl.KeyActivationTypeImpl) spawnChildFromEnterElement((com.sun.identity.liberty.ws.common.jaxb.ac.impl.KeyActivationTypeImpl.class), 12, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("ActivationPin" == ___local)&&("urn:liberty:ac:2003-08" == ___uri)) {
                            _KeyActivation = ((com.sun.identity.liberty.ws.common.jaxb.ac.impl.KeyActivationTypeImpl) spawnChildFromEnterElement((com.sun.identity.liberty.ws.common.jaxb.ac.impl.KeyActivationTypeImpl.class), 12, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("Extension" == ___local)&&("urn:liberty:ac:2003-08" == ___uri)) {
                            _KeyActivation = ((com.sun.identity.liberty.ws.common.jaxb.ac.impl.KeyActivationTypeImpl) spawnChildFromEnterElement((com.sun.identity.liberty.ws.common.jaxb.ac.impl.KeyActivationTypeImpl.class), 12, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("Extension" == ___local)&&("urn:liberty:ac:2003-08" == ___uri)) {
                            _KeyActivation = ((com.sun.identity.liberty.ws.common.jaxb.ac.impl.KeyActivationTypeImpl) spawnChildFromEnterElement((com.sun.identity.liberty.ws.common.jaxb.ac.impl.KeyActivationTypeImpl.class), 12, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        break;
                    case  3 :
                        if (("Extension" == ___local)&&("urn:liberty:ac:2003-08" == ___uri)) {
                            _getExtension().add(((com.sun.identity.liberty.ws.common.jaxb.ac.impl.ExtensionElementImpl) spawnChildFromEnterElement((com.sun.identity.liberty.ws.common.jaxb.ac.impl.ExtensionElementImpl.class), 6, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("Extension" == ___local)&&("urn:liberty:ac:2003-08" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 4;
                            return ;
                        }
                        state = 6;
                        continue outer;
                    case  0 :
                        if (("KeyActivation" == ___local)&&("urn:liberty:ac:2003-08" == ___uri)) {
                            _KeyActivation = ((com.sun.identity.liberty.ws.common.jaxb.ac.impl.KeyActivationElementImpl) spawnChildFromEnterElement((com.sun.identity.liberty.ws.common.jaxb.ac.impl.KeyActivationElementImpl.class), 1, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("KeyActivation" == ___local)&&("urn:liberty:ac:2003-08" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 11;
                            return ;
                        }
                        state = 1;
                        continue outer;
                    case  1 :
                        if (("KeyStorage" == ___local)&&("urn:liberty:ac:2003-08" == ___uri)) {
                            _KeyStorage = ((com.sun.identity.liberty.ws.common.jaxb.ac.impl.KeyStorageElementImpl) spawnChildFromEnterElement((com.sun.identity.liberty.ws.common.jaxb.ac.impl.KeyStorageElementImpl.class), 2, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("KeyStorage" == ___local)&&("urn:liberty:ac:2003-08" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 9;
                            return ;
                        }
                        state = 2;
                        continue outer;
                    case  7 :
                        attIdx = context.getAttribute("", "sharing");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        break;
                    case  2 :
                        if (("KeySharing" == ___local)&&("urn:liberty:ac:2003-08" == ___uri)) {
                            _KeySharing = ((com.sun.identity.liberty.ws.common.jaxb.ac.impl.KeySharingElementImpl) spawnChildFromEnterElement((com.sun.identity.liberty.ws.common.jaxb.ac.impl.KeySharingElementImpl.class), 3, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("KeySharing" == ___local)&&("urn:liberty:ac:2003-08" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 7;
                            return ;
                        }
                        state = 3;
                        continue outer;
                    case  4 :
                        if (!(("" == ___uri)||("urn:liberty:ac:2003-08" == ___uri))) {
                            _getExtension().add(((com.sun.identity.liberty.ws.common.jaxb.ac.impl.ExtensionTypeImpl) spawnChildFromEnterElement((com.sun.identity.liberty.ws.common.jaxb.ac.impl.ExtensionTypeImpl.class), 5, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        break;
                    case  6 :
                        if (("Extension" == ___local)&&("urn:liberty:ac:2003-08" == ___uri)) {
                            _getExtension().add(((com.sun.identity.liberty.ws.common.jaxb.ac.impl.ExtensionElementImpl) spawnChildFromEnterElement((com.sun.identity.liberty.ws.common.jaxb.ac.impl.ExtensionElementImpl.class), 6, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("Extension" == ___local)&&("urn:liberty:ac:2003-08" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 4;
                            return ;
                        }
                        revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                        return ;
                    case  9 :
                        attIdx = context.getAttribute("", "medium");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        break;
                }
                super.enterElement(___uri, ___local, ___qname, __atts);
                break;
            }
        }

        public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  5 :
                        if (("Extension" == ___local)&&("urn:liberty:ac:2003-08" == ___uri)) {
                            context.popAttributes();
                            state = 6;
                            return ;
                        }
                        break;
                    case  10 :
                        if (("KeyStorage" == ___local)&&("urn:liberty:ac:2003-08" == ___uri)) {
                            context.popAttributes();
                            state = 2;
                            return ;
                        }
                        break;
                    case  3 :
                        state = 6;
                        continue outer;
                    case  0 :
                        state = 1;
                        continue outer;
                    case  12 :
                        if (("KeyActivation" == ___local)&&("urn:liberty:ac:2003-08" == ___uri)) {
                            context.popAttributes();
                            state = 1;
                            return ;
                        }
                        break;
                    case  1 :
                        state = 2;
                        continue outer;
                    case  8 :
                        if (("KeySharing" == ___local)&&("urn:liberty:ac:2003-08" == ___uri)) {
                            context.popAttributes();
                            state = 3;
                            return ;
                        }
                        break;
                    case  7 :
                        attIdx = context.getAttribute("", "sharing");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                    case  2 :
                        state = 3;
                        continue outer;
                    case  6 :
                        revertToParentFromLeaveElement(___uri, ___local, ___qname);
                        return ;
                    case  9 :
                        attIdx = context.getAttribute("", "medium");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                }
                super.leaveElement(___uri, ___local, ___qname);
                break;
            }
        }

        public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  3 :
                        state = 6;
                        continue outer;
                    case  0 :
                        state = 1;
                        continue outer;
                    case  1 :
                        state = 2;
                        continue outer;
                    case  7 :
                        if (("sharing" == ___local)&&("" == ___uri)) {
                            _KeySharing = ((com.sun.identity.liberty.ws.common.jaxb.ac.impl.KeySharingTypeImpl) spawnChildFromEnterAttribute((com.sun.identity.liberty.ws.common.jaxb.ac.impl.KeySharingTypeImpl.class), 8, ___uri, ___local, ___qname));
                            return ;
                        }
                        break;
                    case  2 :
                        state = 3;
                        continue outer;
                    case  6 :
                        revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                        return ;
                    case  9 :
                        if (("medium" == ___local)&&("" == ___uri)) {
                            _KeyStorage = ((com.sun.identity.liberty.ws.common.jaxb.ac.impl.KeyStorageTypeImpl) spawnChildFromEnterAttribute((com.sun.identity.liberty.ws.common.jaxb.ac.impl.KeyStorageTypeImpl.class), 10, ___uri, ___local, ___qname));
                            return ;
                        }
                        break;
                }
                super.enterAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  3 :
                        state = 6;
                        continue outer;
                    case  0 :
                        state = 1;
                        continue outer;
                    case  1 :
                        state = 2;
                        continue outer;
                    case  7 :
                        attIdx = context.getAttribute("", "sharing");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                    case  2 :
                        state = 3;
                        continue outer;
                    case  6 :
                        revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                        return ;
                    case  9 :
                        attIdx = context.getAttribute("", "medium");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                }
                super.leaveAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void handleText(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                try {
                    switch (state) {
                        case  3 :
                            state = 6;
                            continue outer;
                        case  0 :
                            state = 1;
                            continue outer;
                        case  1 :
                            state = 2;
                            continue outer;
                        case  7 :
                            attIdx = context.getAttribute("", "sharing");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            break;
                        case  2 :
                            state = 3;
                            continue outer;
                        case  6 :
                            revertToParentFromText(value);
                            return ;
                        case  9 :
                            attIdx = context.getAttribute("", "medium");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            break;
                    }
                } catch (java.lang.RuntimeException e) {
                    handleUnexpectedTextException(value, e);
                }
                break;
            }
        }

    }

}
