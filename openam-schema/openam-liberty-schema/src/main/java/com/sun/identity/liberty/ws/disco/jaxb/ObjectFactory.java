//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v1.0.6-b27-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2012.06.11 at 10:33:54 AM PDT 
//


package com.sun.identity.liberty.ws.disco.jaxb;


/**
 * This object contains factory methods for each 
 * Java content interface and Java element interface 
 * generated in the com.sun.identity.liberty.ws.disco.jaxb package. 
 * <p>An ObjectFactory allows you to programatically 
 * construct new instances of the Java representation 
 * for XML content. The Java representation of XML 
 * content can consist of schema derived interfaces 
 * and classes representing the binding of schema 
 * type definitions, element declarations and model 
 * groups.  Factory methods for each of these are 
 * provided in this class.
 * 
 */
public class ObjectFactory
    extends com.sun.identity.federation.jaxb.entityconfig.impl.runtime.DefaultJAXBContextImpl
{

    private static java.util.HashMap defaultImplementations = new java.util.HashMap(45, 0.75F);
    private static java.util.HashMap rootTagMap = new java.util.HashMap();
    public final static com.sun.identity.federation.jaxb.entityconfig.impl.runtime.GrammarInfo grammarInfo = new com.sun.identity.federation.jaxb.entityconfig.impl.runtime.GrammarInfoImpl(rootTagMap, defaultImplementations, (com.sun.identity.liberty.ws.disco.jaxb.ObjectFactory.class));
    public final static java.lang.Class version = (com.sun.identity.liberty.ws.disco.jaxb.impl.JAXBVersion.class);

    static {
        defaultImplementations.put((com.sun.identity.liberty.ws.disco.jaxb.ResourceOfferingElement.class), "com.sun.identity.liberty.ws.disco.jaxb.impl.ResourceOfferingElementImpl");
        defaultImplementations.put((com.sun.identity.liberty.ws.disco.jaxb.QueryElement.class), "com.sun.identity.liberty.ws.disco.jaxb.impl.QueryElementImpl");
        defaultImplementations.put((com.sun.identity.liberty.ws.disco.jaxb.EmptyType.class), "com.sun.identity.liberty.ws.disco.jaxb.impl.EmptyTypeImpl");
        defaultImplementations.put((com.sun.identity.liberty.ws.disco.jaxb.StatusType.class), "com.sun.identity.liberty.ws.disco.jaxb.impl.StatusTypeImpl");
        defaultImplementations.put((com.sun.identity.liberty.ws.disco.jaxb.QueryType.class), "com.sun.identity.liberty.ws.disco.jaxb.impl.QueryTypeImpl");
        defaultImplementations.put((com.sun.identity.liberty.ws.disco.jaxb.ModifyResponseElement.class), "com.sun.identity.liberty.ws.disco.jaxb.impl.ModifyResponseElementImpl");
        defaultImplementations.put((com.sun.identity.liberty.ws.disco.jaxb.ExtensionElement.class), "com.sun.identity.liberty.ws.disco.jaxb.impl.ExtensionElementImpl");
        defaultImplementations.put((com.sun.identity.liberty.ws.disco.jaxb.OptionsType.class), "com.sun.identity.liberty.ws.disco.jaxb.impl.OptionsTypeImpl");
        defaultImplementations.put((com.sun.identity.liberty.ws.disco.jaxb.AuthenticateSessionContextElement.class), "com.sun.identity.liberty.ws.disco.jaxb.impl.AuthenticateSessionContextElementImpl");
        defaultImplementations.put((com.sun.identity.liberty.ws.disco.jaxb.ModifyResponseType.class), "com.sun.identity.liberty.ws.disco.jaxb.impl.ModifyResponseTypeImpl");
        defaultImplementations.put((com.sun.identity.liberty.ws.disco.jaxb.ExtensionType.class), "com.sun.identity.liberty.ws.disco.jaxb.impl.ExtensionTypeImpl");
        defaultImplementations.put((com.sun.identity.liberty.ws.disco.jaxb.ResourceIDType.class), "com.sun.identity.liberty.ws.disco.jaxb.impl.ResourceIDTypeImpl");
        defaultImplementations.put((com.sun.identity.liberty.ws.disco.jaxb.AuthenticateRequesterElement.class), "com.sun.identity.liberty.ws.disco.jaxb.impl.AuthenticateRequesterElementImpl");
        defaultImplementations.put((com.sun.identity.liberty.ws.disco.jaxb.EncryptedResourceIDType.class), "com.sun.identity.liberty.ws.disco.jaxb.impl.EncryptedResourceIDTypeImpl");
        defaultImplementations.put((com.sun.identity.liberty.ws.disco.jaxb.RemoveEntryType.class), "com.sun.identity.liberty.ws.disco.jaxb.impl.RemoveEntryTypeImpl");
        defaultImplementations.put((com.sun.identity.liberty.ws.disco.jaxb.ServiceTypeElement.class), "com.sun.identity.liberty.ws.disco.jaxb.impl.ServiceTypeElementImpl");
        defaultImplementations.put((com.sun.identity.liberty.ws.disco.jaxb.ResourceOfferingType.class), "com.sun.identity.liberty.ws.disco.jaxb.impl.ResourceOfferingTypeImpl");
        defaultImplementations.put((com.sun.identity.liberty.ws.disco.jaxb.DescriptionType.class), "com.sun.identity.liberty.ws.disco.jaxb.impl.DescriptionTypeImpl");
        defaultImplementations.put((com.sun.identity.liberty.ws.disco.jaxb.EncryptedResourceIDElement.class), "com.sun.identity.liberty.ws.disco.jaxb.impl.EncryptedResourceIDElementImpl");
        defaultImplementations.put((com.sun.identity.liberty.ws.disco.jaxb.StatusElement.class), "com.sun.identity.liberty.ws.disco.jaxb.impl.StatusElementImpl");
        defaultImplementations.put((com.sun.identity.liberty.ws.disco.jaxb.EncryptResourceIDElement.class), "com.sun.identity.liberty.ws.disco.jaxb.impl.EncryptResourceIDElementImpl");
        defaultImplementations.put((com.sun.identity.liberty.ws.disco.jaxb.QueryType.RequestedServiceTypeType.class), "com.sun.identity.liberty.ws.disco.jaxb.impl.QueryTypeImpl$RequestedServiceTypeTypeImpl");
        defaultImplementations.put((com.sun.identity.liberty.ws.disco.jaxb.QueryResponseElement.class), "com.sun.identity.liberty.ws.disco.jaxb.impl.QueryResponseElementImpl");
        defaultImplementations.put((com.sun.identity.liberty.ws.disco.jaxb.QueryResponseType.class), "com.sun.identity.liberty.ws.disco.jaxb.impl.QueryResponseTypeImpl");
        defaultImplementations.put((com.sun.identity.liberty.ws.disco.jaxb.OptionsElement.class), "com.sun.identity.liberty.ws.disco.jaxb.impl.OptionsElementImpl");
        defaultImplementations.put((com.sun.identity.liberty.ws.disco.jaxb.ServiceInstanceType.class), "com.sun.identity.liberty.ws.disco.jaxb.impl.ServiceInstanceTypeImpl");
        defaultImplementations.put((com.sun.identity.liberty.ws.disco.jaxb.QueryResponseType.CredentialsType.class), "com.sun.identity.liberty.ws.disco.jaxb.impl.QueryResponseTypeImpl$CredentialsTypeImpl");
        defaultImplementations.put((com.sun.identity.liberty.ws.disco.jaxb.DirectiveType.class), "com.sun.identity.liberty.ws.disco.jaxb.impl.DirectiveTypeImpl");
        defaultImplementations.put((com.sun.identity.liberty.ws.disco.jaxb.ModifyType.class), "com.sun.identity.liberty.ws.disco.jaxb.impl.ModifyTypeImpl");
        defaultImplementations.put((com.sun.identity.liberty.ws.disco.jaxb.ModifyElement.class), "com.sun.identity.liberty.ws.disco.jaxb.impl.ModifyElementImpl");
        defaultImplementations.put((com.sun.identity.liberty.ws.disco.jaxb.InsertEntryType.class), "com.sun.identity.liberty.ws.disco.jaxb.impl.InsertEntryTypeImpl");
        defaultImplementations.put((com.sun.identity.liberty.ws.disco.jaxb.AuthorizeRequesterElement.class), "com.sun.identity.liberty.ws.disco.jaxb.impl.AuthorizeRequesterElementImpl");
        defaultImplementations.put((com.sun.identity.liberty.ws.disco.jaxb.ResourceIDElement.class), "com.sun.identity.liberty.ws.disco.jaxb.impl.ResourceIDElementImpl");
        rootTagMap.put(new javax.xml.namespace.QName("urn:liberty:disco:2003-08", "ServiceType"), (com.sun.identity.liberty.ws.disco.jaxb.ServiceTypeElement.class));
        rootTagMap.put(new javax.xml.namespace.QName("urn:liberty:disco:2003-08", "Options"), (com.sun.identity.liberty.ws.disco.jaxb.OptionsElement.class));
        rootTagMap.put(new javax.xml.namespace.QName("urn:liberty:disco:2003-08", "QueryResponse"), (com.sun.identity.liberty.ws.disco.jaxb.QueryResponseElement.class));
        rootTagMap.put(new javax.xml.namespace.QName("urn:liberty:disco:2003-08", "ModifyResponse"), (com.sun.identity.liberty.ws.disco.jaxb.ModifyResponseElement.class));
        rootTagMap.put(new javax.xml.namespace.QName("urn:liberty:disco:2003-08", "ResourceID"), (com.sun.identity.liberty.ws.disco.jaxb.ResourceIDElement.class));
        rootTagMap.put(new javax.xml.namespace.QName("urn:liberty:disco:2003-08", "Query"), (com.sun.identity.liberty.ws.disco.jaxb.QueryElement.class));
        rootTagMap.put(new javax.xml.namespace.QName("urn:liberty:disco:2003-08", "ResourceOffering"), (com.sun.identity.liberty.ws.disco.jaxb.ResourceOfferingElement.class));
        rootTagMap.put(new javax.xml.namespace.QName("urn:liberty:disco:2003-08", "AuthenticateRequester"), (com.sun.identity.liberty.ws.disco.jaxb.AuthenticateRequesterElement.class));
        rootTagMap.put(new javax.xml.namespace.QName("urn:liberty:disco:2003-08", "AuthorizeRequester"), (com.sun.identity.liberty.ws.disco.jaxb.AuthorizeRequesterElement.class));
        rootTagMap.put(new javax.xml.namespace.QName("urn:liberty:disco:2003-08", "Modify"), (com.sun.identity.liberty.ws.disco.jaxb.ModifyElement.class));
        rootTagMap.put(new javax.xml.namespace.QName("urn:liberty:disco:2003-08", "EncryptedResourceID"), (com.sun.identity.liberty.ws.disco.jaxb.EncryptedResourceIDElement.class));
        rootTagMap.put(new javax.xml.namespace.QName("urn:liberty:disco:2003-08", "AuthenticateSessionContext"), (com.sun.identity.liberty.ws.disco.jaxb.AuthenticateSessionContextElement.class));
        rootTagMap.put(new javax.xml.namespace.QName("urn:liberty:disco:2003-08", "Status"), (com.sun.identity.liberty.ws.disco.jaxb.StatusElement.class));
        rootTagMap.put(new javax.xml.namespace.QName("urn:liberty:disco:2003-08", "Extension"), (com.sun.identity.liberty.ws.disco.jaxb.ExtensionElement.class));
        rootTagMap.put(new javax.xml.namespace.QName("urn:liberty:disco:2003-08", "EncryptResourceID"), (com.sun.identity.liberty.ws.disco.jaxb.EncryptResourceIDElement.class));
    }

    /**
     * Create a new ObjectFactory that can be used to create new instances of schema derived classes for package: com.sun.identity.liberty.ws.disco.jaxb
     * 
     */
    public ObjectFactory() {
        super(grammarInfo);
    }

    /**
     * Create an instance of the specified Java content interface.
     * 
     * @param javaContentInterface
     *     the Class object of the javacontent interface to instantiate
     * @return
     *     a new instance
     * @throws JAXBException
     *     if an error occurs
     */
    public java.lang.Object newInstance(java.lang.Class javaContentInterface)
        throws javax.xml.bind.JAXBException
    {
        return super.newInstance(javaContentInterface);
    }

    /**
     * Get the specified property. This method can only be
     * used to get provider specific properties.
     * Attempting to get an undefined property will result
     * in a PropertyException being thrown.
     * 
     * @param name
     *     the name of the property to retrieve
     * @return
     *     the value of the requested property
     * @throws PropertyException
     *     when there is an error retrieving the given property or value
     */
    public java.lang.Object getProperty(java.lang.String name)
        throws javax.xml.bind.PropertyException
    {
        return super.getProperty(name);
    }

    /**
     * Set the specified property. This method can only be
     * used to set provider specific properties.
     * Attempting to set an undefined property will result
     * in a PropertyException being thrown.
     * 
     * @param name
     *     the name of the property to retrieve
     * @param value
     *     the value of the property to be set
     * @throws PropertyException
     *     when there is an error processing the given property or value
     */
    public void setProperty(java.lang.String name, java.lang.Object value)
        throws javax.xml.bind.PropertyException
    {
        super.setProperty(name, value);
    }

    /**
     * Create an instance of ResourceOfferingElement
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public com.sun.identity.liberty.ws.disco.jaxb.ResourceOfferingElement createResourceOfferingElement()
        throws javax.xml.bind.JAXBException
    {
        return new com.sun.identity.liberty.ws.disco.jaxb.impl.ResourceOfferingElementImpl();
    }

    /**
     * Create an instance of QueryElement
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public com.sun.identity.liberty.ws.disco.jaxb.QueryElement createQueryElement()
        throws javax.xml.bind.JAXBException
    {
        return new com.sun.identity.liberty.ws.disco.jaxb.impl.QueryElementImpl();
    }

    /**
     * Create an instance of EmptyType
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public com.sun.identity.liberty.ws.disco.jaxb.EmptyType createEmptyType()
        throws javax.xml.bind.JAXBException
    {
        return new com.sun.identity.liberty.ws.disco.jaxb.impl.EmptyTypeImpl();
    }

    /**
     * Create an instance of StatusType
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public com.sun.identity.liberty.ws.disco.jaxb.StatusType createStatusType()
        throws javax.xml.bind.JAXBException
    {
        return new com.sun.identity.liberty.ws.disco.jaxb.impl.StatusTypeImpl();
    }

    /**
     * Create an instance of QueryType
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public com.sun.identity.liberty.ws.disco.jaxb.QueryType createQueryType()
        throws javax.xml.bind.JAXBException
    {
        return new com.sun.identity.liberty.ws.disco.jaxb.impl.QueryTypeImpl();
    }

    /**
     * Create an instance of ModifyResponseElement
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public com.sun.identity.liberty.ws.disco.jaxb.ModifyResponseElement createModifyResponseElement()
        throws javax.xml.bind.JAXBException
    {
        return new com.sun.identity.liberty.ws.disco.jaxb.impl.ModifyResponseElementImpl();
    }

    /**
     * Create an instance of ExtensionElement
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public com.sun.identity.liberty.ws.disco.jaxb.ExtensionElement createExtensionElement()
        throws javax.xml.bind.JAXBException
    {
        return new com.sun.identity.liberty.ws.disco.jaxb.impl.ExtensionElementImpl();
    }

    /**
     * Create an instance of OptionsType
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public com.sun.identity.liberty.ws.disco.jaxb.OptionsType createOptionsType()
        throws javax.xml.bind.JAXBException
    {
        return new com.sun.identity.liberty.ws.disco.jaxb.impl.OptionsTypeImpl();
    }

    /**
     * Create an instance of AuthenticateSessionContextElement
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public com.sun.identity.liberty.ws.disco.jaxb.AuthenticateSessionContextElement createAuthenticateSessionContextElement()
        throws javax.xml.bind.JAXBException
    {
        return new com.sun.identity.liberty.ws.disco.jaxb.impl.AuthenticateSessionContextElementImpl();
    }

    /**
     * Create an instance of ModifyResponseType
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public com.sun.identity.liberty.ws.disco.jaxb.ModifyResponseType createModifyResponseType()
        throws javax.xml.bind.JAXBException
    {
        return new com.sun.identity.liberty.ws.disco.jaxb.impl.ModifyResponseTypeImpl();
    }

    /**
     * Create an instance of ExtensionType
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public com.sun.identity.liberty.ws.disco.jaxb.ExtensionType createExtensionType()
        throws javax.xml.bind.JAXBException
    {
        return new com.sun.identity.liberty.ws.disco.jaxb.impl.ExtensionTypeImpl();
    }

    /**
     * Create an instance of ResourceIDType
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public com.sun.identity.liberty.ws.disco.jaxb.ResourceIDType createResourceIDType()
        throws javax.xml.bind.JAXBException
    {
        return new com.sun.identity.liberty.ws.disco.jaxb.impl.ResourceIDTypeImpl();
    }

    /**
     * Create an instance of AuthenticateRequesterElement
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public com.sun.identity.liberty.ws.disco.jaxb.AuthenticateRequesterElement createAuthenticateRequesterElement()
        throws javax.xml.bind.JAXBException
    {
        return new com.sun.identity.liberty.ws.disco.jaxb.impl.AuthenticateRequesterElementImpl();
    }

    /**
     * Create an instance of EncryptedResourceIDType
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public com.sun.identity.liberty.ws.disco.jaxb.EncryptedResourceIDType createEncryptedResourceIDType()
        throws javax.xml.bind.JAXBException
    {
        return new com.sun.identity.liberty.ws.disco.jaxb.impl.EncryptedResourceIDTypeImpl();
    }

    /**
     * Create an instance of RemoveEntryType
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public com.sun.identity.liberty.ws.disco.jaxb.RemoveEntryType createRemoveEntryType()
        throws javax.xml.bind.JAXBException
    {
        return new com.sun.identity.liberty.ws.disco.jaxb.impl.RemoveEntryTypeImpl();
    }

    /**
     * Create an instance of ServiceTypeElement
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public com.sun.identity.liberty.ws.disco.jaxb.ServiceTypeElement createServiceTypeElement()
        throws javax.xml.bind.JAXBException
    {
        return new com.sun.identity.liberty.ws.disco.jaxb.impl.ServiceTypeElementImpl();
    }

    /**
     * Create an instance of ServiceTypeElement
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public com.sun.identity.liberty.ws.disco.jaxb.ServiceTypeElement createServiceTypeElement(java.lang.String value)
        throws javax.xml.bind.JAXBException
    {
        return new com.sun.identity.liberty.ws.disco.jaxb.impl.ServiceTypeElementImpl(value);
    }

    /**
     * Create an instance of ResourceOfferingType
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public com.sun.identity.liberty.ws.disco.jaxb.ResourceOfferingType createResourceOfferingType()
        throws javax.xml.bind.JAXBException
    {
        return new com.sun.identity.liberty.ws.disco.jaxb.impl.ResourceOfferingTypeImpl();
    }

    /**
     * Create an instance of DescriptionType
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public com.sun.identity.liberty.ws.disco.jaxb.DescriptionType createDescriptionType()
        throws javax.xml.bind.JAXBException
    {
        return new com.sun.identity.liberty.ws.disco.jaxb.impl.DescriptionTypeImpl();
    }

    /**
     * Create an instance of EncryptedResourceIDElement
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public com.sun.identity.liberty.ws.disco.jaxb.EncryptedResourceIDElement createEncryptedResourceIDElement()
        throws javax.xml.bind.JAXBException
    {
        return new com.sun.identity.liberty.ws.disco.jaxb.impl.EncryptedResourceIDElementImpl();
    }

    /**
     * Create an instance of StatusElement
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public com.sun.identity.liberty.ws.disco.jaxb.StatusElement createStatusElement()
        throws javax.xml.bind.JAXBException
    {
        return new com.sun.identity.liberty.ws.disco.jaxb.impl.StatusElementImpl();
    }

    /**
     * Create an instance of EncryptResourceIDElement
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public com.sun.identity.liberty.ws.disco.jaxb.EncryptResourceIDElement createEncryptResourceIDElement()
        throws javax.xml.bind.JAXBException
    {
        return new com.sun.identity.liberty.ws.disco.jaxb.impl.EncryptResourceIDElementImpl();
    }

    /**
     * Create an instance of QueryTypeRequestedServiceTypeType
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public com.sun.identity.liberty.ws.disco.jaxb.QueryType.RequestedServiceTypeType createQueryTypeRequestedServiceTypeType()
        throws javax.xml.bind.JAXBException
    {
        return new com.sun.identity.liberty.ws.disco.jaxb.impl.QueryTypeImpl.RequestedServiceTypeTypeImpl();
    }

    /**
     * Create an instance of QueryResponseElement
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public com.sun.identity.liberty.ws.disco.jaxb.QueryResponseElement createQueryResponseElement()
        throws javax.xml.bind.JAXBException
    {
        return new com.sun.identity.liberty.ws.disco.jaxb.impl.QueryResponseElementImpl();
    }

    /**
     * Create an instance of QueryResponseType
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public com.sun.identity.liberty.ws.disco.jaxb.QueryResponseType createQueryResponseType()
        throws javax.xml.bind.JAXBException
    {
        return new com.sun.identity.liberty.ws.disco.jaxb.impl.QueryResponseTypeImpl();
    }

    /**
     * Create an instance of OptionsElement
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public com.sun.identity.liberty.ws.disco.jaxb.OptionsElement createOptionsElement()
        throws javax.xml.bind.JAXBException
    {
        return new com.sun.identity.liberty.ws.disco.jaxb.impl.OptionsElementImpl();
    }

    /**
     * Create an instance of ServiceInstanceType
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public com.sun.identity.liberty.ws.disco.jaxb.ServiceInstanceType createServiceInstanceType()
        throws javax.xml.bind.JAXBException
    {
        return new com.sun.identity.liberty.ws.disco.jaxb.impl.ServiceInstanceTypeImpl();
    }

    /**
     * Create an instance of QueryResponseTypeCredentialsType
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public com.sun.identity.liberty.ws.disco.jaxb.QueryResponseType.CredentialsType createQueryResponseTypeCredentialsType()
        throws javax.xml.bind.JAXBException
    {
        return new com.sun.identity.liberty.ws.disco.jaxb.impl.QueryResponseTypeImpl.CredentialsTypeImpl();
    }

    /**
     * Create an instance of DirectiveType
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public com.sun.identity.liberty.ws.disco.jaxb.DirectiveType createDirectiveType()
        throws javax.xml.bind.JAXBException
    {
        return new com.sun.identity.liberty.ws.disco.jaxb.impl.DirectiveTypeImpl();
    }

    /**
     * Create an instance of ModifyType
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public com.sun.identity.liberty.ws.disco.jaxb.ModifyType createModifyType()
        throws javax.xml.bind.JAXBException
    {
        return new com.sun.identity.liberty.ws.disco.jaxb.impl.ModifyTypeImpl();
    }

    /**
     * Create an instance of ModifyElement
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public com.sun.identity.liberty.ws.disco.jaxb.ModifyElement createModifyElement()
        throws javax.xml.bind.JAXBException
    {
        return new com.sun.identity.liberty.ws.disco.jaxb.impl.ModifyElementImpl();
    }

    /**
     * Create an instance of InsertEntryType
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public com.sun.identity.liberty.ws.disco.jaxb.InsertEntryType createInsertEntryType()
        throws javax.xml.bind.JAXBException
    {
        return new com.sun.identity.liberty.ws.disco.jaxb.impl.InsertEntryTypeImpl();
    }

    /**
     * Create an instance of AuthorizeRequesterElement
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public com.sun.identity.liberty.ws.disco.jaxb.AuthorizeRequesterElement createAuthorizeRequesterElement()
        throws javax.xml.bind.JAXBException
    {
        return new com.sun.identity.liberty.ws.disco.jaxb.impl.AuthorizeRequesterElementImpl();
    }

    /**
     * Create an instance of ResourceIDElement
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public com.sun.identity.liberty.ws.disco.jaxb.ResourceIDElement createResourceIDElement()
        throws javax.xml.bind.JAXBException
    {
        return new com.sun.identity.liberty.ws.disco.jaxb.impl.ResourceIDElementImpl();
    }

}
