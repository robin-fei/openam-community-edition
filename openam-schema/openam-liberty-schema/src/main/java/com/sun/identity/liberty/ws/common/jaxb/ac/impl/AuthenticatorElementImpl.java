//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v1.0.6-b27-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2012.06.11 at 10:33:54 AM PDT 
//


package com.sun.identity.liberty.ws.common.jaxb.ac.impl;

public class AuthenticatorElementImpl
    extends com.sun.identity.liberty.ws.common.jaxb.ac.impl.AuthenticatorTypeImpl
    implements com.sun.identity.liberty.ws.common.jaxb.ac.AuthenticatorElement, com.sun.xml.bind.RIElement, com.sun.xml.bind.JAXBObject, com.sun.identity.federation.jaxb.entityconfig.impl.runtime.UnmarshallableObject, com.sun.identity.federation.jaxb.entityconfig.impl.runtime.XMLSerializable, com.sun.identity.federation.jaxb.entityconfig.impl.runtime.ValidatableObject
{

    public final static java.lang.Class version = (com.sun.identity.liberty.ws.common.jaxb.ac.impl.JAXBVersion.class);
    private static com.sun.msv.grammar.Grammar schemaFragment;

    private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
        return (com.sun.identity.liberty.ws.common.jaxb.ac.AuthenticatorElement.class);
    }

    public java.lang.String ____jaxb_ri____getNamespaceURI() {
        return "urn:liberty:ac:2003-08";
    }

    public java.lang.String ____jaxb_ri____getLocalName() {
        return "Authenticator";
    }

    public com.sun.identity.federation.jaxb.entityconfig.impl.runtime.UnmarshallingEventHandler createUnmarshaller(com.sun.identity.federation.jaxb.entityconfig.impl.runtime.UnmarshallingContext context) {
        return new com.sun.identity.liberty.ws.common.jaxb.ac.impl.AuthenticatorElementImpl.Unmarshaller(context);
    }

    public void serializeBody(com.sun.identity.federation.jaxb.entityconfig.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        context.startElement("urn:liberty:ac:2003-08", "Authenticator");
        super.serializeURIs(context);
        context.endNamespaceDecls();
        super.serializeAttributes(context);
        context.endAttributes();
        super.serializeBody(context);
        context.endElement();
    }

    public void serializeAttributes(com.sun.identity.federation.jaxb.entityconfig.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
    }

    public void serializeURIs(com.sun.identity.federation.jaxb.entityconfig.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
    }

    public java.lang.Class getPrimaryInterface() {
        return (com.sun.identity.liberty.ws.common.jaxb.ac.AuthenticatorElement.class);
    }

    public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
        if (schemaFragment == null) {
            schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\'com.sun.msv.grammar.trex.ElementPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000"
+"\tnameClasst\u0000\u001fLcom/sun/msv/grammar/NameClass;xr\u0000\u001ecom.sun.msv."
+"grammar.ElementExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAttributesL\u0000"
+"\fcontentModelt\u0000 Lcom/sun/msv/grammar/Expression;xr\u0000\u001ecom.sun."
+"msv.grammar.Expression\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0002L\u0000\u0013epsilonReducibilityt\u0000\u0013Lj"
+"ava/lang/Boolean;L\u0000\u000bexpandedExpq\u0000~\u0000\u0003xppp\u0000sr\u0000\u001fcom.sun.msv.gra"
+"mmar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.sun.msv.grammar.BinaryExp"
+"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1q\u0000~\u0000\u0003L\u0000\u0004exp2q\u0000~\u0000\u0003xq\u0000~\u0000\u0004ppsr\u0000\u001dcom.sun.msv.g"
+"rammar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\bppsq\u0000~\u0000\nppsq\u0000~\u0000\nppsq\u0000~\u0000\npps"
+"q\u0000~\u0000\nppsq\u0000~\u0000\nppsq\u0000~\u0000\nppsq\u0000~\u0000\nppsq\u0000~\u0000\nppsq\u0000~\u0000\nppsq\u0000~\u0000\nppsq\u0000~\u0000"
+"\nppsq\u0000~\u0000\nppsq\u0000~\u0000\nppsq\u0000~\u0000\nppsq\u0000~\u0000\nppsq\u0000~\u0000\nppsq\u0000~\u0000\nppsq\u0000~\u0000\npps"
+"q\u0000~\u0000\nppsq\u0000~\u0000\u0000pp\u0000sq\u0000~\u0000\nppsr\u0000 com.sun.msv.grammar.OneOrMoreExp"
+"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001ccom.sun.msv.grammar.UnaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0003exp"
+"q\u0000~\u0000\u0003xq\u0000~\u0000\u0004sr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000psr\u0000 c"
+"om.sun.msv.grammar.AttributeExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0003L\u0000\tname"
+"Classq\u0000~\u0000\u0001xq\u0000~\u0000\u0004q\u0000~\u0000%psr\u00002com.sun.msv.grammar.Expression$Any"
+"StringExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0004sq\u0000~\u0000$\u0001q\u0000~\u0000)sr\u0000 com.sun.msv"
+".grammar.AnyNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.sun.msv.grammar.Name"
+"Class\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.sun.msv.grammar.Expression$Epsilon"
+"Expression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0004q\u0000~\u0000*q\u0000~\u0000/sr\u0000#com.sun.msv.grammar"
+".SimpleNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNamet\u0000\u0012Ljava/lang/String;"
+"L\u0000\fnamespaceURIq\u0000~\u00001xq\u0000~\u0000,t\u0000Acom.sun.identity.liberty.ws.com"
+"mon.jaxb.ac.PreviousSessionElementt\u0000+http://java.sun.com/jax"
+"b/xjc/dummy-elementssq\u0000~\u0000\u0000pp\u0000sq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0000pp\u0000sq\u0000~\u0000\nppsq\u0000~\u0000!"
+"q\u0000~\u0000%psq\u0000~\u0000&q\u0000~\u0000%pq\u0000~\u0000)q\u0000~\u0000-q\u0000~\u0000/sq\u0000~\u00000t\u0000>com.sun.identity.l"
+"iberty.ws.common.jaxb.ac.PreviousSessionTypeq\u0000~\u00004sq\u0000~\u0000\nppsq\u0000"
+"~\u0000&q\u0000~\u0000%psr\u0000\u001bcom.sun.msv.grammar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fL"
+"org/relaxng/datatype/Datatype;L\u0000\u0006exceptq\u0000~\u0000\u0003L\u0000\u0004namet\u0000\u001dLcom/s"
+"un/msv/util/StringPair;xq\u0000~\u0000\u0004q\u0000~\u0000%psr\u0000\"com.sun.msv.datatype."
+"xsd.QnameType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000*com.sun.msv.datatype.xsd.Builtin"
+"AtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.datatype.xsd.ConcreteTy"
+"pe\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com.sun.msv.datatype.xsd.XSDatatypeImpl\u0000\u0000\u0000\u0000"
+"\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUriq\u0000~\u00001L\u0000\btypeNameq\u0000~\u00001L\u0000\nwhiteSpacet\u0000.L"
+"com/sun/msv/datatype/xsd/WhiteSpaceProcessor;xpt\u0000 http://www"
+".w3.org/2001/XMLSchemat\u0000\u0005QNamesr\u00005com.sun.msv.datatype.xsd.W"
+"hiteSpaceProcessor$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun.msv.dataty"
+"pe.xsd.WhiteSpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.sun.msv.gramm"
+"ar.Expression$NullSetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0004q\u0000~\u0000%psr\u0000\u001bco"
+"m.sun.msv.util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u00001L\u0000\fname"
+"spaceURIq\u0000~\u00001xpq\u0000~\u0000Jq\u0000~\u0000Isq\u0000~\u00000t\u0000\u0004typet\u0000)http://www.w3.org/2"
+"001/XMLSchema-instanceq\u0000~\u0000/sq\u0000~\u00000t\u0000\u000fPreviousSessiont\u0000\u0016urn:li"
+"berty:ac:2003-08sq\u0000~\u0000\u0000pp\u0000sq\u0000~\u0000\nppsq\u0000~\u0000!q\u0000~\u0000%psq\u0000~\u0000&q\u0000~\u0000%pq\u0000~"
+"\u0000)q\u0000~\u0000-q\u0000~\u0000/sq\u0000~\u00000t\u0000?com.sun.identity.liberty.ws.common.jaxb"
+".ac.ResumeSessionElementq\u0000~\u00004sq\u0000~\u0000\u0000pp\u0000sq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0000pp\u0000sq\u0000~\u0000"
+"\nppsq\u0000~\u0000!q\u0000~\u0000%psq\u0000~\u0000&q\u0000~\u0000%pq\u0000~\u0000)q\u0000~\u0000-q\u0000~\u0000/sq\u0000~\u00000t\u0000<com.sun.i"
+"dentity.liberty.ws.common.jaxb.ac.ResumeSessionTypeq\u0000~\u00004sq\u0000~"
+"\u0000\nppsq\u0000~\u0000&q\u0000~\u0000%pq\u0000~\u0000Bq\u0000~\u0000Rq\u0000~\u0000/sq\u0000~\u00000t\u0000\rResumeSessionq\u0000~\u0000Wsq"
+"\u0000~\u0000\u0000pp\u0000sq\u0000~\u0000\nppsq\u0000~\u0000!q\u0000~\u0000%psq\u0000~\u0000&q\u0000~\u0000%pq\u0000~\u0000)q\u0000~\u0000-q\u0000~\u0000/sq\u0000~\u00000"
+"t\u00008com.sun.identity.liberty.ws.common.jaxb.ac.DigSigElementq"
+"\u0000~\u00004sq\u0000~\u0000\u0000pp\u0000sq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0000pp\u0000sq\u0000~\u0000\nppsq\u0000~\u0000!q\u0000~\u0000%psq\u0000~\u0000&q\u0000~\u0000"
+"%pq\u0000~\u0000)q\u0000~\u0000-q\u0000~\u0000/sq\u0000~\u00000t\u00005com.sun.identity.liberty.ws.common"
+".jaxb.ac.DigSigTypeq\u0000~\u00004sq\u0000~\u0000\nppsq\u0000~\u0000&q\u0000~\u0000%pq\u0000~\u0000Bq\u0000~\u0000Rq\u0000~\u0000/s"
+"q\u0000~\u00000t\u0000\u0006DigSigq\u0000~\u0000Wsq\u0000~\u0000\u0000pp\u0000sq\u0000~\u0000\nppsq\u0000~\u0000!q\u0000~\u0000%psq\u0000~\u0000&q\u0000~\u0000%p"
+"q\u0000~\u0000)q\u0000~\u0000-q\u0000~\u0000/sq\u0000~\u00000t\u0000:com.sun.identity.liberty.ws.common.j"
+"axb.ac.PasswordElementq\u0000~\u00004sq\u0000~\u0000\u0000pp\u0000sq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0000pp\u0000sq\u0000~\u0000\np"
+"psq\u0000~\u0000!q\u0000~\u0000%psq\u0000~\u0000&q\u0000~\u0000%pq\u0000~\u0000)q\u0000~\u0000-q\u0000~\u0000/sq\u0000~\u00000t\u00007com.sun.ide"
+"ntity.liberty.ws.common.jaxb.ac.PasswordTypeq\u0000~\u00004sq\u0000~\u0000\nppsq\u0000"
+"~\u0000&q\u0000~\u0000%pq\u0000~\u0000Bq\u0000~\u0000Rq\u0000~\u0000/sq\u0000~\u00000t\u0000\bPasswordq\u0000~\u0000Wsq\u0000~\u0000\u0000pp\u0000sq\u0000~\u0000"
+"\nppsq\u0000~\u0000!q\u0000~\u0000%psq\u0000~\u0000&q\u0000~\u0000%pq\u0000~\u0000)q\u0000~\u0000-q\u0000~\u0000/sq\u0000~\u00000t\u0000?com.sun.i"
+"dentity.liberty.ws.common.jaxb.ac.ZeroKnowledgeElementq\u0000~\u00004s"
+"q\u0000~\u0000\u0000pp\u0000sq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0000pp\u0000sq\u0000~\u0000\nppsq\u0000~\u0000!q\u0000~\u0000%psq\u0000~\u0000&q\u0000~\u0000%pq\u0000~"
+"\u0000)q\u0000~\u0000-q\u0000~\u0000/sq\u0000~\u00000t\u0000<com.sun.identity.liberty.ws.common.jaxb"
+".ac.ZeroKnowledgeTypeq\u0000~\u00004sq\u0000~\u0000\nppsq\u0000~\u0000&q\u0000~\u0000%pq\u0000~\u0000Bq\u0000~\u0000Rq\u0000~\u0000"
+"/sq\u0000~\u00000t\u0000\rZeroKnowledgeq\u0000~\u0000Wsq\u0000~\u0000\u0000pp\u0000sq\u0000~\u0000\nppsq\u0000~\u0000!q\u0000~\u0000%psq\u0000"
+"~\u0000&q\u0000~\u0000%pq\u0000~\u0000)q\u0000~\u0000-q\u0000~\u0000/sq\u0000~\u00000t\u0000Ocom.sun.identity.liberty.ws"
+".common.jaxb.ac.SharedSecretChallengeResponseElementq\u0000~\u00004sq\u0000"
+"~\u0000\u0000pp\u0000sq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0000pp\u0000sq\u0000~\u0000\nppsq\u0000~\u0000!q\u0000~\u0000%psq\u0000~\u0000&q\u0000~\u0000%pq\u0000~\u0000)"
+"q\u0000~\u0000-q\u0000~\u0000/sq\u0000~\u00000t\u0000Lcom.sun.identity.liberty.ws.common.jaxb.a"
+"c.SharedSecretChallengeResponseTypeq\u0000~\u00004sq\u0000~\u0000\nppsq\u0000~\u0000&q\u0000~\u0000%p"
+"q\u0000~\u0000Bq\u0000~\u0000Rq\u0000~\u0000/sq\u0000~\u00000t\u0000\u001dSharedSecretChallengeResponseq\u0000~\u0000Wsq"
+"\u0000~\u0000\u0000pp\u0000sq\u0000~\u0000\nppsq\u0000~\u0000!q\u0000~\u0000%psq\u0000~\u0000&q\u0000~\u0000%pq\u0000~\u0000)q\u0000~\u0000-q\u0000~\u0000/sq\u0000~\u00000"
+"t\u0000Ncom.sun.identity.liberty.ws.common.jaxb.ac.SharedSecretDy"
+"namicPlaintextElementq\u0000~\u00004sq\u0000~\u0000\u0000pp\u0000sq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0000pp\u0000sq\u0000~\u0000\npp"
+"sq\u0000~\u0000!q\u0000~\u0000%psq\u0000~\u0000&q\u0000~\u0000%pq\u0000~\u0000)q\u0000~\u0000-q\u0000~\u0000/sq\u0000~\u00000t\u0000Kcom.sun.iden"
+"tity.liberty.ws.common.jaxb.ac.SharedSecretDynamicPlaintextT"
+"ypeq\u0000~\u00004sq\u0000~\u0000\nppsq\u0000~\u0000&q\u0000~\u0000%pq\u0000~\u0000Bq\u0000~\u0000Rq\u0000~\u0000/sq\u0000~\u00000t\u0000\u001cSharedSe"
+"cretDynamicPlaintextq\u0000~\u0000Wsq\u0000~\u0000\u0000pp\u0000sq\u0000~\u0000\nppsq\u0000~\u0000!q\u0000~\u0000%psq\u0000~\u0000&"
+"q\u0000~\u0000%pq\u0000~\u0000)q\u0000~\u0000-q\u0000~\u0000/sq\u0000~\u00000t\u0000;com.sun.identity.liberty.ws.co"
+"mmon.jaxb.ac.IPAddressElementq\u0000~\u00004sq\u0000~\u0000\u0000pp\u0000sq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0000pp\u0000"
+"sq\u0000~\u0000\nppsq\u0000~\u0000!q\u0000~\u0000%psq\u0000~\u0000&q\u0000~\u0000%pq\u0000~\u0000)q\u0000~\u0000-q\u0000~\u0000/sq\u0000~\u00000t\u00008com."
+"sun.identity.liberty.ws.common.jaxb.ac.IPAddressTypeq\u0000~\u00004sq\u0000"
+"~\u0000\nppsq\u0000~\u0000&q\u0000~\u0000%pq\u0000~\u0000Bq\u0000~\u0000Rq\u0000~\u0000/sq\u0000~\u00000t\u0000\tIPAddressq\u0000~\u0000Wsq\u0000~\u0000"
+"\u0000pp\u0000sq\u0000~\u0000\nppsq\u0000~\u0000!q\u0000~\u0000%psq\u0000~\u0000&q\u0000~\u0000%pq\u0000~\u0000)q\u0000~\u0000-q\u0000~\u0000/sq\u0000~\u00000t\u0000F"
+"com.sun.identity.liberty.ws.common.jaxb.ac.AsymmetricDecrypt"
+"ionElementq\u0000~\u00004sq\u0000~\u0000\u0000pp\u0000sq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0000pp\u0000sq\u0000~\u0000\nppsq\u0000~\u0000!q\u0000~\u0000%"
+"psq\u0000~\u0000&q\u0000~\u0000%pq\u0000~\u0000)q\u0000~\u0000-q\u0000~\u0000/sq\u0000~\u00000t\u0000Ccom.sun.identity.libert"
+"y.ws.common.jaxb.ac.AsymmetricDecryptionTypeq\u0000~\u00004sq\u0000~\u0000\nppsq\u0000"
+"~\u0000&q\u0000~\u0000%pq\u0000~\u0000Bq\u0000~\u0000Rq\u0000~\u0000/sq\u0000~\u00000t\u0000\u0014AsymmetricDecryptionq\u0000~\u0000Wsq"
+"\u0000~\u0000\u0000pp\u0000sq\u0000~\u0000\nppsq\u0000~\u0000!q\u0000~\u0000%psq\u0000~\u0000&q\u0000~\u0000%pq\u0000~\u0000)q\u0000~\u0000-q\u0000~\u0000/sq\u0000~\u00000"
+"t\u0000Hcom.sun.identity.liberty.ws.common.jaxb.ac.AsymmetricKeyA"
+"greementElementq\u0000~\u00004sq\u0000~\u0000\u0000pp\u0000sq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0000pp\u0000sq\u0000~\u0000\nppsq\u0000~\u0000!"
+"q\u0000~\u0000%psq\u0000~\u0000&q\u0000~\u0000%pq\u0000~\u0000)q\u0000~\u0000-q\u0000~\u0000/sq\u0000~\u00000t\u0000Ecom.sun.identity.l"
+"iberty.ws.common.jaxb.ac.AsymmetricKeyAgreementTypeq\u0000~\u00004sq\u0000~"
+"\u0000\nppsq\u0000~\u0000&q\u0000~\u0000%pq\u0000~\u0000Bq\u0000~\u0000Rq\u0000~\u0000/sq\u0000~\u00000t\u0000\u0016AsymmetricKeyAgreeme"
+"ntq\u0000~\u0000Wsq\u0000~\u0000!ppsq\u0000~\u0000\nppsq\u0000~\u0000\u0000pp\u0000sq\u0000~\u0000\nppsq\u0000~\u0000!q\u0000~\u0000%psq\u0000~\u0000&q\u0000"
+"~\u0000%pq\u0000~\u0000)q\u0000~\u0000-q\u0000~\u0000/sq\u0000~\u00000t\u0000;com.sun.identity.liberty.ws.comm"
+"on.jaxb.ac.ExtensionElementq\u0000~\u00004sq\u0000~\u0000\u0000pp\u0000sq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0000pp\u0000sq"
+"\u0000~\u0000\nppsq\u0000~\u0000!q\u0000~\u0000%psq\u0000~\u0000&q\u0000~\u0000%pq\u0000~\u0000)q\u0000~\u0000-q\u0000~\u0000/sq\u0000~\u00000t\u00008com.su"
+"n.identity.liberty.ws.common.jaxb.ac.ExtensionTypeq\u0000~\u00004sq\u0000~\u0000"
+"\nppsq\u0000~\u0000&q\u0000~\u0000%pq\u0000~\u0000Bq\u0000~\u0000Rq\u0000~\u0000/sq\u0000~\u00000t\u0000\tExtensionq\u0000~\u0000Wsq\u0000~\u0000\np"
+"psq\u0000~\u0000&q\u0000~\u0000%pq\u0000~\u0000Bq\u0000~\u0000Rq\u0000~\u0000/sq\u0000~\u00000t\u0000\rAuthenticatorq\u0000~\u0000Wsr\u0000\"c"
+"om.sun.msv.grammar.ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lc"
+"om/sun/msv/grammar/ExpressionPool$ClosedHash;xpsr\u0000-com.sun.m"
+"sv.grammar.ExpressionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0003\u0000\u0003I\u0000\u0005countB\u0000\rst"
+"reamVersionL\u0000\u0006parentt\u0000$Lcom/sun/msv/grammar/ExpressionPool;x"
+"p\u0000\u0000\u0000Z\u0001pq\u0000~\u0000bq\u0000~\u0000Zq\u0000~\u00009q\u0000~\u0000#q\u0000~\u0000\u00ceq\u0000~\u0000\u00d8q\u0000~\u0000\u00e0q\u0000~\u0000\u00eaq\u0000~\u0000\u00f2q\u0000~\u0000\u00feq\u0000~"
+"\u0001\u0006q\u0000~\u0000\tq\u0000~\u0000\u0010q\u0000~\u0000\u001bq\u0000~\u0000\u0013q\u0000~\u0000\u0012q\u0000~\u0000\u001dq\u0000~\u0000\rq\u0000~\u0000\u000fq\u0000~\u0000\u001cq\u0000~\u0000\u00c5q\u0000~\u0000\u00bbq\u0000~"
+"\u0000\u00b3q\u0000~\u0000\u00a9q\u0000~\u0000\u00a1q\u0000~\u0000\u0097q\u0000~\u0000\u008fq\u0000~\u0000\u0085q\u0000~\u0000}q\u0000~\u0000sq\u0000~\u0000kq\u0000~\u0000aq\u0000~\u0000Yq\u0000~\u00008q\u0000~"
+"\u0000 q\u0000~\u0000\u00cdq\u0000~\u0000\u001eq\u0000~\u0000\u00d7q\u0000~\u0000\u00dfq\u0000~\u0000\u00e9q\u0000~\u0000\u00f1q\u0000~\u0000\u000eq\u0000~\u0000\u00fdq\u0000~\u0001\u0005q\u0000~\u0000\u00fbq\u0000~\u0000\u001aq\u0000~"
+"\u0000\u00c0q\u0000~\u0000\u00aeq\u0000~\u0000\u009cq\u0000~\u0000\u008aq\u0000~\u0000xq\u0000~\u0000fq\u0000~\u0000=q\u0000~\u0000\u00d2q\u0000~\u0000\u00e4q\u0000~\u0000\u00f6q\u0000~\u0001\nq\u0000~\u0001\u000eq\u0000~"
+"\u0000\u0014q\u0000~\u0000\u0015q\u0000~\u0000\fq\u0000~\u0000\u0016q\u0000~\u0000\u00b9q\u0000~\u0000\u00a7q\u0000~\u0000\u0095q\u0000~\u0000\u0083q\u0000~\u0000qq\u0000~\u0000_q\u0000~\u0000\u0019q\u0000~\u00006q\u0000~"
+"\u0000\u00cbq\u0000~\u0000\u00ddq\u0000~\u0000\u00efq\u0000~\u0001\u0003q\u0000~\u0000\u00faq\u0000~\u0000\u0011q\u0000~\u0000\u0017q\u0000~\u0000\u000bq\u0000~\u0000\u0018q\u0000~\u0000\u00c6q\u0000~\u0000\u00bcq\u0000~\u0000\u00b4q\u0000~"
+"\u0000\u00aaq\u0000~\u0000\u00a2q\u0000~\u0000\u0098q\u0000~\u0000\u0090q\u0000~\u0000\u0086q\u0000~\u0000~q\u0000~\u0000tq\u0000~\u0000lx"));
        }
        return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
    }

    public class Unmarshaller
        extends com.sun.identity.federation.jaxb.entityconfig.impl.runtime.AbstractUnmarshallingEventHandlerImpl
    {


        public Unmarshaller(com.sun.identity.federation.jaxb.entityconfig.impl.runtime.UnmarshallingContext context) {
            super(context, "----");
        }

        protected Unmarshaller(com.sun.identity.federation.jaxb.entityconfig.impl.runtime.UnmarshallingContext context, int startState) {
            this(context);
            state = startState;
        }

        public java.lang.Object owner() {
            return com.sun.identity.liberty.ws.common.jaxb.ac.impl.AuthenticatorElementImpl.this;
        }

        public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  0 :
                        if (("Authenticator" == ___local)&&("urn:liberty:ac:2003-08" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 1;
                            return ;
                        }
                        break;
                    case  3 :
                        revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                        return ;
                    case  1 :
                        if (("PreviousSession" == ___local)&&("urn:liberty:ac:2003-08" == ___uri)) {
                            spawnHandlerFromEnterElement((((com.sun.identity.liberty.ws.common.jaxb.ac.impl.AuthenticatorTypeImpl)com.sun.identity.liberty.ws.common.jaxb.ac.impl.AuthenticatorElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("PreviousSession" == ___local)&&("urn:liberty:ac:2003-08" == ___uri)) {
                            spawnHandlerFromEnterElement((((com.sun.identity.liberty.ws.common.jaxb.ac.impl.AuthenticatorTypeImpl)com.sun.identity.liberty.ws.common.jaxb.ac.impl.AuthenticatorElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("ResumeSession" == ___local)&&("urn:liberty:ac:2003-08" == ___uri)) {
                            spawnHandlerFromEnterElement((((com.sun.identity.liberty.ws.common.jaxb.ac.impl.AuthenticatorTypeImpl)com.sun.identity.liberty.ws.common.jaxb.ac.impl.AuthenticatorElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("ResumeSession" == ___local)&&("urn:liberty:ac:2003-08" == ___uri)) {
                            spawnHandlerFromEnterElement((((com.sun.identity.liberty.ws.common.jaxb.ac.impl.AuthenticatorTypeImpl)com.sun.identity.liberty.ws.common.jaxb.ac.impl.AuthenticatorElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("DigSig" == ___local)&&("urn:liberty:ac:2003-08" == ___uri)) {
                            spawnHandlerFromEnterElement((((com.sun.identity.liberty.ws.common.jaxb.ac.impl.AuthenticatorTypeImpl)com.sun.identity.liberty.ws.common.jaxb.ac.impl.AuthenticatorElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("DigSig" == ___local)&&("urn:liberty:ac:2003-08" == ___uri)) {
                            spawnHandlerFromEnterElement((((com.sun.identity.liberty.ws.common.jaxb.ac.impl.AuthenticatorTypeImpl)com.sun.identity.liberty.ws.common.jaxb.ac.impl.AuthenticatorElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("Password" == ___local)&&("urn:liberty:ac:2003-08" == ___uri)) {
                            spawnHandlerFromEnterElement((((com.sun.identity.liberty.ws.common.jaxb.ac.impl.AuthenticatorTypeImpl)com.sun.identity.liberty.ws.common.jaxb.ac.impl.AuthenticatorElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("Password" == ___local)&&("urn:liberty:ac:2003-08" == ___uri)) {
                            spawnHandlerFromEnterElement((((com.sun.identity.liberty.ws.common.jaxb.ac.impl.AuthenticatorTypeImpl)com.sun.identity.liberty.ws.common.jaxb.ac.impl.AuthenticatorElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("ZeroKnowledge" == ___local)&&("urn:liberty:ac:2003-08" == ___uri)) {
                            spawnHandlerFromEnterElement((((com.sun.identity.liberty.ws.common.jaxb.ac.impl.AuthenticatorTypeImpl)com.sun.identity.liberty.ws.common.jaxb.ac.impl.AuthenticatorElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("ZeroKnowledge" == ___local)&&("urn:liberty:ac:2003-08" == ___uri)) {
                            spawnHandlerFromEnterElement((((com.sun.identity.liberty.ws.common.jaxb.ac.impl.AuthenticatorTypeImpl)com.sun.identity.liberty.ws.common.jaxb.ac.impl.AuthenticatorElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("SharedSecretChallengeResponse" == ___local)&&("urn:liberty:ac:2003-08" == ___uri)) {
                            spawnHandlerFromEnterElement((((com.sun.identity.liberty.ws.common.jaxb.ac.impl.AuthenticatorTypeImpl)com.sun.identity.liberty.ws.common.jaxb.ac.impl.AuthenticatorElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("SharedSecretChallengeResponse" == ___local)&&("urn:liberty:ac:2003-08" == ___uri)) {
                            spawnHandlerFromEnterElement((((com.sun.identity.liberty.ws.common.jaxb.ac.impl.AuthenticatorTypeImpl)com.sun.identity.liberty.ws.common.jaxb.ac.impl.AuthenticatorElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("SharedSecretDynamicPlaintext" == ___local)&&("urn:liberty:ac:2003-08" == ___uri)) {
                            spawnHandlerFromEnterElement((((com.sun.identity.liberty.ws.common.jaxb.ac.impl.AuthenticatorTypeImpl)com.sun.identity.liberty.ws.common.jaxb.ac.impl.AuthenticatorElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("SharedSecretDynamicPlaintext" == ___local)&&("urn:liberty:ac:2003-08" == ___uri)) {
                            spawnHandlerFromEnterElement((((com.sun.identity.liberty.ws.common.jaxb.ac.impl.AuthenticatorTypeImpl)com.sun.identity.liberty.ws.common.jaxb.ac.impl.AuthenticatorElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("IPAddress" == ___local)&&("urn:liberty:ac:2003-08" == ___uri)) {
                            spawnHandlerFromEnterElement((((com.sun.identity.liberty.ws.common.jaxb.ac.impl.AuthenticatorTypeImpl)com.sun.identity.liberty.ws.common.jaxb.ac.impl.AuthenticatorElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("IPAddress" == ___local)&&("urn:liberty:ac:2003-08" == ___uri)) {
                            spawnHandlerFromEnterElement((((com.sun.identity.liberty.ws.common.jaxb.ac.impl.AuthenticatorTypeImpl)com.sun.identity.liberty.ws.common.jaxb.ac.impl.AuthenticatorElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("AsymmetricDecryption" == ___local)&&("urn:liberty:ac:2003-08" == ___uri)) {
                            spawnHandlerFromEnterElement((((com.sun.identity.liberty.ws.common.jaxb.ac.impl.AuthenticatorTypeImpl)com.sun.identity.liberty.ws.common.jaxb.ac.impl.AuthenticatorElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("AsymmetricDecryption" == ___local)&&("urn:liberty:ac:2003-08" == ___uri)) {
                            spawnHandlerFromEnterElement((((com.sun.identity.liberty.ws.common.jaxb.ac.impl.AuthenticatorTypeImpl)com.sun.identity.liberty.ws.common.jaxb.ac.impl.AuthenticatorElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("AsymmetricKeyAgreement" == ___local)&&("urn:liberty:ac:2003-08" == ___uri)) {
                            spawnHandlerFromEnterElement((((com.sun.identity.liberty.ws.common.jaxb.ac.impl.AuthenticatorTypeImpl)com.sun.identity.liberty.ws.common.jaxb.ac.impl.AuthenticatorElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("AsymmetricKeyAgreement" == ___local)&&("urn:liberty:ac:2003-08" == ___uri)) {
                            spawnHandlerFromEnterElement((((com.sun.identity.liberty.ws.common.jaxb.ac.impl.AuthenticatorTypeImpl)com.sun.identity.liberty.ws.common.jaxb.ac.impl.AuthenticatorElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("Extension" == ___local)&&("urn:liberty:ac:2003-08" == ___uri)) {
                            spawnHandlerFromEnterElement((((com.sun.identity.liberty.ws.common.jaxb.ac.impl.AuthenticatorTypeImpl)com.sun.identity.liberty.ws.common.jaxb.ac.impl.AuthenticatorElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("Extension" == ___local)&&("urn:liberty:ac:2003-08" == ___uri)) {
                            spawnHandlerFromEnterElement((((com.sun.identity.liberty.ws.common.jaxb.ac.impl.AuthenticatorTypeImpl)com.sun.identity.liberty.ws.common.jaxb.ac.impl.AuthenticatorElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        break;
                }
                super.enterElement(___uri, ___local, ___qname, __atts);
                break;
            }
        }

        public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  2 :
                        if (("Authenticator" == ___local)&&("urn:liberty:ac:2003-08" == ___uri)) {
                            context.popAttributes();
                            state = 3;
                            return ;
                        }
                        break;
                    case  3 :
                        revertToParentFromLeaveElement(___uri, ___local, ___qname);
                        return ;
                }
                super.leaveElement(___uri, ___local, ___qname);
                break;
            }
        }

        public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  3 :
                        revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                        return ;
                }
                super.enterAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  3 :
                        revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                        return ;
                }
                super.leaveAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void handleText(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                try {
                    switch (state) {
                        case  3 :
                            revertToParentFromText(value);
                            return ;
                    }
                } catch (java.lang.RuntimeException e) {
                    handleUnexpectedTextException(value, e);
                }
                break;
            }
        }

    }

}
