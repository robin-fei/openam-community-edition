//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v1.0.6-b27-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2012.06.11 at 10:33:54 AM PDT 
//


package com.sun.identity.liberty.ws.common.jaxb.ps.impl;

public class EncryptedNameIdentifierTypeImpl implements com.sun.identity.liberty.ws.common.jaxb.ps.EncryptedNameIdentifierType, com.sun.xml.bind.JAXBObject, com.sun.identity.federation.jaxb.entityconfig.impl.runtime.UnmarshallableObject, com.sun.identity.federation.jaxb.entityconfig.impl.runtime.XMLSerializable, com.sun.identity.federation.jaxb.entityconfig.impl.runtime.ValidatableObject
{

    protected com.sun.identity.liberty.ws.common.jaxb.xmlenc.EncryptedKeyType _EncryptedKey;
    protected com.sun.identity.liberty.ws.common.jaxb.xmlenc.EncryptedDataType _EncryptedData;
    public final static java.lang.Class version = (com.sun.identity.liberty.ws.common.jaxb.ps.impl.JAXBVersion.class);
    private static com.sun.msv.grammar.Grammar schemaFragment;

    private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
        return (com.sun.identity.liberty.ws.common.jaxb.ps.EncryptedNameIdentifierType.class);
    }

    public com.sun.identity.liberty.ws.common.jaxb.xmlenc.EncryptedKeyType getEncryptedKey() {
        return _EncryptedKey;
    }

    public void setEncryptedKey(com.sun.identity.liberty.ws.common.jaxb.xmlenc.EncryptedKeyType value) {
        _EncryptedKey = value;
    }

    public com.sun.identity.liberty.ws.common.jaxb.xmlenc.EncryptedDataType getEncryptedData() {
        return _EncryptedData;
    }

    public void setEncryptedData(com.sun.identity.liberty.ws.common.jaxb.xmlenc.EncryptedDataType value) {
        _EncryptedData = value;
    }

    public com.sun.identity.federation.jaxb.entityconfig.impl.runtime.UnmarshallingEventHandler createUnmarshaller(com.sun.identity.federation.jaxb.entityconfig.impl.runtime.UnmarshallingContext context) {
        return new com.sun.identity.liberty.ws.common.jaxb.ps.impl.EncryptedNameIdentifierTypeImpl.Unmarshaller(context);
    }

    public void serializeBody(com.sun.identity.federation.jaxb.entityconfig.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        if (_EncryptedData instanceof javax.xml.bind.Element) {
            context.childAsBody(((com.sun.xml.bind.JAXBObject) _EncryptedData), "EncryptedData");
        } else {
            context.startElement("http://www.w3.org/2001/04/xmlenc#", "EncryptedData");
            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _EncryptedData), "EncryptedData");
            context.endNamespaceDecls();
            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _EncryptedData), "EncryptedData");
            context.endAttributes();
            context.childAsBody(((com.sun.xml.bind.JAXBObject) _EncryptedData), "EncryptedData");
            context.endElement();
        }
        if (_EncryptedKey!= null) {
            if (_EncryptedKey instanceof javax.xml.bind.Element) {
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _EncryptedKey), "EncryptedKey");
            } else {
                context.startElement("http://www.w3.org/2001/04/xmlenc#", "EncryptedKey");
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _EncryptedKey), "EncryptedKey");
                context.endNamespaceDecls();
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _EncryptedKey), "EncryptedKey");
                context.endAttributes();
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _EncryptedKey), "EncryptedKey");
                context.endElement();
            }
        }
    }

    public void serializeAttributes(com.sun.identity.federation.jaxb.entityconfig.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        if (_EncryptedData instanceof javax.xml.bind.Element) {
            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _EncryptedData), "EncryptedData");
        }
        if (_EncryptedKey!= null) {
            if (_EncryptedKey instanceof javax.xml.bind.Element) {
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _EncryptedKey), "EncryptedKey");
            }
        }
    }

    public void serializeURIs(com.sun.identity.federation.jaxb.entityconfig.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        if (_EncryptedData instanceof javax.xml.bind.Element) {
            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _EncryptedData), "EncryptedData");
        }
        if (_EncryptedKey!= null) {
            if (_EncryptedKey instanceof javax.xml.bind.Element) {
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _EncryptedKey), "EncryptedKey");
            }
        }
    }

    public java.lang.Class getPrimaryInterface() {
        return (com.sun.identity.liberty.ws.common.jaxb.ps.EncryptedNameIdentifierType.class);
    }

    public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
        if (schemaFragment == null) {
            schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.su"
+"n.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gra"
+"mmar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expressi"
+"on\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0002L\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000b"
+"expandedExpq\u0000~\u0000\u0002xpppsr\u0000\u001dcom.sun.msv.grammar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0001ppsr\u0000\'com.sun.msv.grammar.trex.ElementPattern\u0000\u0000\u0000\u0000\u0000"
+"\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\tnameClasst\u0000\u001fLcom/sun/msv/grammar/NameClass;xr\u0000\u001ecom."
+"sun.msv.grammar.ElementExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAttr"
+"ibutesL\u0000\fcontentModelq\u0000~\u0000\u0002xq\u0000~\u0000\u0003pp\u0000sq\u0000~\u0000\u0006ppsr\u0000 com.sun.msv.g"
+"rammar.OneOrMoreExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001ccom.sun.msv.grammar.UnaryE"
+"xp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0003expq\u0000~\u0000\u0002xq\u0000~\u0000\u0003sr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002"
+"\u0000\u0001Z\u0000\u0005valuexp\u0000psr\u0000 com.sun.msv.grammar.AttributeExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000"
+"\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnameClassq\u0000~\u0000\txq\u0000~\u0000\u0003q\u0000~\u0000\u0011psr\u00002com.sun.msv.gra"
+"mmar.Expression$AnyStringExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003sq\u0000~\u0000\u0010\u0001q"
+"\u0000~\u0000\u0015sr\u0000 com.sun.msv.grammar.AnyNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.s"
+"un.msv.grammar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.sun.msv.grammar"
+".Expression$EpsilonExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003q\u0000~\u0000\u0016q\u0000~\u0000\u001bsr\u0000#"
+"com.sun.msv.grammar.SimpleNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNamet\u0000"
+"\u0012Ljava/lang/String;L\u0000\fnamespaceURIq\u0000~\u0000\u001dxq\u0000~\u0000\u0018t\u0000Ccom.sun.iden"
+"tity.liberty.ws.common.jaxb.xmlenc.EncryptedDataElementt\u0000+ht"
+"tp://java.sun.com/jaxb/xjc/dummy-elementssq\u0000~\u0000\bpp\u0000sq\u0000~\u0000\u0000ppsq"
+"\u0000~\u0000\bpp\u0000sq\u0000~\u0000\u0006ppsq\u0000~\u0000\rq\u0000~\u0000\u0011psq\u0000~\u0000\u0012q\u0000~\u0000\u0011pq\u0000~\u0000\u0015q\u0000~\u0000\u0019q\u0000~\u0000\u001bsq\u0000~\u0000\u001c"
+"t\u0000@com.sun.identity.liberty.ws.common.jaxb.xmlenc.EncryptedD"
+"ataTypeq\u0000~\u0000 sq\u0000~\u0000\u0006ppsq\u0000~\u0000\u0012q\u0000~\u0000\u0011psr\u0000\u001bcom.sun.msv.grammar.Data"
+"Exp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/relaxng/datatype/Datatype;L\u0000\u0006exce"
+"ptq\u0000~\u0000\u0002L\u0000\u0004namet\u0000\u001dLcom/sun/msv/util/StringPair;xq\u0000~\u0000\u0003q\u0000~\u0000\u0011psr"
+"\u0000\"com.sun.msv.datatype.xsd.QnameType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000*com.sun.m"
+"sv.datatype.xsd.BuiltinAtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv."
+"datatype.xsd.ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com.sun.msv.datatype"
+".xsd.XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUriq\u0000~\u0000\u001dL\u0000\btypeNam"
+"eq\u0000~\u0000\u001dL\u0000\nwhiteSpacet\u0000.Lcom/sun/msv/datatype/xsd/WhiteSpacePr"
+"ocessor;xpt\u0000 http://www.w3.org/2001/XMLSchemat\u0000\u0005QNamesr\u00005com"
+".sun.msv.datatype.xsd.WhiteSpaceProcessor$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000"
+"\u0000xr\u0000,com.sun.msv.datatype.xsd.WhiteSpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000"
+"xpsr\u00000com.sun.msv.grammar.Expression$NullSetExpression\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003q\u0000~\u0000\u0011psr\u0000\u001bcom.sun.msv.util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L"
+"\u0000\tlocalNameq\u0000~\u0000\u001dL\u0000\fnamespaceURIq\u0000~\u0000\u001dxpq\u0000~\u00006q\u0000~\u00005sq\u0000~\u0000\u001ct\u0000\u0004typ"
+"et\u0000)http://www.w3.org/2001/XMLSchema-instanceq\u0000~\u0000\u001bsq\u0000~\u0000\u001ct\u0000\rE"
+"ncryptedDatat\u0000!http://www.w3.org/2001/04/xmlenc#sq\u0000~\u0000\u0006ppsq\u0000~"
+"\u0000\u0006q\u0000~\u0000\u0011psq\u0000~\u0000\bq\u0000~\u0000\u0011p\u0000sq\u0000~\u0000\u0006ppsq\u0000~\u0000\rq\u0000~\u0000\u0011psq\u0000~\u0000\u0012q\u0000~\u0000\u0011pq\u0000~\u0000\u0015q\u0000"
+"~\u0000\u0019q\u0000~\u0000\u001bsq\u0000~\u0000\u001ct\u0000Bcom.sun.identity.liberty.ws.common.jaxb.xml"
+"enc.EncryptedKeyElementq\u0000~\u0000 sq\u0000~\u0000\bq\u0000~\u0000\u0011p\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\bpp\u0000sq"
+"\u0000~\u0000\u0006ppsq\u0000~\u0000\rq\u0000~\u0000\u0011psq\u0000~\u0000\u0012q\u0000~\u0000\u0011pq\u0000~\u0000\u0015q\u0000~\u0000\u0019q\u0000~\u0000\u001bsq\u0000~\u0000\u001ct\u0000?com.su"
+"n.identity.liberty.ws.common.jaxb.xmlenc.EncryptedKeyTypeq\u0000~"
+"\u0000 sq\u0000~\u0000\u0006ppsq\u0000~\u0000\u0012q\u0000~\u0000\u0011pq\u0000~\u0000.q\u0000~\u0000>q\u0000~\u0000\u001bsq\u0000~\u0000\u001ct\u0000\fEncryptedKeyq\u0000"
+"~\u0000Cq\u0000~\u0000\u001bsr\u0000\"com.sun.msv.grammar.ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\b"
+"expTablet\u0000/Lcom/sun/msv/grammar/ExpressionPool$ClosedHash;xp"
+"sr\u0000-com.sun.msv.grammar.ExpressionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0003\u0000\u0003"
+"I\u0000\u0005countB\u0000\rstreamVersionL\u0000\u0006parentt\u0000$Lcom/sun/msv/grammar/Exp"
+"ressionPool;xp\u0000\u0000\u0000\u0010\u0001pq\u0000~\u0000Eq\u0000~\u0000\u000fq\u0000~\u0000%q\u0000~\u0000Hq\u0000~\u0000Pq\u0000~\u0000\fq\u0000~\u0000$q\u0000~\u0000G"
+"q\u0000~\u0000Oq\u0000~\u0000\"q\u0000~\u0000Mq\u0000~\u0000\u0005q\u0000~\u0000Dq\u0000~\u0000)q\u0000~\u0000Tq\u0000~\u0000\u0007x"));
        }
        return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
    }

    public class Unmarshaller
        extends com.sun.identity.federation.jaxb.entityconfig.impl.runtime.AbstractUnmarshallingEventHandlerImpl
    {


        public Unmarshaller(com.sun.identity.federation.jaxb.entityconfig.impl.runtime.UnmarshallingContext context) {
            super(context, "-------");
        }

        protected Unmarshaller(com.sun.identity.federation.jaxb.entityconfig.impl.runtime.UnmarshallingContext context, int startState) {
            this(context);
            state = startState;
        }

        public java.lang.Object owner() {
            return com.sun.identity.liberty.ws.common.jaxb.ps.impl.EncryptedNameIdentifierTypeImpl.this;
        }

        public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  0 :
                        if (("EncryptedData" == ___local)&&("http://www.w3.org/2001/04/xmlenc#" == ___uri)) {
                            _EncryptedData = ((com.sun.identity.liberty.ws.common.jaxb.xmlenc.impl.EncryptedDataElementImpl) spawnChildFromEnterElement((com.sun.identity.liberty.ws.common.jaxb.xmlenc.impl.EncryptedDataElementImpl.class), 1, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("EncryptedData" == ___local)&&("http://www.w3.org/2001/04/xmlenc#" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 5;
                            return ;
                        }
                        break;
                    case  3 :
                        attIdx = context.getAttribute("", "Recipient");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        attIdx = context.getAttribute("", "Encoding");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        attIdx = context.getAttribute("", "Id");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        attIdx = context.getAttribute("", "MimeType");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        attIdx = context.getAttribute("", "Type");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("EncryptionMethod" == ___local)&&("http://www.w3.org/2001/04/xmlenc#" == ___uri)) {
                            _EncryptedKey = ((com.sun.identity.liberty.ws.common.jaxb.xmlenc.impl.EncryptedKeyTypeImpl) spawnChildFromEnterElement((com.sun.identity.liberty.ws.common.jaxb.xmlenc.impl.EncryptedKeyTypeImpl.class), 4, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("KeyInfo" == ___local)&&("http://www.w3.org/2000/09/xmldsig#" == ___uri)) {
                            _EncryptedKey = ((com.sun.identity.liberty.ws.common.jaxb.xmlenc.impl.EncryptedKeyTypeImpl) spawnChildFromEnterElement((com.sun.identity.liberty.ws.common.jaxb.xmlenc.impl.EncryptedKeyTypeImpl.class), 4, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("KeyInfo" == ___local)&&("http://www.w3.org/2000/09/xmldsig#" == ___uri)) {
                            _EncryptedKey = ((com.sun.identity.liberty.ws.common.jaxb.xmlenc.impl.EncryptedKeyTypeImpl) spawnChildFromEnterElement((com.sun.identity.liberty.ws.common.jaxb.xmlenc.impl.EncryptedKeyTypeImpl.class), 4, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("CipherData" == ___local)&&("http://www.w3.org/2001/04/xmlenc#" == ___uri)) {
                            _EncryptedKey = ((com.sun.identity.liberty.ws.common.jaxb.xmlenc.impl.EncryptedKeyTypeImpl) spawnChildFromEnterElement((com.sun.identity.liberty.ws.common.jaxb.xmlenc.impl.EncryptedKeyTypeImpl.class), 4, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("CipherData" == ___local)&&("http://www.w3.org/2001/04/xmlenc#" == ___uri)) {
                            _EncryptedKey = ((com.sun.identity.liberty.ws.common.jaxb.xmlenc.impl.EncryptedKeyTypeImpl) spawnChildFromEnterElement((com.sun.identity.liberty.ws.common.jaxb.xmlenc.impl.EncryptedKeyTypeImpl.class), 4, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        break;
                    case  2 :
                        revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                        return ;
                    case  1 :
                        if (("EncryptedKey" == ___local)&&("http://www.w3.org/2001/04/xmlenc#" == ___uri)) {
                            _EncryptedKey = ((com.sun.identity.liberty.ws.common.jaxb.xmlenc.impl.EncryptedKeyElementImpl) spawnChildFromEnterElement((com.sun.identity.liberty.ws.common.jaxb.xmlenc.impl.EncryptedKeyElementImpl.class), 2, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("EncryptedKey" == ___local)&&("http://www.w3.org/2001/04/xmlenc#" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 3;
                            return ;
                        }
                        state = 2;
                        continue outer;
                    case  5 :
                        attIdx = context.getAttribute("", "Encoding");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        attIdx = context.getAttribute("", "Id");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        attIdx = context.getAttribute("", "MimeType");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        attIdx = context.getAttribute("", "Type");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("EncryptionMethod" == ___local)&&("http://www.w3.org/2001/04/xmlenc#" == ___uri)) {
                            _EncryptedData = ((com.sun.identity.liberty.ws.common.jaxb.xmlenc.impl.EncryptedDataTypeImpl) spawnChildFromEnterElement((com.sun.identity.liberty.ws.common.jaxb.xmlenc.impl.EncryptedDataTypeImpl.class), 6, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("KeyInfo" == ___local)&&("http://www.w3.org/2000/09/xmldsig#" == ___uri)) {
                            _EncryptedData = ((com.sun.identity.liberty.ws.common.jaxb.xmlenc.impl.EncryptedDataTypeImpl) spawnChildFromEnterElement((com.sun.identity.liberty.ws.common.jaxb.xmlenc.impl.EncryptedDataTypeImpl.class), 6, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("KeyInfo" == ___local)&&("http://www.w3.org/2000/09/xmldsig#" == ___uri)) {
                            _EncryptedData = ((com.sun.identity.liberty.ws.common.jaxb.xmlenc.impl.EncryptedDataTypeImpl) spawnChildFromEnterElement((com.sun.identity.liberty.ws.common.jaxb.xmlenc.impl.EncryptedDataTypeImpl.class), 6, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("CipherData" == ___local)&&("http://www.w3.org/2001/04/xmlenc#" == ___uri)) {
                            _EncryptedData = ((com.sun.identity.liberty.ws.common.jaxb.xmlenc.impl.EncryptedDataTypeImpl) spawnChildFromEnterElement((com.sun.identity.liberty.ws.common.jaxb.xmlenc.impl.EncryptedDataTypeImpl.class), 6, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("CipherData" == ___local)&&("http://www.w3.org/2001/04/xmlenc#" == ___uri)) {
                            _EncryptedData = ((com.sun.identity.liberty.ws.common.jaxb.xmlenc.impl.EncryptedDataTypeImpl) spawnChildFromEnterElement((com.sun.identity.liberty.ws.common.jaxb.xmlenc.impl.EncryptedDataTypeImpl.class), 6, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        break;
                }
                super.enterElement(___uri, ___local, ___qname, __atts);
                break;
            }
        }

        public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  4 :
                        if (("EncryptedKey" == ___local)&&("http://www.w3.org/2001/04/xmlenc#" == ___uri)) {
                            context.popAttributes();
                            state = 2;
                            return ;
                        }
                        break;
                    case  3 :
                        attIdx = context.getAttribute("", "Recipient");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "Encoding");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "Id");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "MimeType");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "Type");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                    case  6 :
                        if (("EncryptedData" == ___local)&&("http://www.w3.org/2001/04/xmlenc#" == ___uri)) {
                            context.popAttributes();
                            state = 1;
                            return ;
                        }
                        break;
                    case  2 :
                        revertToParentFromLeaveElement(___uri, ___local, ___qname);
                        return ;
                    case  1 :
                        state = 2;
                        continue outer;
                    case  5 :
                        attIdx = context.getAttribute("", "Encoding");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "Id");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "MimeType");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "Type");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                }
                super.leaveElement(___uri, ___local, ___qname);
                break;
            }
        }

        public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  3 :
                        if (("Recipient" == ___local)&&("" == ___uri)) {
                            _EncryptedKey = ((com.sun.identity.liberty.ws.common.jaxb.xmlenc.impl.EncryptedKeyTypeImpl) spawnChildFromEnterAttribute((com.sun.identity.liberty.ws.common.jaxb.xmlenc.impl.EncryptedKeyTypeImpl.class), 4, ___uri, ___local, ___qname));
                            return ;
                        }
                        if (("Encoding" == ___local)&&("" == ___uri)) {
                            _EncryptedKey = ((com.sun.identity.liberty.ws.common.jaxb.xmlenc.impl.EncryptedKeyTypeImpl) spawnChildFromEnterAttribute((com.sun.identity.liberty.ws.common.jaxb.xmlenc.impl.EncryptedKeyTypeImpl.class), 4, ___uri, ___local, ___qname));
                            return ;
                        }
                        if (("Id" == ___local)&&("" == ___uri)) {
                            _EncryptedKey = ((com.sun.identity.liberty.ws.common.jaxb.xmlenc.impl.EncryptedKeyTypeImpl) spawnChildFromEnterAttribute((com.sun.identity.liberty.ws.common.jaxb.xmlenc.impl.EncryptedKeyTypeImpl.class), 4, ___uri, ___local, ___qname));
                            return ;
                        }
                        if (("MimeType" == ___local)&&("" == ___uri)) {
                            _EncryptedKey = ((com.sun.identity.liberty.ws.common.jaxb.xmlenc.impl.EncryptedKeyTypeImpl) spawnChildFromEnterAttribute((com.sun.identity.liberty.ws.common.jaxb.xmlenc.impl.EncryptedKeyTypeImpl.class), 4, ___uri, ___local, ___qname));
                            return ;
                        }
                        if (("Type" == ___local)&&("" == ___uri)) {
                            _EncryptedKey = ((com.sun.identity.liberty.ws.common.jaxb.xmlenc.impl.EncryptedKeyTypeImpl) spawnChildFromEnterAttribute((com.sun.identity.liberty.ws.common.jaxb.xmlenc.impl.EncryptedKeyTypeImpl.class), 4, ___uri, ___local, ___qname));
                            return ;
                        }
                        break;
                    case  2 :
                        revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                        return ;
                    case  1 :
                        state = 2;
                        continue outer;
                    case  5 :
                        if (("Encoding" == ___local)&&("" == ___uri)) {
                            _EncryptedData = ((com.sun.identity.liberty.ws.common.jaxb.xmlenc.impl.EncryptedDataTypeImpl) spawnChildFromEnterAttribute((com.sun.identity.liberty.ws.common.jaxb.xmlenc.impl.EncryptedDataTypeImpl.class), 6, ___uri, ___local, ___qname));
                            return ;
                        }
                        if (("Id" == ___local)&&("" == ___uri)) {
                            _EncryptedData = ((com.sun.identity.liberty.ws.common.jaxb.xmlenc.impl.EncryptedDataTypeImpl) spawnChildFromEnterAttribute((com.sun.identity.liberty.ws.common.jaxb.xmlenc.impl.EncryptedDataTypeImpl.class), 6, ___uri, ___local, ___qname));
                            return ;
                        }
                        if (("MimeType" == ___local)&&("" == ___uri)) {
                            _EncryptedData = ((com.sun.identity.liberty.ws.common.jaxb.xmlenc.impl.EncryptedDataTypeImpl) spawnChildFromEnterAttribute((com.sun.identity.liberty.ws.common.jaxb.xmlenc.impl.EncryptedDataTypeImpl.class), 6, ___uri, ___local, ___qname));
                            return ;
                        }
                        if (("Type" == ___local)&&("" == ___uri)) {
                            _EncryptedData = ((com.sun.identity.liberty.ws.common.jaxb.xmlenc.impl.EncryptedDataTypeImpl) spawnChildFromEnterAttribute((com.sun.identity.liberty.ws.common.jaxb.xmlenc.impl.EncryptedDataTypeImpl.class), 6, ___uri, ___local, ___qname));
                            return ;
                        }
                        break;
                }
                super.enterAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  3 :
                        attIdx = context.getAttribute("", "Recipient");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "Encoding");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "Id");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "MimeType");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "Type");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                    case  2 :
                        revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                        return ;
                    case  1 :
                        state = 2;
                        continue outer;
                    case  5 :
                        attIdx = context.getAttribute("", "Encoding");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "Id");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "MimeType");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "Type");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                }
                super.leaveAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void handleText(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                try {
                    switch (state) {
                        case  3 :
                            attIdx = context.getAttribute("", "Recipient");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            attIdx = context.getAttribute("", "Encoding");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            attIdx = context.getAttribute("", "Id");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            attIdx = context.getAttribute("", "MimeType");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            attIdx = context.getAttribute("", "Type");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            break;
                        case  2 :
                            revertToParentFromText(value);
                            return ;
                        case  1 :
                            state = 2;
                            continue outer;
                        case  5 :
                            attIdx = context.getAttribute("", "Encoding");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            attIdx = context.getAttribute("", "Id");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            attIdx = context.getAttribute("", "MimeType");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            attIdx = context.getAttribute("", "Type");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            break;
                    }
                } catch (java.lang.RuntimeException e) {
                    handleUnexpectedTextException(value, e);
                }
                break;
            }
        }

    }

}
