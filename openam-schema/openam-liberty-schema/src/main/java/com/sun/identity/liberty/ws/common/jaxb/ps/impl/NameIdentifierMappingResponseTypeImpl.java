//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v1.0.6-b27-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2012.06.11 at 10:33:54 AM PDT 
//


package com.sun.identity.liberty.ws.common.jaxb.ps.impl;

public class NameIdentifierMappingResponseTypeImpl
    extends com.sun.identity.liberty.ws.common.jaxb.protocol.impl.ResponseAbstractTypeImpl
    implements com.sun.identity.liberty.ws.common.jaxb.ps.NameIdentifierMappingResponseType, com.sun.xml.bind.JAXBObject, com.sun.identity.federation.jaxb.entityconfig.impl.runtime.UnmarshallableObject, com.sun.identity.federation.jaxb.entityconfig.impl.runtime.XMLSerializable, com.sun.identity.federation.jaxb.entityconfig.impl.runtime.ValidatableObject
{

    protected com.sun.identity.liberty.ws.common.jaxb.protocol.StatusType _Status;
    protected com.sun.xml.bind.util.ListImpl _Extension;
    protected java.lang.String _ProviderID;
    protected com.sun.identity.liberty.ws.common.jaxb.assertion.NameIdentifierType _NameIdentifier;
    public final static java.lang.Class version = (com.sun.identity.liberty.ws.common.jaxb.ps.impl.JAXBVersion.class);
    private static com.sun.msv.grammar.Grammar schemaFragment;

    private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
        return (com.sun.identity.liberty.ws.common.jaxb.ps.NameIdentifierMappingResponseType.class);
    }

    public com.sun.identity.liberty.ws.common.jaxb.protocol.StatusType getStatus() {
        return _Status;
    }

    public void setStatus(com.sun.identity.liberty.ws.common.jaxb.protocol.StatusType value) {
        _Status = value;
    }

    protected com.sun.xml.bind.util.ListImpl _getExtension() {
        if (_Extension == null) {
            _Extension = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
        }
        return _Extension;
    }

    public java.util.List getExtension() {
        return _getExtension();
    }

    public java.lang.String getProviderID() {
        return _ProviderID;
    }

    public void setProviderID(java.lang.String value) {
        _ProviderID = value;
    }

    public com.sun.identity.liberty.ws.common.jaxb.assertion.NameIdentifierType getNameIdentifier() {
        return _NameIdentifier;
    }

    public void setNameIdentifier(com.sun.identity.liberty.ws.common.jaxb.assertion.NameIdentifierType value) {
        _NameIdentifier = value;
    }

    public com.sun.identity.federation.jaxb.entityconfig.impl.runtime.UnmarshallingEventHandler createUnmarshaller(com.sun.identity.federation.jaxb.entityconfig.impl.runtime.UnmarshallingContext context) {
        return new com.sun.identity.liberty.ws.common.jaxb.ps.impl.NameIdentifierMappingResponseTypeImpl.Unmarshaller(context);
    }

    public void serializeBody(com.sun.identity.federation.jaxb.entityconfig.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        int idx2 = 0;
        final int len2 = ((_Extension == null)? 0 :_Extension.size());
        super.serializeBody(context);
        while (idx2 != len2) {
            if (_Extension.get(idx2) instanceof javax.xml.bind.Element) {
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _Extension.get(idx2 ++)), "Extension");
            } else {
                context.startElement("urn:liberty:iff:2003-08", "Extension");
                int idx_0 = idx2;
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Extension.get(idx_0 ++)), "Extension");
                context.endNamespaceDecls();
                int idx_1 = idx2;
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Extension.get(idx_1 ++)), "Extension");
                context.endAttributes();
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _Extension.get(idx2 ++)), "Extension");
                context.endElement();
            }
        }
        context.startElement("urn:liberty:iff:2003-08", "ProviderID");
        context.endNamespaceDecls();
        context.endAttributes();
        try {
            context.text(((java.lang.String) _ProviderID), "ProviderID");
        } catch (java.lang.Exception e) {
            com.sun.identity.federation.jaxb.entityconfig.impl.runtime.Util.handlePrintConversionException(this, e, context);
        }
        context.endElement();
        if (_Status instanceof javax.xml.bind.Element) {
            context.childAsBody(((com.sun.xml.bind.JAXBObject) _Status), "Status");
        } else {
            context.startElement("urn:oasis:names:tc:SAML:1.0:protocol", "Status");
            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Status), "Status");
            context.endNamespaceDecls();
            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Status), "Status");
            context.endAttributes();
            context.childAsBody(((com.sun.xml.bind.JAXBObject) _Status), "Status");
            context.endElement();
        }
        if (_NameIdentifier!= null) {
            if (_NameIdentifier instanceof javax.xml.bind.Element) {
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _NameIdentifier), "NameIdentifier");
            } else {
                context.startElement("urn:oasis:names:tc:SAML:1.0:assertion", "NameIdentifier");
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _NameIdentifier), "NameIdentifier");
                context.endNamespaceDecls();
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _NameIdentifier), "NameIdentifier");
                context.endAttributes();
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _NameIdentifier), "NameIdentifier");
                context.endElement();
            }
        }
    }

    public void serializeAttributes(com.sun.identity.federation.jaxb.entityconfig.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        int idx2 = 0;
        final int len2 = ((_Extension == null)? 0 :_Extension.size());
        super.serializeAttributes(context);
        while (idx2 != len2) {
            if (_Extension.get(idx2) instanceof javax.xml.bind.Element) {
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Extension.get(idx2 ++)), "Extension");
            } else {
                idx2 += 1;
            }
        }
        if (_Status instanceof javax.xml.bind.Element) {
            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Status), "Status");
        }
        if (_NameIdentifier!= null) {
            if (_NameIdentifier instanceof javax.xml.bind.Element) {
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _NameIdentifier), "NameIdentifier");
            }
        }
    }

    public void serializeURIs(com.sun.identity.federation.jaxb.entityconfig.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        int idx2 = 0;
        final int len2 = ((_Extension == null)? 0 :_Extension.size());
        super.serializeURIs(context);
        while (idx2 != len2) {
            if (_Extension.get(idx2) instanceof javax.xml.bind.Element) {
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Extension.get(idx2 ++)), "Extension");
            } else {
                idx2 += 1;
            }
        }
        if (_Status instanceof javax.xml.bind.Element) {
            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Status), "Status");
        }
        if (_NameIdentifier!= null) {
            if (_NameIdentifier instanceof javax.xml.bind.Element) {
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _NameIdentifier), "NameIdentifier");
            }
        }
    }

    public java.lang.Class getPrimaryInterface() {
        return (com.sun.identity.liberty.ws.common.jaxb.ps.NameIdentifierMappingResponseType.class);
    }

    public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
        if (schemaFragment == null) {
            schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.su"
+"n.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gra"
+"mmar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expressi"
+"on\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0002L\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000b"
+"expandedExpq\u0000~\u0000\u0002xpppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000pp"
+"sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsr\u0000\u001dcom.sun.msv.grammar.Choi"
+"ceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0001ppsq\u0000~\u0000\u000fsr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002"
+"\u0000\u0001Z\u0000\u0005valuexp\u0000psr\u0000\'com.sun.msv.grammar.trex.ElementPattern\u0000\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\tnameClasst\u0000\u001fLcom/sun/msv/grammar/NameClass;xr\u0000\u001eco"
+"m.sun.msv.grammar.ElementExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAt"
+"tributesL\u0000\fcontentModelq\u0000~\u0000\u0002xq\u0000~\u0000\u0003q\u0000~\u0000\u0013p\u0000sq\u0000~\u0000\u000fppsr\u0000 com.sun"
+".msv.grammar.OneOrMoreExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001ccom.sun.msv.grammar."
+"UnaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0003expq\u0000~\u0000\u0002xq\u0000~\u0000\u0003q\u0000~\u0000\u0013psr\u0000 com.sun.msv.gr"
+"ammar.AttributeExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnameClassq\u0000~\u0000\u0015xq\u0000"
+"~\u0000\u0003q\u0000~\u0000\u0013psr\u00002com.sun.msv.grammar.Expression$AnyStringExpress"
+"ion\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003sq\u0000~\u0000\u0012\u0001q\u0000~\u0000\u001fsr\u0000 com.sun.msv.grammar.AnyN"
+"ameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.sun.msv.grammar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001"
+"\u0002\u0000\u0000xpsr\u00000com.sun.msv.grammar.Expression$EpsilonExpression\u0000\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003q\u0000~\u0000 q\u0000~\u0000%sr\u0000#com.sun.msv.grammar.SimpleNameCl"
+"ass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNamet\u0000\u0012Ljava/lang/String;L\u0000\fnamespaceU"
+"RIq\u0000~\u0000\'xq\u0000~\u0000\"t\u0000?com.sun.identity.liberty.ws.common.jaxb.xmls"
+"ig.SignatureElementt\u0000+http://java.sun.com/jaxb/xjc/dummy-ele"
+"mentssq\u0000~\u0000\u0014q\u0000~\u0000\u0013p\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0014pp\u0000sq\u0000~\u0000\u000fppsq\u0000~\u0000\u0019q\u0000~\u0000\u0013psq\u0000~\u0000"
+"\u001cq\u0000~\u0000\u0013pq\u0000~\u0000\u001fq\u0000~\u0000#q\u0000~\u0000%sq\u0000~\u0000&t\u0000<com.sun.identity.liberty.ws.c"
+"ommon.jaxb.xmlsig.SignatureTypeq\u0000~\u0000*sq\u0000~\u0000\u000fppsq\u0000~\u0000\u001cq\u0000~\u0000\u0013psr\u0000\u001b"
+"com.sun.msv.grammar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/relaxng/d"
+"atatype/Datatype;L\u0000\u0006exceptq\u0000~\u0000\u0002L\u0000\u0004namet\u0000\u001dLcom/sun/msv/util/S"
+"tringPair;xq\u0000~\u0000\u0003q\u0000~\u0000\u0013psr\u0000\"com.sun.msv.datatype.xsd.QnameType"
+"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000*com.sun.msv.datatype.xsd.BuiltinAtomicType\u0000\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.datatype.xsd.ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000"
+"xr\u0000\'com.sun.msv.datatype.xsd.XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnam"
+"espaceUriq\u0000~\u0000\'L\u0000\btypeNameq\u0000~\u0000\'L\u0000\nwhiteSpacet\u0000.Lcom/sun/msv/d"
+"atatype/xsd/WhiteSpaceProcessor;xpt\u0000 http://www.w3.org/2001/"
+"XMLSchemat\u0000\u0005QNamesr\u00005com.sun.msv.datatype.xsd.WhiteSpaceProc"
+"essor$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun.msv.datatype.xsd.WhiteS"
+"paceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.sun.msv.grammar.Expression"
+"$NullSetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003q\u0000~\u0000\u0013psr\u0000\u001bcom.sun.msv.uti"
+"l.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\'L\u0000\fnamespaceURIq\u0000~\u0000\'"
+"xpq\u0000~\u0000@q\u0000~\u0000?sq\u0000~\u0000&t\u0000\u0004typet\u0000)http://www.w3.org/2001/XMLSchema"
+"-instanceq\u0000~\u0000%sq\u0000~\u0000&t\u0000\tSignaturet\u0000\"http://www.w3.org/2000/09"
+"/xmldsig#q\u0000~\u0000%sq\u0000~\u0000\u000fppsq\u0000~\u0000\u0019q\u0000~\u0000\u0013psq\u0000~\u0000\u000fq\u0000~\u0000\u0013psq\u0000~\u0000\u0014q\u0000~\u0000\u0013p\u0000s"
+"q\u0000~\u0000\u000fppsq\u0000~\u0000\u0019q\u0000~\u0000\u0013psq\u0000~\u0000\u001cq\u0000~\u0000\u0013pq\u0000~\u0000\u001fq\u0000~\u0000#q\u0000~\u0000%sq\u0000~\u0000&t\u0000;com.s"
+"un.identity.liberty.ws.common.jaxb.ps.ExtensionElementq\u0000~\u0000*s"
+"q\u0000~\u0000\u0014q\u0000~\u0000\u0013p\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0014pp\u0000sq\u0000~\u0000\u000fppsq\u0000~\u0000\u0019q\u0000~\u0000\u0013psq\u0000~\u0000\u001cq\u0000~\u0000\u0013"
+"pq\u0000~\u0000\u001fq\u0000~\u0000#q\u0000~\u0000%sq\u0000~\u0000&t\u00008com.sun.identity.liberty.ws.common."
+"jaxb.ps.ExtensionTypeq\u0000~\u0000*sq\u0000~\u0000\u000fppsq\u0000~\u0000\u001cq\u0000~\u0000\u0013pq\u0000~\u00008q\u0000~\u0000Hq\u0000~\u0000"
+"%sq\u0000~\u0000&t\u0000\tExtensiont\u0000\u0017urn:liberty:iff:2003-08q\u0000~\u0000%sq\u0000~\u0000\u0014pp\u0000s"
+"q\u0000~\u0000\u0000ppsq\u0000~\u00005ppsr\u0000\'com.sun.msv.datatype.xsd.MaxLengthFacet\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001I\u0000\tmaxLengthxr\u00009com.sun.msv.datatype.xsd.DataTypeWi"
+"thValueConstraintFacet\"\u00a7Ro\u00ca\u00c7\u008aT\u0002\u0000\u0000xr\u0000*com.sun.msv.datatype.xs"
+"d.DataTypeWithFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0005Z\u0000\fisFacetFixedZ\u0000\u0012needValueChe"
+"ckFlagL\u0000\bbaseTypet\u0000)Lcom/sun/msv/datatype/xsd/XSDatatypeImpl"
+";L\u0000\fconcreteTypet\u0000\'Lcom/sun/msv/datatype/xsd/ConcreteType;L\u0000"
+"\tfacetNameq\u0000~\u0000\'xq\u0000~\u0000<t\u0000\u001curn:liberty:metadata:2003-08t\u0000\fentit"
+"yIDTypeq\u0000~\u0000C\u0000\u0000sr\u0000#com.sun.msv.datatype.xsd.AnyURIType\u0000\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0001\u0002\u0000\u0000xq\u0000~\u0000:q\u0000~\u0000?t\u0000\u0006anyURIq\u0000~\u0000Cq\u0000~\u0000pt\u0000\tmaxLength\u0000\u0000\u0004\u0000q\u0000~\u0000Esq\u0000~\u0000"
+"Fq\u0000~\u0000nq\u0000~\u0000msq\u0000~\u0000\u000fppsq\u0000~\u0000\u001cq\u0000~\u0000\u0013pq\u0000~\u00008q\u0000~\u0000Hq\u0000~\u0000%sq\u0000~\u0000&t\u0000\nProvi"
+"derIDq\u0000~\u0000csq\u0000~\u0000\u000fppsq\u0000~\u0000\u0014pp\u0000sq\u0000~\u0000\u000fppsq\u0000~\u0000\u0019q\u0000~\u0000\u0013psq\u0000~\u0000\u001cq\u0000~\u0000\u0013pq"
+"\u0000~\u0000\u001fq\u0000~\u0000#q\u0000~\u0000%sq\u0000~\u0000&t\u0000>com.sun.identity.liberty.ws.common.ja"
+"xb.protocol.StatusElementq\u0000~\u0000*sq\u0000~\u0000\u0014pp\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0014pp\u0000sq\u0000~"
+"\u0000\u000fppsq\u0000~\u0000\u0019q\u0000~\u0000\u0013psq\u0000~\u0000\u001cq\u0000~\u0000\u0013pq\u0000~\u0000\u001fq\u0000~\u0000#q\u0000~\u0000%sq\u0000~\u0000&t\u0000;com.sun."
+"identity.liberty.ws.common.jaxb.protocol.StatusTypeq\u0000~\u0000*sq\u0000~"
+"\u0000\u000fppsq\u0000~\u0000\u001cq\u0000~\u0000\u0013pq\u0000~\u00008q\u0000~\u0000Hq\u0000~\u0000%sq\u0000~\u0000&t\u0000\u0006Statust\u0000$urn:oasis:n"
+"ames:tc:SAML:1.0:protocolsq\u0000~\u0000\u000fppsq\u0000~\u0000\u000fq\u0000~\u0000\u0013psq\u0000~\u0000\u000fq\u0000~\u0000\u0013psq\u0000"
+"~\u0000\u0014q\u0000~\u0000\u0013p\u0000sq\u0000~\u0000\u000fppsq\u0000~\u0000\u0019q\u0000~\u0000\u0013psq\u0000~\u0000\u001cq\u0000~\u0000\u0013pq\u0000~\u0000\u001fq\u0000~\u0000#q\u0000~\u0000%sq\u0000"
+"~\u0000&t\u0000Gcom.sun.identity.liberty.ws.common.jaxb.assertion.Name"
+"IdentifierElementq\u0000~\u0000*sq\u0000~\u0000\u0014q\u0000~\u0000\u0013p\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0014pp\u0000sq\u0000~\u0000\u000fpp"
+"sq\u0000~\u0000\u0019q\u0000~\u0000\u0013psq\u0000~\u0000\u001cq\u0000~\u0000\u0013pq\u0000~\u0000\u001fq\u0000~\u0000#q\u0000~\u0000%sq\u0000~\u0000&t\u0000Dcom.sun.iden"
+"tity.liberty.ws.common.jaxb.assertion.NameIdentifierTypeq\u0000~\u0000"
+"*sq\u0000~\u0000\u000fppsq\u0000~\u0000\u001cq\u0000~\u0000\u0013pq\u0000~\u00008q\u0000~\u0000Hq\u0000~\u0000%sq\u0000~\u0000&t\u0000\u000eNameIdentifiert"
+"\u0000%urn:oasis:names:tc:SAML:1.0:assertionsq\u0000~\u0000\u0014q\u0000~\u0000\u0013p\u0000sq\u0000~\u0000\u000fpp"
+"sq\u0000~\u0000\u0019q\u0000~\u0000\u0013psq\u0000~\u0000\u001cq\u0000~\u0000\u0013pq\u0000~\u0000\u001fq\u0000~\u0000#q\u0000~\u0000%sq\u0000~\u0000&t\u0000Kcom.sun.iden"
+"tity.liberty.ws.common.jaxb.ps.EncryptableNameIdentifierElem"
+"entq\u0000~\u0000*q\u0000~\u0000%sq\u0000~\u0000\u000fppsq\u0000~\u0000\u001cq\u0000~\u0000\u0013psq\u0000~\u00005ppsr\u0000#com.sun.msv.dat"
+"atype.xsd.NcnameType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\"com.sun.msv.datatype.xsd."
+"TokenType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000#com.sun.msv.datatype.xsd.StringType\u0000"
+"\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001Z\u0000\risAlwaysValidxq\u0000~\u0000:q\u0000~\u0000?t\u0000\u0006NCNameq\u0000~\u0000C\u0000q\u0000~\u0000Esq\u0000"
+"~\u0000Fq\u0000~\u0000\u00afq\u0000~\u0000?sq\u0000~\u0000&t\u0000\fInResponseTot\u0000\u0000q\u0000~\u0000%sq\u0000~\u0000\u001cppsq\u0000~\u00005ppsr"
+"\u0000%com.sun.msv.datatype.xsd.DateTimeType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000)com.su"
+"n.msv.datatype.xsd.DateTimeBaseType\u0014W\u001a@3\u00a5\u00b4\u00e5\u0002\u0000\u0000xq\u0000~\u0000:q\u0000~\u0000?t\u0000\b"
+"dateTimeq\u0000~\u0000Cq\u0000~\u0000Esq\u0000~\u0000Fq\u0000~\u0000\u00b9q\u0000~\u0000?sq\u0000~\u0000&t\u0000\fIssueInstantq\u0000~\u0000\u00b3"
+"sq\u0000~\u0000\u001cppsq\u0000~\u00005ppsr\u0000$com.sun.msv.datatype.xsd.IntegerType\u0000\u0000\u0000\u0000"
+"\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000+com.sun.msv.datatype.xsd.IntegerDerivedType\u0099\u00f1]\u0090&6"
+"k\u00be\u0002\u0000\u0001L\u0000\nbaseFacetsq\u0000~\u0000jxq\u0000~\u0000:q\u0000~\u0000?t\u0000\u0007integerq\u0000~\u0000Csr\u0000,com.sun"
+".msv.datatype.xsd.FractionDigitsFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001I\u0000\u0005scalexr\u0000;"
+"com.sun.msv.datatype.xsd.DataTypeWithLexicalConstraintFacetT"
+"\u0090\u001c>\u001azb\u00ea\u0002\u0000\u0000xq\u0000~\u0000ippq\u0000~\u0000C\u0001\u0000sr\u0000#com.sun.msv.datatype.xsd.Number"
+"Type\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000:q\u0000~\u0000?t\u0000\u0007decimalq\u0000~\u0000Cq\u0000~\u0000\u00c7t\u0000\u000efractionDig"
+"its\u0000\u0000\u0000\u0000q\u0000~\u0000Esq\u0000~\u0000Fq\u0000~\u0000\u00c2q\u0000~\u0000?sq\u0000~\u0000&t\u0000\fMajorVersionq\u0000~\u0000\u00b3sq\u0000~\u0000\u001c"
+"ppq\u0000~\u0000\u00besq\u0000~\u0000&t\u0000\fMinorVersionq\u0000~\u0000\u00b3sq\u0000~\u0000\u000fppsq\u0000~\u0000\u001cq\u0000~\u0000\u0013psq\u0000~\u00005q"
+"\u0000~\u0000\u0013pq\u0000~\u0000pq\u0000~\u0000Esq\u0000~\u0000Fq\u0000~\u0000qq\u0000~\u0000?sq\u0000~\u0000&t\u0000\tRecipientq\u0000~\u0000\u00b3q\u0000~\u0000%s"
+"q\u0000~\u0000\u001cppsq\u0000~\u00005ppsr\u0000\u001fcom.sun.msv.datatype.xsd.IDType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000"
+"\u0000xq\u0000~\u0000\u00abq\u0000~\u0000?t\u0000\u0002IDq\u0000~\u0000C\u0000q\u0000~\u0000Esq\u0000~\u0000Fq\u0000~\u0000\u00daq\u0000~\u0000?sq\u0000~\u0000&t\u0000\nRespons"
+"eIDq\u0000~\u0000\u00b3sr\u0000\"com.sun.msv.grammar.ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\b"
+"expTablet\u0000/Lcom/sun/msv/grammar/ExpressionPool$ClosedHash;xp"
+"sr\u0000-com.sun.msv.grammar.ExpressionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0003\u0000\u0003"
+"I\u0000\u0005countB\u0000\rstreamVersionL\u0000\u0006parentt\u0000$Lcom/sun/msv/grammar/Exp"
+"ressionPool;xp\u0000\u0000\u00001\u0001pq\u0000~\u0000Pq\u0000~\u0000xq\u0000~\u0000\u008eq\u0000~\u0000Nq\u0000~\u0000Oq\u0000~\u0000\u001bq\u0000~\u0000/q\u0000~\u0000S"
+"q\u0000~\u0000[q\u0000~\u0000{q\u0000~\u0000\u0083q\u0000~\u0000\u0091q\u0000~\u0000\u0099q\u0000~\u0000\u00a4q\u0000~\u0000\rq\u0000~\u0000\u0018q\u0000~\u0000.q\u0000~\u0000Rq\u0000~\u0000Zq\u0000~\u0000z"
+"q\u0000~\u0000\u0082q\u0000~\u0000\u0090q\u0000~\u0000\u0098q\u0000~\u0000\u00a3q\u0000~\u0000eq\u0000~\u0000\u0007q\u0000~\u0000,q\u0000~\u0000Xq\u0000~\u0000\u000eq\u0000~\u0000\u0080q\u0000~\u0000\u0096q\u0000~\u0000\t"
+"q\u0000~\u0000\u0005q\u0000~\u0000\u008dq\u0000~\u0000\fq\u0000~\u0000\u00a8q\u0000~\u0000\bq\u0000~\u0000\u00d0q\u0000~\u0000\nq\u0000~\u0000\u0006q\u0000~\u0000\u0010q\u0000~\u0000\u008cq\u0000~\u00003q\u0000~\u0000_"
+"q\u0000~\u0000tq\u0000~\u0000\u0087q\u0000~\u0000\u009dq\u0000~\u0000\u000bq\u0000~\u0000\u0011x"));
        }
        return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
    }

    public class Unmarshaller
        extends com.sun.identity.federation.jaxb.entityconfig.impl.runtime.AbstractUnmarshallingEventHandlerImpl
    {


        public Unmarshaller(com.sun.identity.federation.jaxb.entityconfig.impl.runtime.UnmarshallingContext context) {
            super(context, "--------------");
        }

        protected Unmarshaller(com.sun.identity.federation.jaxb.entityconfig.impl.runtime.UnmarshallingContext context, int startState) {
            this(context);
            state = startState;
        }

        public java.lang.Object owner() {
            return com.sun.identity.liberty.ws.common.jaxb.ps.impl.NameIdentifierMappingResponseTypeImpl.this;
        }

        public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  12 :
                        attIdx = context.getAttribute("", "Format");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        attIdx = context.getAttribute("", "NameQualifier");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        break;
                    case  7 :
                        if (("Status" == ___local)&&("urn:oasis:names:tc:SAML:1.0:protocol" == ___uri)) {
                            _Status = ((com.sun.identity.liberty.ws.common.jaxb.protocol.impl.StatusElementImpl) spawnChildFromEnterElement((com.sun.identity.liberty.ws.common.jaxb.protocol.impl.StatusElementImpl.class), 10, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("Status" == ___local)&&("urn:oasis:names:tc:SAML:1.0:protocol" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 8;
                            return ;
                        }
                        break;
                    case  3 :
                        if (!(("" == ___uri)||("urn:liberty:iff:2003-08" == ___uri))) {
                            _getExtension().add(((com.sun.identity.liberty.ws.common.jaxb.ps.impl.ExtensionTypeImpl) spawnChildFromEnterElement((com.sun.identity.liberty.ws.common.jaxb.ps.impl.ExtensionTypeImpl.class), 4, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        break;
                    case  1 :
                        if (("Extension" == ___local)&&("urn:liberty:iff:2003-08" == ___uri)) {
                            _getExtension().add(((com.sun.identity.liberty.ws.common.jaxb.ps.impl.ExtensionElementImpl) spawnChildFromEnterElement((com.sun.identity.liberty.ws.common.jaxb.ps.impl.ExtensionElementImpl.class), 2, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("Extension" == ___local)&&("urn:liberty:iff:2003-08" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 3;
                            return ;
                        }
                        state = 2;
                        continue outer;
                    case  2 :
                        if (("Extension" == ___local)&&("urn:liberty:iff:2003-08" == ___uri)) {
                            _getExtension().add(((com.sun.identity.liberty.ws.common.jaxb.ps.impl.ExtensionElementImpl) spawnChildFromEnterElement((com.sun.identity.liberty.ws.common.jaxb.ps.impl.ExtensionElementImpl.class), 2, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("Extension" == ___local)&&("urn:liberty:iff:2003-08" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 3;
                            return ;
                        }
                        if (("ProviderID" == ___local)&&("urn:liberty:iff:2003-08" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 5;
                            return ;
                        }
                        break;
                    case  10 :
                        if (("EncryptableNameIdentifier" == ___local)&&("urn:liberty:iff:2003-08" == ___uri)) {
                            _NameIdentifier = ((com.sun.identity.liberty.ws.common.jaxb.ps.impl.EncryptableNameIdentifierElementImpl) spawnChildFromEnterElement((com.sun.identity.liberty.ws.common.jaxb.ps.impl.EncryptableNameIdentifierElementImpl.class), 11, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("NameIdentifier" == ___local)&&("urn:oasis:names:tc:SAML:1.0:assertion" == ___uri)) {
                            _NameIdentifier = ((com.sun.identity.liberty.ws.common.jaxb.assertion.impl.NameIdentifierElementImpl) spawnChildFromEnterElement((com.sun.identity.liberty.ws.common.jaxb.assertion.impl.NameIdentifierElementImpl.class), 11, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("NameIdentifier" == ___local)&&("urn:oasis:names:tc:SAML:1.0:assertion" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 12;
                            return ;
                        }
                        state = 11;
                        continue outer;
                    case  0 :
                        attIdx = context.getAttribute("", "InResponseTo");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        attIdx = context.getAttribute("", "IssueInstant");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        break;
                    case  11 :
                        revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                        return ;
                    case  8 :
                        if (("StatusCode" == ___local)&&("urn:oasis:names:tc:SAML:1.0:protocol" == ___uri)) {
                            _Status = ((com.sun.identity.liberty.ws.common.jaxb.protocol.impl.StatusTypeImpl) spawnChildFromEnterElement((com.sun.identity.liberty.ws.common.jaxb.protocol.impl.StatusTypeImpl.class), 9, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("StatusCode" == ___local)&&("urn:oasis:names:tc:SAML:1.0:protocol" == ___uri)) {
                            _Status = ((com.sun.identity.liberty.ws.common.jaxb.protocol.impl.StatusTypeImpl) spawnChildFromEnterElement((com.sun.identity.liberty.ws.common.jaxb.protocol.impl.StatusTypeImpl.class), 9, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        break;
                }
                super.enterElement(___uri, ___local, ___qname, __atts);
                break;
            }
        }

        public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  12 :
                        attIdx = context.getAttribute("", "Format");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "NameQualifier");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                    case  9 :
                        if (("Status" == ___local)&&("urn:oasis:names:tc:SAML:1.0:protocol" == ___uri)) {
                            context.popAttributes();
                            state = 10;
                            return ;
                        }
                        break;
                    case  1 :
                        state = 2;
                        continue outer;
                    case  4 :
                        if (("Extension" == ___local)&&("urn:liberty:iff:2003-08" == ___uri)) {
                            context.popAttributes();
                            state = 2;
                            return ;
                        }
                        break;
                    case  10 :
                        state = 11;
                        continue outer;
                    case  0 :
                        attIdx = context.getAttribute("", "InResponseTo");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "IssueInstant");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                    case  11 :
                        revertToParentFromLeaveElement(___uri, ___local, ___qname);
                        return ;
                    case  6 :
                        if (("ProviderID" == ___local)&&("urn:liberty:iff:2003-08" == ___uri)) {
                            context.popAttributes();
                            state = 7;
                            return ;
                        }
                        break;
                    case  13 :
                        if (("NameIdentifier" == ___local)&&("urn:oasis:names:tc:SAML:1.0:assertion" == ___uri)) {
                            context.popAttributes();
                            state = 11;
                            return ;
                        }
                        break;
                }
                super.leaveElement(___uri, ___local, ___qname);
                break;
            }
        }

        public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  12 :
                        if (("Format" == ___local)&&("" == ___uri)) {
                            _NameIdentifier = ((com.sun.identity.liberty.ws.common.jaxb.assertion.impl.NameIdentifierTypeImpl) spawnChildFromEnterAttribute((com.sun.identity.liberty.ws.common.jaxb.assertion.impl.NameIdentifierTypeImpl.class), 13, ___uri, ___local, ___qname));
                            return ;
                        }
                        if (("NameQualifier" == ___local)&&("" == ___uri)) {
                            _NameIdentifier = ((com.sun.identity.liberty.ws.common.jaxb.assertion.impl.NameIdentifierTypeImpl) spawnChildFromEnterAttribute((com.sun.identity.liberty.ws.common.jaxb.assertion.impl.NameIdentifierTypeImpl.class), 13, ___uri, ___local, ___qname));
                            return ;
                        }
                        break;
                    case  1 :
                        state = 2;
                        continue outer;
                    case  10 :
                        state = 11;
                        continue outer;
                    case  0 :
                        if (("InResponseTo" == ___local)&&("" == ___uri)) {
                            spawnHandlerFromEnterAttribute((((com.sun.identity.liberty.ws.common.jaxb.protocol.impl.ResponseAbstractTypeImpl)com.sun.identity.liberty.ws.common.jaxb.ps.impl.NameIdentifierMappingResponseTypeImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname);
                            return ;
                        }
                        if (("IssueInstant" == ___local)&&("" == ___uri)) {
                            spawnHandlerFromEnterAttribute((((com.sun.identity.liberty.ws.common.jaxb.protocol.impl.ResponseAbstractTypeImpl)com.sun.identity.liberty.ws.common.jaxb.ps.impl.NameIdentifierMappingResponseTypeImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                    case  11 :
                        revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                        return ;
                }
                super.enterAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  12 :
                        attIdx = context.getAttribute("", "Format");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "NameQualifier");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                    case  1 :
                        state = 2;
                        continue outer;
                    case  10 :
                        state = 11;
                        continue outer;
                    case  0 :
                        attIdx = context.getAttribute("", "InResponseTo");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "IssueInstant");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                    case  11 :
                        revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                        return ;
                }
                super.leaveAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void handleText(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                try {
                    switch (state) {
                        case  12 :
                            attIdx = context.getAttribute("", "Format");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            attIdx = context.getAttribute("", "NameQualifier");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            _NameIdentifier = ((com.sun.identity.liberty.ws.common.jaxb.assertion.impl.NameIdentifierTypeImpl) spawnChildFromText((com.sun.identity.liberty.ws.common.jaxb.assertion.impl.NameIdentifierTypeImpl.class), 13, value));
                            return ;
                        case  1 :
                            state = 2;
                            continue outer;
                        case  5 :
                            state = 6;
                            eatText1(value);
                            return ;
                        case  10 :
                            state = 11;
                            continue outer;
                        case  0 :
                            attIdx = context.getAttribute("", "InResponseTo");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            attIdx = context.getAttribute("", "IssueInstant");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            break;
                        case  11 :
                            revertToParentFromText(value);
                            return ;
                    }
                } catch (java.lang.RuntimeException e) {
                    handleUnexpectedTextException(value, e);
                }
                break;
            }
        }

        private void eatText1(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _ProviderID = com.sun.xml.bind.WhiteSpaceProcessor.collapse(value);
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

    }

}
