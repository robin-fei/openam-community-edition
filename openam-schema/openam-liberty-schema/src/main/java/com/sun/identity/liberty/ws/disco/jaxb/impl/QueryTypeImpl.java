//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v1.0.6-b27-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2012.06.11 at 10:33:54 AM PDT 
//


package com.sun.identity.liberty.ws.disco.jaxb.impl;

public class QueryTypeImpl implements com.sun.identity.liberty.ws.disco.jaxb.QueryType, com.sun.xml.bind.JAXBObject, com.sun.identity.federation.jaxb.entityconfig.impl.runtime.UnmarshallableObject, com.sun.identity.federation.jaxb.entityconfig.impl.runtime.XMLSerializable, com.sun.xml.bind.marshaller.IdentifiableObject, com.sun.identity.federation.jaxb.entityconfig.impl.runtime.ValidatableObject
{

    protected com.sun.xml.bind.util.ListImpl _RequestedServiceType;
    protected com.sun.identity.liberty.ws.disco.jaxb.ResourceIDType _ResourceID;
    protected java.lang.String _Id;
    protected com.sun.identity.liberty.ws.disco.jaxb.EncryptedResourceIDType _EncryptedResourceID;
    public final static java.lang.Class version = (com.sun.identity.liberty.ws.disco.jaxb.impl.JAXBVersion.class);
    private static com.sun.msv.grammar.Grammar schemaFragment;

    private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
        return (com.sun.identity.liberty.ws.disco.jaxb.QueryType.class);
    }

    protected com.sun.xml.bind.util.ListImpl _getRequestedServiceType() {
        if (_RequestedServiceType == null) {
            _RequestedServiceType = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
        }
        return _RequestedServiceType;
    }

    public java.util.List getRequestedServiceType() {
        return _getRequestedServiceType();
    }

    public com.sun.identity.liberty.ws.disco.jaxb.ResourceIDType getResourceID() {
        return _ResourceID;
    }

    public void setResourceID(com.sun.identity.liberty.ws.disco.jaxb.ResourceIDType value) {
        _ResourceID = value;
    }

    public java.lang.String getId() {
        return _Id;
    }

    public void setId(java.lang.String value) {
        _Id = value;
    }

    public com.sun.identity.liberty.ws.disco.jaxb.EncryptedResourceIDType getEncryptedResourceID() {
        return _EncryptedResourceID;
    }

    public void setEncryptedResourceID(com.sun.identity.liberty.ws.disco.jaxb.EncryptedResourceIDType value) {
        _EncryptedResourceID = value;
    }

    public com.sun.identity.federation.jaxb.entityconfig.impl.runtime.UnmarshallingEventHandler createUnmarshaller(com.sun.identity.federation.jaxb.entityconfig.impl.runtime.UnmarshallingContext context) {
        return new com.sun.identity.liberty.ws.disco.jaxb.impl.QueryTypeImpl.Unmarshaller(context);
    }

    public void serializeBody(com.sun.identity.federation.jaxb.entityconfig.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        int idx1 = 0;
        final int len1 = ((_RequestedServiceType == null)? 0 :_RequestedServiceType.size());
        if ((_EncryptedResourceID == null)&&(_ResourceID!= null)) {
            if (_ResourceID instanceof javax.xml.bind.Element) {
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _ResourceID), "ResourceID");
            } else {
                context.startElement("urn:liberty:disco:2003-08", "ResourceID");
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _ResourceID), "ResourceID");
                context.endNamespaceDecls();
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _ResourceID), "ResourceID");
                context.endAttributes();
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _ResourceID), "ResourceID");
                context.endElement();
            }
        } else {
            if ((_EncryptedResourceID!= null)&&(_ResourceID == null)) {
                if (_EncryptedResourceID instanceof javax.xml.bind.Element) {
                    context.childAsBody(((com.sun.xml.bind.JAXBObject) _EncryptedResourceID), "EncryptedResourceID");
                } else {
                    context.startElement("urn:liberty:disco:2003-08", "EncryptedResourceID");
                    context.childAsURIs(((com.sun.xml.bind.JAXBObject) _EncryptedResourceID), "EncryptedResourceID");
                    context.endNamespaceDecls();
                    context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _EncryptedResourceID), "EncryptedResourceID");
                    context.endAttributes();
                    context.childAsBody(((com.sun.xml.bind.JAXBObject) _EncryptedResourceID), "EncryptedResourceID");
                    context.endElement();
                }
            }
        }
        while (idx1 != len1) {
            context.startElement("urn:liberty:disco:2003-08", "RequestedServiceType");
            int idx_4 = idx1;
            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _RequestedServiceType.get(idx_4 ++)), "RequestedServiceType");
            context.endNamespaceDecls();
            int idx_5 = idx1;
            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _RequestedServiceType.get(idx_5 ++)), "RequestedServiceType");
            context.endAttributes();
            context.childAsBody(((com.sun.xml.bind.JAXBObject) _RequestedServiceType.get(idx1 ++)), "RequestedServiceType");
            context.endElement();
        }
    }

    public void serializeAttributes(com.sun.identity.federation.jaxb.entityconfig.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        int idx1 = 0;
        final int len1 = ((_RequestedServiceType == null)? 0 :_RequestedServiceType.size());
        if (_Id!= null) {
            context.startAttribute("", "id");
            try {
                context.text(context.onID(this, ((java.lang.String) _Id)), "Id");
            } catch (java.lang.Exception e) {
                com.sun.identity.federation.jaxb.entityconfig.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
        }
        if ((_EncryptedResourceID == null)&&(_ResourceID!= null)) {
            if (_ResourceID instanceof javax.xml.bind.Element) {
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _ResourceID), "ResourceID");
            }
        } else {
            if ((_EncryptedResourceID!= null)&&(_ResourceID == null)) {
                if (_EncryptedResourceID instanceof javax.xml.bind.Element) {
                    context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _EncryptedResourceID), "EncryptedResourceID");
                }
            }
        }
        while (idx1 != len1) {
            idx1 += 1;
        }
    }

    public void serializeURIs(com.sun.identity.federation.jaxb.entityconfig.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        int idx1 = 0;
        final int len1 = ((_RequestedServiceType == null)? 0 :_RequestedServiceType.size());
        if ((_EncryptedResourceID == null)&&(_ResourceID!= null)) {
            if (_ResourceID instanceof javax.xml.bind.Element) {
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _ResourceID), "ResourceID");
            }
        } else {
            if ((_EncryptedResourceID!= null)&&(_ResourceID == null)) {
                if (_EncryptedResourceID instanceof javax.xml.bind.Element) {
                    context.childAsURIs(((com.sun.xml.bind.JAXBObject) _EncryptedResourceID), "EncryptedResourceID");
                }
            }
        }
        while (idx1 != len1) {
            idx1 += 1;
        }
    }

    public java.lang.String ____jaxb____getId() {
        return ((java.lang.String) _Id);
    }

    public java.lang.Class getPrimaryInterface() {
        return (com.sun.identity.liberty.ws.disco.jaxb.QueryType.class);
    }

    public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
        if (schemaFragment == null) {
            schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.su"
+"n.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gra"
+"mmar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expressi"
+"on\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0002L\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000b"
+"expandedExpq\u0000~\u0000\u0002xpppsq\u0000~\u0000\u0000ppsr\u0000\u001dcom.sun.msv.grammar.ChoiceEx"
+"p\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0001ppsq\u0000~\u0000\u0007sr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000"
+"\u0005valuexp\u0000psq\u0000~\u0000\u0007q\u0000~\u0000\u000bpsq\u0000~\u0000\u0007q\u0000~\u0000\u000bpsr\u0000\'com.sun.msv.grammar.tr"
+"ex.ElementPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\tnameClasst\u0000\u001fLcom/sun/msv/gram"
+"mar/NameClass;xr\u0000\u001ecom.sun.msv.grammar.ElementExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z"
+"\u0000\u001aignoreUndeclaredAttributesL\u0000\fcontentModelq\u0000~\u0000\u0002xq\u0000~\u0000\u0003q\u0000~\u0000\u000bp"
+"\u0000sq\u0000~\u0000\u0007ppsr\u0000 com.sun.msv.grammar.OneOrMoreExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001c"
+"com.sun.msv.grammar.UnaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0003expq\u0000~\u0000\u0002xq\u0000~\u0000\u0003q\u0000~\u0000"
+"\u000bpsr\u0000 com.sun.msv.grammar.AttributeExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002"
+"L\u0000\tnameClassq\u0000~\u0000\u000fxq\u0000~\u0000\u0003q\u0000~\u0000\u000bpsr\u00002com.sun.msv.grammar.Express"
+"ion$AnyStringExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003sq\u0000~\u0000\n\u0001q\u0000~\u0000\u0019sr\u0000 com."
+"sun.msv.grammar.AnyNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.sun.msv.gramm"
+"ar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.sun.msv.grammar.Expression$"
+"EpsilonExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003q\u0000~\u0000\u001aq\u0000~\u0000\u001fsr\u0000#com.sun.msv."
+"grammar.SimpleNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNamet\u0000\u0012Ljava/lang/"
+"String;L\u0000\fnamespaceURIq\u0000~\u0000!xq\u0000~\u0000\u001ct\u00008com.sun.identity.liberty"
+".ws.disco.jaxb.ResourceIDElementt\u0000+http://java.sun.com/jaxb/"
+"xjc/dummy-elementssq\u0000~\u0000\u000eq\u0000~\u0000\u000bp\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u000epp\u0000sq\u0000~\u0000\u0007ppsq\u0000~"
+"\u0000\u0013q\u0000~\u0000\u000bpsq\u0000~\u0000\u0016q\u0000~\u0000\u000bpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u00005com.sun.identity"
+".liberty.ws.disco.jaxb.ResourceIDTypeq\u0000~\u0000$sq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0016q\u0000~\u0000"
+"\u000bpsr\u0000\u001bcom.sun.msv.grammar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/rel"
+"axng/datatype/Datatype;L\u0000\u0006exceptq\u0000~\u0000\u0002L\u0000\u0004namet\u0000\u001dLcom/sun/msv/"
+"util/StringPair;xq\u0000~\u0000\u0003q\u0000~\u0000\u000bpsr\u0000\"com.sun.msv.datatype.xsd.Qna"
+"meType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000*com.sun.msv.datatype.xsd.BuiltinAtomicT"
+"ype\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.datatype.xsd.ConcreteType\u0000\u0000\u0000\u0000\u0000"
+"\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com.sun.msv.datatype.xsd.XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003"
+"L\u0000\fnamespaceUriq\u0000~\u0000!L\u0000\btypeNameq\u0000~\u0000!L\u0000\nwhiteSpacet\u0000.Lcom/sun"
+"/msv/datatype/xsd/WhiteSpaceProcessor;xpt\u0000 http://www.w3.org"
+"/2001/XMLSchemat\u0000\u0005QNamesr\u00005com.sun.msv.datatype.xsd.WhiteSpa"
+"ceProcessor$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun.msv.datatype.xsd."
+"WhiteSpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.sun.msv.grammar.Expr"
+"ession$NullSetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003q\u0000~\u0000\u000bpsr\u0000\u001bcom.sun.m"
+"sv.util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000!L\u0000\fnamespaceUR"
+"Iq\u0000~\u0000!xpq\u0000~\u0000:q\u0000~\u00009sq\u0000~\u0000 t\u0000\u0004typet\u0000)http://www.w3.org/2001/XML"
+"Schema-instanceq\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000\nResourceIDt\u0000\u0019urn:liberty:disco:"
+"2003-08sq\u0000~\u0000\u000eq\u0000~\u0000\u000bp\u0000sq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0013q\u0000~\u0000\u000bpsq\u0000~\u0000\u0016q\u0000~\u0000\u000bpq\u0000~\u0000\u0019q\u0000~"
+"\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000Acom.sun.identity.liberty.ws.disco.jaxb.Encry"
+"ptedResourceIDElementq\u0000~\u0000$sq\u0000~\u0000\u000eq\u0000~\u0000\u000bp\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u000epp\u0000sq\u0000~"
+"\u0000\u0007ppsq\u0000~\u0000\u0013q\u0000~\u0000\u000bpsq\u0000~\u0000\u0016q\u0000~\u0000\u000bpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000>com.sun."
+"identity.liberty.ws.disco.jaxb.EncryptedResourceIDTypeq\u0000~\u0000$s"
+"q\u0000~\u0000\u0007ppsq\u0000~\u0000\u0016q\u0000~\u0000\u000bpq\u0000~\u00002q\u0000~\u0000Bq\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000\u0013EncryptedResource"
+"IDq\u0000~\u0000Gq\u0000~\u0000\u001fsq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0013q\u0000~\u0000\u000bpsq\u0000~\u0000\u000eq\u0000~\u0000\u000bp\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u000ep"
+"p\u0000sq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0013q\u0000~\u0000\u000bpsq\u0000~\u0000\u0016q\u0000~\u0000\u000bpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000Ico"
+"m.sun.identity.liberty.ws.disco.jaxb.QueryType.RequestedServ"
+"iceTypeTypeq\u0000~\u0000$sq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0016q\u0000~\u0000\u000bpq\u0000~\u00002q\u0000~\u0000Bq\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000\u0014"
+"RequestedServiceTypeq\u0000~\u0000Gq\u0000~\u0000\u001fsq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0016q\u0000~\u0000\u000bpsq\u0000~\u0000/ppsr"
+"\u0000\u001fcom.sun.msv.datatype.xsd.IDType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000#com.sun.msv."
+"datatype.xsd.NcnameType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\"com.sun.msv.datatype.x"
+"sd.TokenType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000#com.sun.msv.datatype.xsd.StringTy"
+"pe\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001Z\u0000\risAlwaysValidxq\u0000~\u00004q\u0000~\u00009t\u0000\u0002IDq\u0000~\u0000=\u0000q\u0000~\u0000?sq\u0000~"
+"\u0000@q\u0000~\u0000pq\u0000~\u00009sq\u0000~\u0000 t\u0000\u0002idt\u0000\u0000q\u0000~\u0000\u001fsr\u0000\"com.sun.msv.grammar.Expre"
+"ssionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun/msv/grammar/Expre"
+"ssionPool$ClosedHash;xpsr\u0000-com.sun.msv.grammar.ExpressionPoo"
+"l$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0003\u0000\u0003I\u0000\u0005countB\u0000\rstreamVersionL\u0000\u0006parentt\u0000$L"
+"com/sun/msv/grammar/ExpressionPool;xp\u0000\u0000\u0000\u0019\u0001pq\u0000~\u0000\u0015q\u0000~\u0000)q\u0000~\u0000Jq\u0000"
+"~\u0000Rq\u0000~\u0000`q\u0000~\u0000\u0006q\u0000~\u0000[q\u0000~\u0000\u0012q\u0000~\u0000(q\u0000~\u0000Iq\u0000~\u0000Qq\u0000~\u0000_q\u0000~\u0000\u0005q\u0000~\u0000&q\u0000~\u0000Oq\u0000"
+"~\u0000]q\u0000~\u0000\fq\u0000~\u0000\bq\u0000~\u0000Zq\u0000~\u0000hq\u0000~\u0000\tq\u0000~\u0000-q\u0000~\u0000Vq\u0000~\u0000dq\u0000~\u0000\rx"));
        }
        return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
    }

    public static class RequestedServiceTypeTypeImpl implements com.sun.identity.liberty.ws.disco.jaxb.QueryType.RequestedServiceTypeType, com.sun.xml.bind.JAXBObject, com.sun.identity.federation.jaxb.entityconfig.impl.runtime.UnmarshallableObject, com.sun.identity.federation.jaxb.entityconfig.impl.runtime.XMLSerializable, com.sun.identity.federation.jaxb.entityconfig.impl.runtime.ValidatableObject
    {

        protected java.lang.String _ServiceType;
        protected com.sun.identity.liberty.ws.disco.jaxb.OptionsType _Options;
        public final static java.lang.Class version = (com.sun.identity.liberty.ws.disco.jaxb.impl.JAXBVersion.class);
        private static com.sun.msv.grammar.Grammar schemaFragment;

        private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
            return (com.sun.identity.liberty.ws.disco.jaxb.QueryType.RequestedServiceTypeType.class);
        }

        public java.lang.String getServiceType() {
            return _ServiceType;
        }

        public void setServiceType(java.lang.String value) {
            _ServiceType = value;
        }

        public com.sun.identity.liberty.ws.disco.jaxb.OptionsType getOptions() {
            return _Options;
        }

        public void setOptions(com.sun.identity.liberty.ws.disco.jaxb.OptionsType value) {
            _Options = value;
        }

        public com.sun.identity.federation.jaxb.entityconfig.impl.runtime.UnmarshallingEventHandler createUnmarshaller(com.sun.identity.federation.jaxb.entityconfig.impl.runtime.UnmarshallingContext context) {
            return new com.sun.identity.liberty.ws.disco.jaxb.impl.QueryTypeImpl.RequestedServiceTypeTypeImpl.Unmarshaller(context);
        }

        public void serializeBody(com.sun.identity.federation.jaxb.entityconfig.impl.runtime.XMLSerializer context)
            throws org.xml.sax.SAXException
        {
            context.startElement("urn:liberty:disco:2003-08", "ServiceType");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(((java.lang.String) _ServiceType), "ServiceType");
            } catch (java.lang.Exception e) {
                com.sun.identity.federation.jaxb.entityconfig.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
            if (_Options!= null) {
                if (_Options instanceof javax.xml.bind.Element) {
                    context.childAsBody(((com.sun.xml.bind.JAXBObject) _Options), "Options");
                } else {
                    context.startElement("urn:liberty:disco:2003-08", "Options");
                    context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Options), "Options");
                    context.endNamespaceDecls();
                    context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Options), "Options");
                    context.endAttributes();
                    context.childAsBody(((com.sun.xml.bind.JAXBObject) _Options), "Options");
                    context.endElement();
                }
            }
        }

        public void serializeAttributes(com.sun.identity.federation.jaxb.entityconfig.impl.runtime.XMLSerializer context)
            throws org.xml.sax.SAXException
        {
            if (_Options!= null) {
                if (_Options instanceof javax.xml.bind.Element) {
                    context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Options), "Options");
                }
            }
        }

        public void serializeURIs(com.sun.identity.federation.jaxb.entityconfig.impl.runtime.XMLSerializer context)
            throws org.xml.sax.SAXException
        {
            if (_Options!= null) {
                if (_Options instanceof javax.xml.bind.Element) {
                    context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Options), "Options");
                }
            }
        }

        public java.lang.Class getPrimaryInterface() {
            return (com.sun.identity.liberty.ws.disco.jaxb.QueryType.RequestedServiceTypeType.class);
        }

        public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
            if (schemaFragment == null) {
                schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.su"
+"n.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gra"
+"mmar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expressi"
+"on\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0002L\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000b"
+"expandedExpq\u0000~\u0000\u0002xpppsr\u0000\'com.sun.msv.grammar.trex.ElementPatt"
+"ern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\tnameClasst\u0000\u001fLcom/sun/msv/grammar/NameClass;"
+"xr\u0000\u001ecom.sun.msv.grammar.ElementExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUndecl"
+"aredAttributesL\u0000\fcontentModelq\u0000~\u0000\u0002xq\u0000~\u0000\u0003pp\u0000sq\u0000~\u0000\u0000ppsr\u0000\u001bcom.s"
+"un.msv.grammar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/relaxng/dataty"
+"pe/Datatype;L\u0000\u0006exceptq\u0000~\u0000\u0002L\u0000\u0004namet\u0000\u001dLcom/sun/msv/util/String"
+"Pair;xq\u0000~\u0000\u0003sr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000psr\u0000#c"
+"om.sun.msv.datatype.xsd.AnyURIType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000*com.sun.msv"
+".datatype.xsd.BuiltinAtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.da"
+"tatype.xsd.ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com.sun.msv.datatype.x"
+"sd.XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUrit\u0000\u0012Ljava/lang/Str"
+"ing;L\u0000\btypeNameq\u0000~\u0000\u0015L\u0000\nwhiteSpacet\u0000.Lcom/sun/msv/datatype/xs"
+"d/WhiteSpaceProcessor;xpt\u0000 http://www.w3.org/2001/XMLSchemat"
+"\u0000\u0006anyURIsr\u00005com.sun.msv.datatype.xsd.WhiteSpaceProcessor$Col"
+"lapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun.msv.datatype.xsd.WhiteSpaceProce"
+"ssor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.sun.msv.grammar.Expression$NullSetE"
+"xpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003q\u0000~\u0000\u0010psr\u0000\u001bcom.sun.msv.util.StringP"
+"air\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u0015L\u0000\fnamespaceURIq\u0000~\u0000\u0015xpq\u0000~\u0000\u0019q\u0000"
+"~\u0000\u0018sr\u0000\u001dcom.sun.msv.grammar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0001ppsr\u0000 c"
+"om.sun.msv.grammar.AttributeExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tname"
+"Classq\u0000~\u0000\u0007xq\u0000~\u0000\u0003q\u0000~\u0000\u0010psq\u0000~\u0000\u000bq\u0000~\u0000\u0010psr\u0000\"com.sun.msv.datatype.x"
+"sd.QnameType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0012q\u0000~\u0000\u0018t\u0000\u0005QNameq\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001fq\u0000"
+"~\u0000(q\u0000~\u0000\u0018sr\u0000#com.sun.msv.grammar.SimpleNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000"
+"\tlocalNameq\u0000~\u0000\u0015L\u0000\fnamespaceURIq\u0000~\u0000\u0015xr\u0000\u001dcom.sun.msv.grammar.N"
+"ameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpt\u0000\u0004typet\u0000)http://www.w3.org/2001/XMLSch"
+"ema-instancesr\u00000com.sun.msv.grammar.Expression$EpsilonExpres"
+"sion\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003sq\u0000~\u0000\u000f\u0001q\u0000~\u00000sq\u0000~\u0000*t\u0000\u000bServiceTypet\u0000\u0019urn:"
+"liberty:disco:2003-08sq\u0000~\u0000!ppsq\u0000~\u0000!q\u0000~\u0000\u0010psq\u0000~\u0000\u0006q\u0000~\u0000\u0010p\u0000sq\u0000~\u0000!"
+"ppsr\u0000 com.sun.msv.grammar.OneOrMoreExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001ccom.sun"
+".msv.grammar.UnaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0003expq\u0000~\u0000\u0002xq\u0000~\u0000\u0003q\u0000~\u0000\u0010psq\u0000~\u0000"
+"#q\u0000~\u0000\u0010psr\u00002com.sun.msv.grammar.Expression$AnyStringExpressio"
+"n\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003q\u0000~\u00001q\u0000~\u0000>sr\u0000 com.sun.msv.grammar.AnyNameC"
+"lass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000+q\u0000~\u00000sq\u0000~\u0000*t\u00005com.sun.identity.liberty."
+"ws.disco.jaxb.OptionsElementt\u0000+http://java.sun.com/jaxb/xjc/"
+"dummy-elementssq\u0000~\u0000\u0006q\u0000~\u0000\u0010p\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0006pp\u0000sq\u0000~\u0000!ppsq\u0000~\u00009q\u0000"
+"~\u0000\u0010psq\u0000~\u0000#q\u0000~\u0000\u0010pq\u0000~\u0000>q\u0000~\u0000@q\u0000~\u00000sq\u0000~\u0000*t\u00002com.sun.identity.lib"
+"erty.ws.disco.jaxb.OptionsTypeq\u0000~\u0000Csq\u0000~\u0000!ppsq\u0000~\u0000#q\u0000~\u0000\u0010pq\u0000~\u0000%"
+"q\u0000~\u0000,q\u0000~\u00000sq\u0000~\u0000*t\u0000\u0007Optionsq\u0000~\u00004q\u0000~\u00000sr\u0000\"com.sun.msv.grammar."
+"ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun/msv/grammar/"
+"ExpressionPool$ClosedHash;xpsr\u0000-com.sun.msv.grammar.Expressi"
+"onPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0003\u0000\u0003I\u0000\u0005countB\u0000\rstreamVersionL\u0000\u0006paren"
+"tt\u0000$Lcom/sun/msv/grammar/ExpressionPool;xp\u0000\u0000\u0000\u000b\u0001pq\u0000~\u0000;q\u0000~\u0000Hq\u0000"
+"~\u0000\nq\u0000~\u00008q\u0000~\u0000Gq\u0000~\u0000Eq\u0000~\u0000\u0005q\u0000~\u00005q\u0000~\u0000\"q\u0000~\u0000Lq\u0000~\u00006x"));
            }
            return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
        }

        public class Unmarshaller
            extends com.sun.identity.federation.jaxb.entityconfig.impl.runtime.AbstractUnmarshallingEventHandlerImpl
        {


            public Unmarshaller(com.sun.identity.federation.jaxb.entityconfig.impl.runtime.UnmarshallingContext context) {
                super(context, "-------");
            }

            protected Unmarshaller(com.sun.identity.federation.jaxb.entityconfig.impl.runtime.UnmarshallingContext context, int startState) {
                this(context);
                state = startState;
            }

            public java.lang.Object owner() {
                return com.sun.identity.liberty.ws.disco.jaxb.impl.QueryTypeImpl.RequestedServiceTypeTypeImpl.this;
            }

            public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
                throws org.xml.sax.SAXException
            {
                int attIdx;
                outer:
                while (true) {
                    switch (state) {
                        case  0 :
                            if (("ServiceType" == ___local)&&("urn:liberty:disco:2003-08" == ___uri)) {
                                context.pushAttributes(__atts, true);
                                state = 1;
                                return ;
                            }
                            break;
                        case  6 :
                            revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        case  4 :
                            if (("Option" == ___local)&&("urn:liberty:disco:2003-08" == ___uri)) {
                                _Options = ((com.sun.identity.liberty.ws.disco.jaxb.impl.OptionsTypeImpl) spawnChildFromEnterElement((com.sun.identity.liberty.ws.disco.jaxb.impl.OptionsTypeImpl.class), 5, ___uri, ___local, ___qname, __atts));
                                return ;
                            }
                            _Options = ((com.sun.identity.liberty.ws.disco.jaxb.impl.OptionsTypeImpl) spawnChildFromEnterElement((com.sun.identity.liberty.ws.disco.jaxb.impl.OptionsTypeImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        case  3 :
                            if (("Options" == ___local)&&("urn:liberty:disco:2003-08" == ___uri)) {
                                _Options = ((com.sun.identity.liberty.ws.disco.jaxb.impl.OptionsElementImpl) spawnChildFromEnterElement((com.sun.identity.liberty.ws.disco.jaxb.impl.OptionsElementImpl.class), 6, ___uri, ___local, ___qname, __atts));
                                return ;
                            }
                            if (("Options" == ___local)&&("urn:liberty:disco:2003-08" == ___uri)) {
                                context.pushAttributes(__atts, false);
                                state = 4;
                                return ;
                            }
                            state = 6;
                            continue outer;
                    }
                    super.enterElement(___uri, ___local, ___qname, __atts);
                    break;
                }
            }

            public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                throws org.xml.sax.SAXException
            {
                int attIdx;
                outer:
                while (true) {
                    switch (state) {
                        case  6 :
                            revertToParentFromLeaveElement(___uri, ___local, ___qname);
                            return ;
                        case  4 :
                            _Options = ((com.sun.identity.liberty.ws.disco.jaxb.impl.OptionsTypeImpl) spawnChildFromLeaveElement((com.sun.identity.liberty.ws.disco.jaxb.impl.OptionsTypeImpl.class), 5, ___uri, ___local, ___qname));
                            return ;
                        case  3 :
                            state = 6;
                            continue outer;
                        case  2 :
                            if (("ServiceType" == ___local)&&("urn:liberty:disco:2003-08" == ___uri)) {
                                context.popAttributes();
                                state = 3;
                                return ;
                            }
                            break;
                        case  5 :
                            if (("Options" == ___local)&&("urn:liberty:disco:2003-08" == ___uri)) {
                                context.popAttributes();
                                state = 6;
                                return ;
                            }
                            break;
                    }
                    super.leaveElement(___uri, ___local, ___qname);
                    break;
                }
            }

            public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                throws org.xml.sax.SAXException
            {
                int attIdx;
                outer:
                while (true) {
                    switch (state) {
                        case  6 :
                            revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                            return ;
                        case  4 :
                            _Options = ((com.sun.identity.liberty.ws.disco.jaxb.impl.OptionsTypeImpl) spawnChildFromEnterAttribute((com.sun.identity.liberty.ws.disco.jaxb.impl.OptionsTypeImpl.class), 5, ___uri, ___local, ___qname));
                            return ;
                        case  3 :
                            state = 6;
                            continue outer;
                    }
                    super.enterAttribute(___uri, ___local, ___qname);
                    break;
                }
            }

            public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                throws org.xml.sax.SAXException
            {
                int attIdx;
                outer:
                while (true) {
                    switch (state) {
                        case  6 :
                            revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                            return ;
                        case  4 :
                            _Options = ((com.sun.identity.liberty.ws.disco.jaxb.impl.OptionsTypeImpl) spawnChildFromLeaveAttribute((com.sun.identity.liberty.ws.disco.jaxb.impl.OptionsTypeImpl.class), 5, ___uri, ___local, ___qname));
                            return ;
                        case  3 :
                            state = 6;
                            continue outer;
                    }
                    super.leaveAttribute(___uri, ___local, ___qname);
                    break;
                }
            }

            public void handleText(final java.lang.String value)
                throws org.xml.sax.SAXException
            {
                int attIdx;
                outer:
                while (true) {
                    try {
                        switch (state) {
                            case  6 :
                                revertToParentFromText(value);
                                return ;
                            case  4 :
                                _Options = ((com.sun.identity.liberty.ws.disco.jaxb.impl.OptionsTypeImpl) spawnChildFromText((com.sun.identity.liberty.ws.disco.jaxb.impl.OptionsTypeImpl.class), 5, value));
                                return ;
                            case  3 :
                                state = 6;
                                continue outer;
                            case  1 :
                                state = 2;
                                eatText1(value);
                                return ;
                        }
                    } catch (java.lang.RuntimeException e) {
                        handleUnexpectedTextException(value, e);
                    }
                    break;
                }
            }

            private void eatText1(final java.lang.String value)
                throws org.xml.sax.SAXException
            {
                try {
                    _ServiceType = com.sun.xml.bind.WhiteSpaceProcessor.collapse(value);
                } catch (java.lang.Exception e) {
                    handleParseConversionException(e);
                }
            }

        }

    }

    public class Unmarshaller
        extends com.sun.identity.federation.jaxb.entityconfig.impl.runtime.AbstractUnmarshallingEventHandlerImpl
    {


        public Unmarshaller(com.sun.identity.federation.jaxb.entityconfig.impl.runtime.UnmarshallingContext context) {
            super(context, "------------");
        }

        protected Unmarshaller(com.sun.identity.federation.jaxb.entityconfig.impl.runtime.UnmarshallingContext context, int startState) {
            this(context);
            state = startState;
        }

        public java.lang.Object owner() {
            return com.sun.identity.liberty.ws.disco.jaxb.impl.QueryTypeImpl.this;
        }

        public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  0 :
                        attIdx = context.getAttribute("", "id");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 3;
                            eatText1(v);
                            continue outer;
                        }
                        state = 3;
                        continue outer;
                    case  3 :
                        if (("ResourceID" == ___local)&&("urn:liberty:disco:2003-08" == ___uri)) {
                            _ResourceID = ((com.sun.identity.liberty.ws.disco.jaxb.impl.ResourceIDElementImpl) spawnChildFromEnterElement((com.sun.identity.liberty.ws.disco.jaxb.impl.ResourceIDElementImpl.class), 6, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("ResourceID" == ___local)&&("urn:liberty:disco:2003-08" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 10;
                            return ;
                        }
                        if (("EncryptedResourceID" == ___local)&&("urn:liberty:disco:2003-08" == ___uri)) {
                            _EncryptedResourceID = ((com.sun.identity.liberty.ws.disco.jaxb.impl.EncryptedResourceIDElementImpl) spawnChildFromEnterElement((com.sun.identity.liberty.ws.disco.jaxb.impl.EncryptedResourceIDElementImpl.class), 6, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("EncryptedResourceID" == ___local)&&("urn:liberty:disco:2003-08" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 4;
                            return ;
                        }
                        state = 6;
                        continue outer;
                    case  7 :
                        if (("ServiceType" == ___local)&&("urn:liberty:disco:2003-08" == ___uri)) {
                            _getRequestedServiceType().add(((com.sun.identity.liberty.ws.disco.jaxb.impl.QueryTypeImpl.RequestedServiceTypeTypeImpl) spawnChildFromEnterElement((com.sun.identity.liberty.ws.disco.jaxb.impl.QueryTypeImpl.RequestedServiceTypeTypeImpl.class), 8, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        break;
                    case  10 :
                        attIdx = context.getAttribute("", "id");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        break;
                    case  6 :
                        if (("RequestedServiceType" == ___local)&&("urn:liberty:disco:2003-08" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 7;
                            return ;
                        }
                        state = 9;
                        continue outer;
                    case  9 :
                        if (("RequestedServiceType" == ___local)&&("urn:liberty:disco:2003-08" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 7;
                            return ;
                        }
                        revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                        return ;
                    case  4 :
                        if (("EncryptedData" == ___local)&&("http://www.w3.org/2001/04/xmlenc#" == ___uri)) {
                            _EncryptedResourceID = ((com.sun.identity.liberty.ws.disco.jaxb.impl.EncryptedResourceIDTypeImpl) spawnChildFromEnterElement((com.sun.identity.liberty.ws.disco.jaxb.impl.EncryptedResourceIDTypeImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("EncryptedData" == ___local)&&("http://www.w3.org/2001/04/xmlenc#" == ___uri)) {
                            _EncryptedResourceID = ((com.sun.identity.liberty.ws.disco.jaxb.impl.EncryptedResourceIDTypeImpl) spawnChildFromEnterElement((com.sun.identity.liberty.ws.disco.jaxb.impl.EncryptedResourceIDTypeImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        break;
                }
                super.enterElement(___uri, ___local, ___qname, __atts);
                break;
            }
        }

        private void eatText1(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Id = context.addToIdTable(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  0 :
                        attIdx = context.getAttribute("", "id");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 3;
                            eatText1(v);
                            continue outer;
                        }
                        state = 3;
                        continue outer;
                    case  11 :
                        if (("ResourceID" == ___local)&&("urn:liberty:disco:2003-08" == ___uri)) {
                            context.popAttributes();
                            state = 6;
                            return ;
                        }
                        break;
                    case  5 :
                        if (("EncryptedResourceID" == ___local)&&("urn:liberty:disco:2003-08" == ___uri)) {
                            context.popAttributes();
                            state = 6;
                            return ;
                        }
                        break;
                    case  8 :
                        if (("RequestedServiceType" == ___local)&&("urn:liberty:disco:2003-08" == ___uri)) {
                            context.popAttributes();
                            state = 9;
                            return ;
                        }
                        break;
                    case  3 :
                        state = 6;
                        continue outer;
                    case  10 :
                        attIdx = context.getAttribute("", "id");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                    case  6 :
                        state = 9;
                        continue outer;
                    case  9 :
                        revertToParentFromLeaveElement(___uri, ___local, ___qname);
                        return ;
                }
                super.leaveElement(___uri, ___local, ___qname);
                break;
            }
        }

        public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  0 :
                        if (("id" == ___local)&&("" == ___uri)) {
                            state = 1;
                            return ;
                        }
                        state = 3;
                        continue outer;
                    case  3 :
                        state = 6;
                        continue outer;
                    case  10 :
                        if (("id" == ___local)&&("" == ___uri)) {
                            _ResourceID = ((com.sun.identity.liberty.ws.disco.jaxb.impl.ResourceIDTypeImpl) spawnChildFromEnterAttribute((com.sun.identity.liberty.ws.disco.jaxb.impl.ResourceIDTypeImpl.class), 11, ___uri, ___local, ___qname));
                            return ;
                        }
                        break;
                    case  6 :
                        state = 9;
                        continue outer;
                    case  9 :
                        revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                        return ;
                }
                super.enterAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  0 :
                        attIdx = context.getAttribute("", "id");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 3;
                            eatText1(v);
                            continue outer;
                        }
                        state = 3;
                        continue outer;
                    case  3 :
                        state = 6;
                        continue outer;
                    case  10 :
                        attIdx = context.getAttribute("", "id");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                    case  6 :
                        state = 9;
                        continue outer;
                    case  9 :
                        revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                        return ;
                    case  2 :
                        if (("id" == ___local)&&("" == ___uri)) {
                            state = 3;
                            return ;
                        }
                        break;
                }
                super.leaveAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void handleText(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                try {
                    switch (state) {
                        case  0 :
                            attIdx = context.getAttribute("", "id");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 3;
                                eatText1(v);
                                continue outer;
                            }
                            state = 3;
                            continue outer;
                        case  3 :
                            state = 6;
                            continue outer;
                        case  1 :
                            state = 2;
                            eatText1(value);
                            return ;
                        case  10 :
                            attIdx = context.getAttribute("", "id");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            _ResourceID = ((com.sun.identity.liberty.ws.disco.jaxb.impl.ResourceIDTypeImpl) spawnChildFromText((com.sun.identity.liberty.ws.disco.jaxb.impl.ResourceIDTypeImpl.class), 11, value));
                            return ;
                        case  6 :
                            state = 9;
                            continue outer;
                        case  9 :
                            revertToParentFromText(value);
                            return ;
                    }
                } catch (java.lang.RuntimeException e) {
                    handleUnexpectedTextException(value, e);
                }
                break;
            }
        }

    }

}
