//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v1.0.6-b27-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2012.06.11 at 10:33:54 AM PDT 
//


package com.sun.identity.liberty.ws.meta.jaxb.impl;

public class SPDescriptorTypeImpl
    extends com.sun.identity.liberty.ws.meta.jaxb.impl.ProviderDescriptorTypeImpl
    implements com.sun.identity.liberty.ws.meta.jaxb.SPDescriptorType, com.sun.xml.bind.JAXBObject, com.sun.identity.federation.jaxb.entityconfig.impl.runtime.UnmarshallableObject, com.sun.identity.federation.jaxb.entityconfig.impl.runtime.XMLSerializable, com.sun.identity.federation.jaxb.entityconfig.impl.runtime.ValidatableObject
{

    protected boolean has_AuthnRequestsSigned;
    protected boolean _AuthnRequestsSigned;
    protected com.sun.xml.bind.util.ListImpl _AssertionConsumerServiceURL;
    public final static java.lang.Class version = (com.sun.identity.liberty.ws.meta.jaxb.impl.JAXBVersion.class);
    private static com.sun.msv.grammar.Grammar schemaFragment;

    private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
        return (com.sun.identity.liberty.ws.meta.jaxb.SPDescriptorType.class);
    }

    public boolean isAuthnRequestsSigned() {
        return _AuthnRequestsSigned;
    }

    public void setAuthnRequestsSigned(boolean value) {
        _AuthnRequestsSigned = value;
        has_AuthnRequestsSigned = true;
    }

    protected com.sun.xml.bind.util.ListImpl _getAssertionConsumerServiceURL() {
        if (_AssertionConsumerServiceURL == null) {
            _AssertionConsumerServiceURL = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
        }
        return _AssertionConsumerServiceURL;
    }

    public java.util.List getAssertionConsumerServiceURL() {
        return _getAssertionConsumerServiceURL();
    }

    public com.sun.identity.federation.jaxb.entityconfig.impl.runtime.UnmarshallingEventHandler createUnmarshaller(com.sun.identity.federation.jaxb.entityconfig.impl.runtime.UnmarshallingContext context) {
        return new com.sun.identity.liberty.ws.meta.jaxb.impl.SPDescriptorTypeImpl.Unmarshaller(context);
    }

    public void serializeBody(com.sun.identity.federation.jaxb.entityconfig.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        if (!has_AuthnRequestsSigned) {
            context.reportError(com.sun.xml.bind.serializer.Util.createMissingObjectError(this, "AuthnRequestsSigned"));
        }
        int idx2 = 0;
        final int len2 = ((_AssertionConsumerServiceURL == null)? 0 :_AssertionConsumerServiceURL.size());
        super.serializeBody(context);
        while (idx2 != len2) {
            context.startElement("urn:liberty:metadata:2003-08", "AssertionConsumerServiceURL");
            int idx_0 = idx2;
            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _AssertionConsumerServiceURL.get(idx_0 ++)), "AssertionConsumerServiceURL");
            context.endNamespaceDecls();
            int idx_1 = idx2;
            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _AssertionConsumerServiceURL.get(idx_1 ++)), "AssertionConsumerServiceURL");
            context.endAttributes();
            context.childAsBody(((com.sun.xml.bind.JAXBObject) _AssertionConsumerServiceURL.get(idx2 ++)), "AssertionConsumerServiceURL");
            context.endElement();
        }
        context.startElement("urn:liberty:metadata:2003-08", "AuthnRequestsSigned");
        context.endNamespaceDecls();
        context.endAttributes();
        try {
            context.text(javax.xml.bind.DatatypeConverter.printBoolean(((boolean) _AuthnRequestsSigned)), "AuthnRequestsSigned");
        } catch (java.lang.Exception e) {
            com.sun.identity.federation.jaxb.entityconfig.impl.runtime.Util.handlePrintConversionException(this, e, context);
        }
        context.endElement();
    }

    public void serializeAttributes(com.sun.identity.federation.jaxb.entityconfig.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        if (!has_AuthnRequestsSigned) {
            context.reportError(com.sun.xml.bind.serializer.Util.createMissingObjectError(this, "AuthnRequestsSigned"));
        }
        int idx2 = 0;
        final int len2 = ((_AssertionConsumerServiceURL == null)? 0 :_AssertionConsumerServiceURL.size());
        super.serializeAttributes(context);
        while (idx2 != len2) {
            idx2 += 1;
        }
    }

    public void serializeURIs(com.sun.identity.federation.jaxb.entityconfig.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        if (!has_AuthnRequestsSigned) {
            context.reportError(com.sun.xml.bind.serializer.Util.createMissingObjectError(this, "AuthnRequestsSigned"));
        }
        int idx2 = 0;
        final int len2 = ((_AssertionConsumerServiceURL == null)? 0 :_AssertionConsumerServiceURL.size());
        super.serializeURIs(context);
        while (idx2 != len2) {
            idx2 += 1;
        }
    }

    public java.lang.Class getPrimaryInterface() {
        return (com.sun.identity.liberty.ws.meta.jaxb.SPDescriptorType.class);
    }

    public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
        if (schemaFragment == null) {
            schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.su"
+"n.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gra"
+"mmar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expressi"
+"on\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0002L\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000b"
+"expandedExpq\u0000~\u0000\u0002xpppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000pp"
+"sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~"
+"\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000pp"
+"sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsr\u0000\u001dcom.sun.msv.grammar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000"
+"xq\u0000~\u0000\u0001ppsr\u0000 com.sun.msv.grammar.OneOrMoreExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001cc"
+"om.sun.msv.grammar.UnaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0003expq\u0000~\u0000\u0002xq\u0000~\u0000\u0003sr\u0000\u0011j"
+"ava.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000psq\u0000~\u0000\u001cq\u0000~\u0000\"psr\u0000\'com.s"
+"un.msv.grammar.trex.ElementPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\tnameClasst\u0000\u001f"
+"Lcom/sun/msv/grammar/NameClass;xr\u0000\u001ecom.sun.msv.grammar.Eleme"
+"ntExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAttributesL\u0000\fcontentModel"
+"q\u0000~\u0000\u0002xq\u0000~\u0000\u0003q\u0000~\u0000\"p\u0000sq\u0000~\u0000\u001cppsq\u0000~\u0000\u001eq\u0000~\u0000\"psr\u0000 com.sun.msv.gramma"
+"r.AttributeExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnameClassq\u0000~\u0000%xq\u0000~\u0000\u0003q"
+"\u0000~\u0000\"psr\u00002com.sun.msv.grammar.Expression$AnyStringExpression\u0000"
+"\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003sq\u0000~\u0000!\u0001q\u0000~\u0000-sr\u0000 com.sun.msv.grammar.AnyNameC"
+"lass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.sun.msv.grammar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000x"
+"psr\u00000com.sun.msv.grammar.Expression$EpsilonExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003q\u0000~\u0000.q\u0000~\u00003sr\u0000#com.sun.msv.grammar.SimpleNameClass\u0000"
+"\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNamet\u0000\u0012Ljava/lang/String;L\u0000\fnamespaceURIq\u0000"
+"~\u00005xq\u0000~\u00000t\u0000:com.sun.identity.liberty.ws.meta.jaxb.KeyDescrip"
+"torElementt\u0000+http://java.sun.com/jaxb/xjc/dummy-elementssq\u0000~"
+"\u0000$q\u0000~\u0000\"p\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000$pp\u0000sq\u0000~\u0000\u001cppsq\u0000~\u0000\u001eq\u0000~\u0000\"psq\u0000~\u0000*q\u0000~\u0000\"pq\u0000"
+"~\u0000-q\u0000~\u00001q\u0000~\u00003sq\u0000~\u00004t\u00007com.sun.identity.liberty.ws.meta.jaxb."
+"KeyDescriptorTypeq\u0000~\u00008sq\u0000~\u0000\u001cppsq\u0000~\u0000*q\u0000~\u0000\"psr\u0000\u001bcom.sun.msv.gr"
+"ammar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/relaxng/datatype/Dataty"
+"pe;L\u0000\u0006exceptq\u0000~\u0000\u0002L\u0000\u0004namet\u0000\u001dLcom/sun/msv/util/StringPair;xq\u0000~"
+"\u0000\u0003q\u0000~\u0000\"psr\u0000\"com.sun.msv.datatype.xsd.QnameType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000"
+"*com.sun.msv.datatype.xsd.BuiltinAtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%co"
+"m.sun.msv.datatype.xsd.ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com.sun.ms"
+"v.datatype.xsd.XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUriq\u0000~\u00005"
+"L\u0000\btypeNameq\u0000~\u00005L\u0000\nwhiteSpacet\u0000.Lcom/sun/msv/datatype/xsd/Wh"
+"iteSpaceProcessor;xpt\u0000 http://www.w3.org/2001/XMLSchemat\u0000\u0005QN"
+"amesr\u00005com.sun.msv.datatype.xsd.WhiteSpaceProcessor$Collapse"
+"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun.msv.datatype.xsd.WhiteSpaceProcessor\u0000"
+"\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.sun.msv.grammar.Expression$NullSetExpres"
+"sion\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003q\u0000~\u0000\"psr\u0000\u001bcom.sun.msv.util.StringPair\u00d0t"
+"\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u00005L\u0000\fnamespaceURIq\u0000~\u00005xpq\u0000~\u0000Nq\u0000~\u0000Msq"
+"\u0000~\u00004t\u0000\u0004typet\u0000)http://www.w3.org/2001/XMLSchema-instanceq\u0000~\u00003"
+"sq\u0000~\u00004t\u0000\rKeyDescriptort\u0000\u001curn:liberty:metadata:2003-08q\u0000~\u00003sq"
+"\u0000~\u0000\u001cppsq\u0000~\u0000$q\u0000~\u0000\"p\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000Cq\u0000~\u0000\"psr\u0000#com.sun.msv.datat"
+"ype.xsd.AnyURIType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000Hq\u0000~\u0000Mt\u0000\u0006anyURIq\u0000~\u0000Qq\u0000~\u0000Ss"
+"q\u0000~\u0000Tq\u0000~\u0000bq\u0000~\u0000Msq\u0000~\u0000\u001cppsq\u0000~\u0000*q\u0000~\u0000\"pq\u0000~\u0000Fq\u0000~\u0000Vq\u0000~\u00003sq\u0000~\u00004t\u0000\fS"
+"oapEndpointq\u0000~\u0000[q\u0000~\u00003sq\u0000~\u0000\u001cppsq\u0000~\u0000$q\u0000~\u0000\"p\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000_sq\u0000~\u0000"
+"\u001cppsq\u0000~\u0000*q\u0000~\u0000\"pq\u0000~\u0000Fq\u0000~\u0000Vq\u0000~\u00003sq\u0000~\u00004t\u0000\u0016SingleLogoutServiceUR"
+"Lq\u0000~\u0000[q\u0000~\u00003sq\u0000~\u0000\u001cppsq\u0000~\u0000$q\u0000~\u0000\"p\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000_sq\u0000~\u0000\u001cppsq\u0000~\u0000*q"
+"\u0000~\u0000\"pq\u0000~\u0000Fq\u0000~\u0000Vq\u0000~\u00003sq\u0000~\u00004t\u0000\u001cSingleLogoutServiceReturnURLq\u0000~"
+"\u0000[q\u0000~\u00003sq\u0000~\u0000\u001cppsq\u0000~\u0000$q\u0000~\u0000\"p\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000_sq\u0000~\u0000\u001cppsq\u0000~\u0000*q\u0000~\u0000\""
+"pq\u0000~\u0000Fq\u0000~\u0000Vq\u0000~\u00003sq\u0000~\u00004t\u0000\u001fFederationTerminationServiceURLq\u0000~\u0000"
+"[q\u0000~\u00003sq\u0000~\u0000\u001cppsq\u0000~\u0000$q\u0000~\u0000\"p\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000_sq\u0000~\u0000\u001cppsq\u0000~\u0000*q\u0000~\u0000\"p"
+"q\u0000~\u0000Fq\u0000~\u0000Vq\u0000~\u00003sq\u0000~\u00004t\u0000%FederationTerminationServiceReturnUR"
+"Lq\u0000~\u0000[q\u0000~\u00003sq\u0000~\u0000\u001cppsq\u0000~\u0000\u001eq\u0000~\u0000\"psq\u0000~\u0000$q\u0000~\u0000\"p\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000_sq\u0000"
+"~\u0000\u001cppsq\u0000~\u0000*q\u0000~\u0000\"pq\u0000~\u0000Fq\u0000~\u0000Vq\u0000~\u00003sq\u0000~\u00004t\u00000FederationTerminati"
+"onNotificationProtocolProfileq\u0000~\u0000[q\u0000~\u00003sq\u0000~\u0000\u001cppsq\u0000~\u0000\u001eq\u0000~\u0000\"ps"
+"q\u0000~\u0000$q\u0000~\u0000\"p\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000_sq\u0000~\u0000\u001cppsq\u0000~\u0000*q\u0000~\u0000\"pq\u0000~\u0000Fq\u0000~\u0000Vq\u0000~\u00003"
+"sq\u0000~\u00004t\u0000\u001bSingleLogoutProtocolProfileq\u0000~\u0000[q\u0000~\u00003sq\u0000~\u0000\u001cppsq\u0000~\u0000\u001e"
+"q\u0000~\u0000\"psq\u0000~\u0000$q\u0000~\u0000\"p\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000_sq\u0000~\u0000\u001cppsq\u0000~\u0000*q\u0000~\u0000\"pq\u0000~\u0000Fq\u0000~"
+"\u0000Vq\u0000~\u00003sq\u0000~\u00004t\u0000%RegisterNameIdentifierProtocolProfileq\u0000~\u0000[q\u0000"
+"~\u00003sq\u0000~\u0000\u001cppsq\u0000~\u0000$q\u0000~\u0000\"p\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000_sq\u0000~\u0000\u001cppsq\u0000~\u0000*q\u0000~\u0000\"pq\u0000~"
+"\u0000Fq\u0000~\u0000Vq\u0000~\u00003sq\u0000~\u00004t\u0000 RegisterNameIdentifierServiceURLq\u0000~\u0000[q\u0000"
+"~\u00003sq\u0000~\u0000\u001cppsq\u0000~\u0000$q\u0000~\u0000\"p\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000_sq\u0000~\u0000\u001cppsq\u0000~\u0000*q\u0000~\u0000\"pq\u0000~"
+"\u0000Fq\u0000~\u0000Vq\u0000~\u00003sq\u0000~\u00004t\u0000&RegisterNameIdentifierServiceReturnURLq"
+"\u0000~\u0000[q\u0000~\u00003sq\u0000~\u0000\u001cppsq\u0000~\u0000\u001eq\u0000~\u0000\"psq\u0000~\u0000$q\u0000~\u0000\"p\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000$pp\u0000s"
+"q\u0000~\u0000\u001cppsq\u0000~\u0000\u001eq\u0000~\u0000\"psq\u0000~\u0000*q\u0000~\u0000\"pq\u0000~\u0000-q\u0000~\u00001q\u0000~\u00003sq\u0000~\u00004t\u0000Fcom.s"
+"un.identity.liberty.ws.common.jaxb.assertion.AuthorityBindin"
+"gTypeq\u0000~\u00008sq\u0000~\u0000\u001cppsq\u0000~\u0000*q\u0000~\u0000\"pq\u0000~\u0000Fq\u0000~\u0000Vq\u0000~\u00003sq\u0000~\u00004t\u0000$NameId"
+"entifierMappingProtocolProfileq\u0000~\u0000[q\u0000~\u00003sq\u0000~\u0000\u001cppsq\u0000~\u0000\u001eq\u0000~\u0000\"p"
+"sq\u0000~\u0000$q\u0000~\u0000\"p\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000_sq\u0000~\u0000\u001cppsq\u0000~\u0000*q\u0000~\u0000\"pq\u0000~\u0000Fq\u0000~\u0000Vq\u0000~\u0000"
+"3sq\u0000~\u00004t\u0000&NameIdentifierMappingEncryptionProfileq\u0000~\u0000[q\u0000~\u00003sq"
+"\u0000~\u0000\u001cppsq\u0000~\u0000$q\u0000~\u0000\"p\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000$pp\u0000sq\u0000~\u0000\u001cppsq\u0000~\u0000\u001eq\u0000~\u0000\"psq\u0000~"
+"\u0000*q\u0000~\u0000\"pq\u0000~\u0000-q\u0000~\u00001q\u0000~\u00003sq\u0000~\u00004t\u00006com.sun.identity.liberty.ws."
+"meta.jaxb.OrganizationTypeq\u0000~\u00008sq\u0000~\u0000\u001cppsq\u0000~\u0000*q\u0000~\u0000\"pq\u0000~\u0000Fq\u0000~\u0000"
+"Vq\u0000~\u00003sq\u0000~\u00004t\u0000\fOrganizationq\u0000~\u0000[q\u0000~\u00003sq\u0000~\u0000\u001cppsq\u0000~\u0000\u001eq\u0000~\u0000\"psq\u0000"
+"~\u0000$q\u0000~\u0000\"p\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000$pp\u0000sq\u0000~\u0000\u001cppsq\u0000~\u0000\u001eq\u0000~\u0000\"psq\u0000~\u0000*q\u0000~\u0000\"pq"
+"\u0000~\u0000-q\u0000~\u00001q\u0000~\u00003sq\u0000~\u00004t\u00001com.sun.identity.liberty.ws.meta.jaxb"
+".ContactTypeq\u0000~\u00008sq\u0000~\u0000\u001cppsq\u0000~\u0000*q\u0000~\u0000\"pq\u0000~\u0000Fq\u0000~\u0000Vq\u0000~\u00003sq\u0000~\u00004t\u0000"
+"\rContactPersonq\u0000~\u0000[q\u0000~\u00003sq\u0000~\u0000\u001cppsq\u0000~\u0000\u001eq\u0000~\u0000\"psq\u0000~\u0000$q\u0000~\u0000\"p\u0000sq\u0000"
+"~\u0000\u0000ppsq\u0000~\u0000$pp\u0000sq\u0000~\u0000\u001cppsq\u0000~\u0000\u001eq\u0000~\u0000\"psq\u0000~\u0000*q\u0000~\u0000\"pq\u0000~\u0000-q\u0000~\u00001q\u0000~\u0000"
+"3sq\u0000~\u00004t\u0000Dcom.sun.identity.liberty.ws.meta.jaxb.AdditionalMe"
+"tadataLocationTypeq\u0000~\u00008sq\u0000~\u0000\u001cppsq\u0000~\u0000*q\u0000~\u0000\"pq\u0000~\u0000Fq\u0000~\u0000Vq\u0000~\u00003sq"
+"\u0000~\u00004t\u0000\u0016AdditionalMetaLocationq\u0000~\u0000[q\u0000~\u00003sq\u0000~\u0000\u001cppsq\u0000~\u0000\u001cq\u0000~\u0000\"ps"
+"q\u0000~\u0000$q\u0000~\u0000\"p\u0000sq\u0000~\u0000\u001cppsq\u0000~\u0000\u001eq\u0000~\u0000\"psq\u0000~\u0000*q\u0000~\u0000\"pq\u0000~\u0000-q\u0000~\u00001q\u0000~\u00003s"
+"q\u0000~\u00004t\u00006com.sun.identity.liberty.ws.meta.jaxb.ExtensionEleme"
+"ntq\u0000~\u00008sq\u0000~\u0000$q\u0000~\u0000\"p\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000$pp\u0000sq\u0000~\u0000\u001cppsq\u0000~\u0000\u001eq\u0000~\u0000\"psq\u0000"
+"~\u0000*q\u0000~\u0000\"pq\u0000~\u0000-q\u0000~\u00001q\u0000~\u00003sq\u0000~\u00004t\u00003com.sun.identity.liberty.ws"
+".meta.jaxb.ExtensionTypeq\u0000~\u00008sq\u0000~\u0000\u001cppsq\u0000~\u0000*q\u0000~\u0000\"pq\u0000~\u0000Fq\u0000~\u0000Vq"
+"\u0000~\u00003sq\u0000~\u00004t\u0000\tExtensionq\u0000~\u0000[q\u0000~\u00003sq\u0000~\u0000\u001cppsq\u0000~\u0000\u001cq\u0000~\u0000\"psq\u0000~\u0000$q\u0000"
+"~\u0000\"p\u0000sq\u0000~\u0000\u001cppsq\u0000~\u0000\u001eq\u0000~\u0000\"psq\u0000~\u0000*q\u0000~\u0000\"pq\u0000~\u0000-q\u0000~\u00001q\u0000~\u00003sq\u0000~\u00004t\u0000"
+"?com.sun.identity.liberty.ws.common.jaxb.xmlsig.SignatureEle"
+"mentq\u0000~\u00008sq\u0000~\u0000$q\u0000~\u0000\"p\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000$pp\u0000sq\u0000~\u0000\u001cppsq\u0000~\u0000\u001eq\u0000~\u0000\"ps"
+"q\u0000~\u0000*q\u0000~\u0000\"pq\u0000~\u0000-q\u0000~\u00001q\u0000~\u00003sq\u0000~\u00004t\u0000<com.sun.identity.liberty."
+"ws.common.jaxb.xmlsig.SignatureTypeq\u0000~\u00008sq\u0000~\u0000\u001cppsq\u0000~\u0000*q\u0000~\u0000\"p"
+"q\u0000~\u0000Fq\u0000~\u0000Vq\u0000~\u00003sq\u0000~\u00004t\u0000\tSignaturet\u0000\"http://www.w3.org/2000/0"
+"9/xmldsig#q\u0000~\u00003sq\u0000~\u0000\u001eppsq\u0000~\u0000$pp\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000$pp\u0000sq\u0000~\u0000\u001cppsq\u0000"
+"~\u0000\u001eq\u0000~\u0000\"psq\u0000~\u0000*q\u0000~\u0000\"pq\u0000~\u0000-q\u0000~\u00001q\u0000~\u00003sq\u0000~\u00004t\u0000Vcom.sun.identit"
+"y.liberty.ws.meta.jaxb.SPDescriptorType.AssertionConsumerSer"
+"viceURLTypeq\u0000~\u00008sq\u0000~\u0000\u001cppsq\u0000~\u0000*q\u0000~\u0000\"pq\u0000~\u0000Fq\u0000~\u0000Vq\u0000~\u00003sq\u0000~\u00004t\u0000\u001b"
+"AssertionConsumerServiceURLq\u0000~\u0000[sq\u0000~\u0000$pp\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000Cppsr\u0000"
+"$com.sun.msv.datatype.xsd.BooleanType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000Hq\u0000~\u0000Mt"
+"\u0000\u0007booleanq\u0000~\u0000Qq\u0000~\u0000Ssq\u0000~\u0000Tq\u0000~\u0001$q\u0000~\u0000Msq\u0000~\u0000\u001cppsq\u0000~\u0000*q\u0000~\u0000\"pq\u0000~\u0000F"
+"q\u0000~\u0000Vq\u0000~\u00003sq\u0000~\u00004t\u0000\u0013AuthnRequestsSignedq\u0000~\u0000[sq\u0000~\u0000\u001cppsq\u0000~\u0000*q\u0000~"
+"\u0000\"psq\u0000~\u0000Cppsr\u0000%com.sun.msv.datatype.xsd.DurationType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001"
+"\u0002\u0000\u0000xq\u0000~\u0000Hq\u0000~\u0000Mt\u0000\bdurationq\u0000~\u0000Qq\u0000~\u0000Ssq\u0000~\u0000Tq\u0000~\u0001/q\u0000~\u0000Msq\u0000~\u00004t\u0000\r"
+"cacheDurationt\u0000\u0000q\u0000~\u00003sq\u0000~\u0000\u001cppsq\u0000~\u0000*q\u0000~\u0000\"psq\u0000~\u0000Cppsr\u0000\u001fcom.sun"
+".msv.datatype.xsd.IDType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000#com.sun.msv.datatype."
+"xsd.NcnameType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\"com.sun.msv.datatype.xsd.TokenT"
+"ype\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000#com.sun.msv.datatype.xsd.StringType\u0000\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0001\u0002\u0000\u0001Z\u0000\risAlwaysValidxq\u0000~\u0000Hq\u0000~\u0000Mt\u0000\u0002IDq\u0000~\u0000Q\u0000q\u0000~\u0000Ssq\u0000~\u0000Tq\u0000~\u0001<q\u0000"
+"~\u0000Msq\u0000~\u00004t\u0000\u0002idq\u0000~\u00013q\u0000~\u00003sq\u0000~\u0000*ppsq\u0000~\u0000Cppsr\u0000*com.sun.msv.data"
+"type.xsd.DatatypeFactory$1\u00a1\u00f3\u000b\u00e3`rj\u000e\u0002\u0000\u0000xr\u0000\u001ecom.sun.msv.datatyp"
+"e.xsd.Proxy\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bbaseTypet\u0000)Lcom/sun/msv/datatype/xs"
+"d/XSDatatypeImpl;xq\u0000~\u0000Jq\u0000~\u0000Mt\u0000\bNMTOKENSq\u0000~\u0000Qsr\u0000\'com.sun.msv."
+"datatype.xsd.MinLengthFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001I\u0000\tminLengthxr\u00009com.su"
+"n.msv.datatype.xsd.DataTypeWithValueConstraintFacet\"\u00a7Ro\u00ca\u00c7\u008aT\u0002"
+"\u0000\u0000xr\u0000*com.sun.msv.datatype.xsd.DataTypeWithFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0005Z"
+"\u0000\fisFacetFixedZ\u0000\u0012needValueCheckFlagL\u0000\bbaseTypeq\u0000~\u0001DL\u0000\fconcre"
+"teTypet\u0000\'Lcom/sun/msv/datatype/xsd/ConcreteType;L\u0000\tfacetName"
+"q\u0000~\u00005xq\u0000~\u0000Jppq\u0000~\u0000Q\u0000\u0000sr\u0000!com.sun.msv.datatype.xsd.ListType\u0000\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bitemTypeq\u0000~\u0001Dxq\u0000~\u0000Ippq\u0000~\u0000Qsr\u0000$com.sun.msv.datatyp"
+"e.xsd.NmtokenType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u00019q\u0000~\u0000Mt\u0000\u0007NMTOKENq\u0000~\u0000Q\u0000q\u0000~\u0001M"
+"t\u0000\tminLength\u0000\u0000\u0000\u0001q\u0000~\u0000Spsq\u0000~\u00004t\u0000\u001aprotocolSupportEnumerationq\u0000~"
+"\u00013sq\u0000~\u0000\u001cppsq\u0000~\u0000*q\u0000~\u0000\"psq\u0000~\u0000Cppsr\u0000%com.sun.msv.datatype.xsd.D"
+"ateTimeType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000)com.sun.msv.datatype.xsd.DateTimeB"
+"aseType\u0014W\u001a@3\u00a5\u00b4\u00e5\u0002\u0000\u0000xq\u0000~\u0000Hq\u0000~\u0000Mt\u0000\bdateTimeq\u0000~\u0000Qq\u0000~\u0000Ssq\u0000~\u0000Tq\u0000~\u0001"
+"Zq\u0000~\u0000Msq\u0000~\u00004t\u0000\nvalidUntilq\u0000~\u00013q\u0000~\u00003sr\u0000\"com.sun.msv.grammar.E"
+"xpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun/msv/grammar/E"
+"xpressionPool$ClosedHash;xpsr\u0000-com.sun.msv.grammar.Expressio"
+"nPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0003\u0000\u0003I\u0000\u0005countB\u0000\rstreamVersionL\u0000\u0006parent"
+"t\u0000$Lcom/sun/msv/grammar/ExpressionPool;xp\u0000\u0000\u0000v\u0001pq\u0000~\u0000\u0017q\u0000~\u0000\tq\u0000~"
+"\u0000 q\u0000~\u0000\u00b9q\u0000~\u0000\u0085q\u0000~\u0000\u008dq\u0000~\u0000\u0095q\u0000~\u0001\u0014q\u0000~\u0001\u0006q\u0000~\u0000\u00f2q\u0000~\u0000\u00deq\u0000~\u0000\u00d0q\u0000~\u0000\u00c2q\u0000~\u0000:q\u0000~"
+"\u0000\u00adq\u0000~\u0000\fq\u0000~\u0000\u00fdq\u0000~\u0000\u00e9q\u0000~\u0000\u001bq\u0000~\u0000\rq\u0000~\u0000\u000eq\u0000~\u0000\u000bq\u0000~\u0000\u0010q\u0000~\u0000\u0005q\u0000~\u0000\u0012q\u0000~\u0000\u001dq\u0000~"
+"\u0000\u00feq\u0000~\u0000\u00eaq\u0000~\u0000#q\u0000~\u0000\u00dbq\u0000~\u0000\u00cdq\u0000~\u0000\u00aaq\u0000~\u0000\bq\u0000~\u0000\u0013q\u0000~\u0001\u0016q\u0000~\u0001\bq\u0000~\u0001\u0000q\u0000~\u0000\u00f4q\u0000~"
+"\u0000\u00ecq\u0000~\u0000\u00e0q\u0000~\u0000\u00d2q\u0000~\u0000\u00c4q\u0000~\u0000(q\u0000~\u0000<q\u0000~\u0000\u00afq\u0000~\u0000\u00c0q\u0000~\u0000\u0007q\u0000~\u0000\nq\u0000~\u00014q\u0000~\u0000\u0015q\u0000~"
+"\u0000\u0014q\u0000~\u0001*q\u0000~\u0001Tq\u0000~\u0001\tq\u0000~\u0001\u0001q\u0000~\u0000\u00f5q\u0000~\u0000\u00edq\u0000~\u0000\u00e1q\u0000~\u0000\u00d3q\u0000~\u0000\u00c5q\u0000~\u0000)q\u0000~\u0000=q\u0000~"
+"\u0000\u00b0q\u0000~\u0001\u0017q\u0000~\u0000\u00bbq\u0000~\u0000^q\u0000~\u0000jq\u0000~\u0000qq\u0000~\u0000xq\u0000~\u0000\u007fq\u0000~\u0000\u0087q\u0000~\u0000\u008fq\u0000~\u0000\u0097q\u0000~\u0000\u009eq\u0000~"
+"\u0000\u00a5q\u0000~\u0001&q\u0000~\u0001\u001bq\u0000~\u0001\rq\u0000~\u0000\u00f9q\u0000~\u0000\u00e5q\u0000~\u0000\u00d7q\u0000~\u0000\u00c9q\u0000~\u0000\u00bcq\u0000~\u0000Aq\u0000~\u0000dq\u0000~\u0000kq\u0000~"
+"\u0000rq\u0000~\u0000yq\u0000~\u0000\u0080q\u0000~\u0000\u0088q\u0000~\u0000\u0090q\u0000~\u0000\u0016q\u0000~\u0000\u0098q\u0000~\u0000\u009fq\u0000~\u0000\u00a6q\u0000~\u0000\u00b4q\u0000~\u0000\u0018q\u0000~\u0000\u001aq\u0000~"
+"\u0000\u0006q\u0000~\u0000\u00b8q\u0000~\u0000\u0084q\u0000~\u0000\u008cq\u0000~\u0000\u0094q\u0000~\u0000\u0019q\u0000~\u0000\u000fq\u0000~\u0001 q\u0000~\u0000\\q\u0000~\u0000hq\u0000~\u0000oq\u0000~\u0000vq\u0000~"
+"\u0000}q\u0000~\u0001\u0012q\u0000~\u0000\u00dcq\u0000~\u0000\u00ceq\u0000~\u0000\u00abq\u0000~\u0000\u0011q\u0000~\u0000\u009cq\u0000~\u0000\u00a3x"));
        }
        return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
    }

    public static class AssertionConsumerServiceURLTypeImpl implements com.sun.identity.liberty.ws.meta.jaxb.SPDescriptorType.AssertionConsumerServiceURLType, com.sun.xml.bind.JAXBObject, com.sun.identity.federation.jaxb.entityconfig.impl.runtime.UnmarshallableObject, com.sun.identity.federation.jaxb.entityconfig.impl.runtime.XMLSerializable, com.sun.xml.bind.marshaller.IdentifiableObject, com.sun.identity.federation.jaxb.entityconfig.impl.runtime.ValidatableObject
    {

        protected java.lang.String _Value;
        protected boolean has_IsDefault;
        protected boolean _IsDefault;
        protected java.lang.String _Id;
        public final static java.lang.Class version = (com.sun.identity.liberty.ws.meta.jaxb.impl.JAXBVersion.class);
        private static com.sun.msv.grammar.Grammar schemaFragment;

        private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
            return (com.sun.identity.liberty.ws.meta.jaxb.SPDescriptorType.AssertionConsumerServiceURLType.class);
        }

        public java.lang.String getValue() {
            return _Value;
        }

        public void setValue(java.lang.String value) {
            _Value = value;
        }

        public boolean isIsDefault() {
            if (!has_IsDefault) {
                return javax.xml.bind.DatatypeConverter.parseBoolean(com.sun.xml.bind.DatatypeConverterImpl.installHook("false"));
            } else {
                return _IsDefault;
            }
        }

        public void setIsDefault(boolean value) {
            _IsDefault = value;
            has_IsDefault = true;
        }

        public java.lang.String getId() {
            return _Id;
        }

        public void setId(java.lang.String value) {
            _Id = value;
        }

        public com.sun.identity.federation.jaxb.entityconfig.impl.runtime.UnmarshallingEventHandler createUnmarshaller(com.sun.identity.federation.jaxb.entityconfig.impl.runtime.UnmarshallingContext context) {
            return new com.sun.identity.liberty.ws.meta.jaxb.impl.SPDescriptorTypeImpl.AssertionConsumerServiceURLTypeImpl.Unmarshaller(context);
        }

        public void serializeBody(com.sun.identity.federation.jaxb.entityconfig.impl.runtime.XMLSerializer context)
            throws org.xml.sax.SAXException
        {
            try {
                context.text(((java.lang.String) _Value), "Value");
            } catch (java.lang.Exception e) {
                com.sun.identity.federation.jaxb.entityconfig.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
        }

        public void serializeAttributes(com.sun.identity.federation.jaxb.entityconfig.impl.runtime.XMLSerializer context)
            throws org.xml.sax.SAXException
        {
            context.startAttribute("", "id");
            try {
                context.text(context.onID(this, ((java.lang.String) _Id)), "Id");
            } catch (java.lang.Exception e) {
                com.sun.identity.federation.jaxb.entityconfig.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
            if (has_IsDefault) {
                context.startAttribute("", "isDefault");
                try {
                    context.text(javax.xml.bind.DatatypeConverter.printBoolean(((boolean) _IsDefault)), "IsDefault");
                } catch (java.lang.Exception e) {
                    com.sun.identity.federation.jaxb.entityconfig.impl.runtime.Util.handlePrintConversionException(this, e, context);
                }
                context.endAttribute();
            }
        }

        public void serializeURIs(com.sun.identity.federation.jaxb.entityconfig.impl.runtime.XMLSerializer context)
            throws org.xml.sax.SAXException
        {
        }

        public java.lang.String ____jaxb____getId() {
            return ((java.lang.String) _Id);
        }

        public java.lang.Class getPrimaryInterface() {
            return (com.sun.identity.liberty.ws.meta.jaxb.SPDescriptorType.AssertionConsumerServiceURLType.class);
        }

        public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
            if (schemaFragment == null) {
                schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.su"
+"n.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gra"
+"mmar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expressi"
+"on\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0002L\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000b"
+"expandedExpq\u0000~\u0000\u0002xpppsq\u0000~\u0000\u0000ppsr\u0000\u001bcom.sun.msv.grammar.DataExp\u0000"
+"\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/relaxng/datatype/Datatype;L\u0000\u0006exceptq\u0000"
+"~\u0000\u0002L\u0000\u0004namet\u0000\u001dLcom/sun/msv/util/StringPair;xq\u0000~\u0000\u0003sr\u0000\u0011java.lan"
+"g.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000psr\u0000#com.sun.msv.datatype.xsd"
+".AnyURIType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000*com.sun.msv.datatype.xsd.BuiltinAt"
+"omicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.datatype.xsd.ConcreteType"
+"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com.sun.msv.datatype.xsd.XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUrit\u0000\u0012Ljava/lang/String;L\u0000\btypeNameq\u0000~\u0000\u0011L\u0000\n"
+"whiteSpacet\u0000.Lcom/sun/msv/datatype/xsd/WhiteSpaceProcessor;x"
+"pt\u0000 http://www.w3.org/2001/XMLSchemat\u0000\u0006anyURIsr\u00005com.sun.msv"
+".datatype.xsd.WhiteSpaceProcessor$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com"
+".sun.msv.datatype.xsd.WhiteSpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000co"
+"m.sun.msv.grammar.Expression$NullSetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000"
+"~\u0000\u0003q\u0000~\u0000\fpsr\u0000\u001bcom.sun.msv.util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalN"
+"ameq\u0000~\u0000\u0011L\u0000\fnamespaceURIq\u0000~\u0000\u0011xpq\u0000~\u0000\u0015q\u0000~\u0000\u0014sr\u0000 com.sun.msv.gram"
+"mar.AttributeExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnameClasst\u0000\u001fLcom/su"
+"n/msv/grammar/NameClass;xq\u0000~\u0000\u0003ppsq\u0000~\u0000\u0007ppsr\u0000\u001fcom.sun.msv.data"
+"type.xsd.IDType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000#com.sun.msv.datatype.xsd.Ncnam"
+"eType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\"com.sun.msv.datatype.xsd.TokenType\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0000\u0001\u0002\u0000\u0000xr\u0000#com.sun.msv.datatype.xsd.StringType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001Z\u0000\ris"
+"AlwaysValidxq\u0000~\u0000\u000eq\u0000~\u0000\u0014t\u0000\u0002IDq\u0000~\u0000\u0018\u0000q\u0000~\u0000\u001asq\u0000~\u0000\u001bq\u0000~\u0000&q\u0000~\u0000\u0014sr\u0000#co"
+"m.sun.msv.grammar.SimpleNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000"
+"\u0011L\u0000\fnamespaceURIq\u0000~\u0000\u0011xr\u0000\u001dcom.sun.msv.grammar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0000\u0001\u0002\u0000\u0000xpt\u0000\u0002idt\u0000\u0000sr\u0000\u001dcom.sun.msv.grammar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000x"
+"q\u0000~\u0000\u0001ppsq\u0000~\u0000\u001dq\u0000~\u0000\fpsq\u0000~\u0000\u0007ppsr\u0000$com.sun.msv.datatype.xsd.Bool"
+"eanType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u000eq\u0000~\u0000\u0014t\u0000\u0007booleanq\u0000~\u0000\u0018q\u0000~\u0000\u001asq\u0000~\u0000\u001bq\u0000~\u00003"
+"q\u0000~\u0000\u0014sq\u0000~\u0000(t\u0000\tisDefaultq\u0000~\u0000,sr\u00000com.sun.msv.grammar.Expressi"
+"on$EpsilonExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003sq\u0000~\u0000\u000b\u0001q\u0000~\u00008sr\u0000\"com.sun"
+".msv.grammar.ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun"
+"/msv/grammar/ExpressionPool$ClosedHash;xpsr\u0000-com.sun.msv.gra"
+"mmar.ExpressionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0003\u0000\u0003I\u0000\u0005countB\u0000\rstreamVe"
+"rsionL\u0000\u0006parentt\u0000$Lcom/sun/msv/grammar/ExpressionPool;xp\u0000\u0000\u0000\u0003\u0001"
+"pq\u0000~\u0000\u0006q\u0000~\u0000\u0005q\u0000~\u0000.x"));
            }
            return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
        }

        public class Unmarshaller
            extends com.sun.identity.federation.jaxb.entityconfig.impl.runtime.AbstractUnmarshallingEventHandlerImpl
        {


            public Unmarshaller(com.sun.identity.federation.jaxb.entityconfig.impl.runtime.UnmarshallingContext context) {
                super(context, "--------");
            }

            protected Unmarshaller(com.sun.identity.federation.jaxb.entityconfig.impl.runtime.UnmarshallingContext context, int startState) {
                this(context);
                state = startState;
            }

            public java.lang.Object owner() {
                return com.sun.identity.liberty.ws.meta.jaxb.impl.SPDescriptorTypeImpl.AssertionConsumerServiceURLTypeImpl.this;
            }

            public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
                throws org.xml.sax.SAXException
            {
                int attIdx;
                outer:
                while (true) {
                    switch (state) {
                        case  7 :
                            revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        case  3 :
                            attIdx = context.getAttribute("", "isDefault");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 6;
                                eatText1(v);
                                continue outer;
                            }
                            state = 6;
                            continue outer;
                        case  0 :
                            attIdx = context.getAttribute("", "id");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 3;
                                eatText2(v);
                                continue outer;
                            }
                            break;
                    }
                    super.enterElement(___uri, ___local, ___qname, __atts);
                    break;
                }
            }

            private void eatText1(final java.lang.String value)
                throws org.xml.sax.SAXException
            {
                try {
                    _IsDefault = javax.xml.bind.DatatypeConverter.parseBoolean(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                    has_IsDefault = true;
                } catch (java.lang.Exception e) {
                    handleParseConversionException(e);
                }
            }

            private void eatText2(final java.lang.String value)
                throws org.xml.sax.SAXException
            {
                try {
                    _Id = context.addToIdTable(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                } catch (java.lang.Exception e) {
                    handleParseConversionException(e);
                }
            }

            public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                throws org.xml.sax.SAXException
            {
                int attIdx;
                outer:
                while (true) {
                    switch (state) {
                        case  7 :
                            revertToParentFromLeaveElement(___uri, ___local, ___qname);
                            return ;
                        case  3 :
                            attIdx = context.getAttribute("", "isDefault");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 6;
                                eatText1(v);
                                continue outer;
                            }
                            state = 6;
                            continue outer;
                        case  0 :
                            attIdx = context.getAttribute("", "id");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 3;
                                eatText2(v);
                                continue outer;
                            }
                            break;
                    }
                    super.leaveElement(___uri, ___local, ___qname);
                    break;
                }
            }

            public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                throws org.xml.sax.SAXException
            {
                int attIdx;
                outer:
                while (true) {
                    switch (state) {
                        case  7 :
                            revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                            return ;
                        case  3 :
                            if (("isDefault" == ___local)&&("" == ___uri)) {
                                state = 4;
                                return ;
                            }
                            state = 6;
                            continue outer;
                        case  0 :
                            if (("id" == ___local)&&("" == ___uri)) {
                                state = 1;
                                return ;
                            }
                            break;
                    }
                    super.enterAttribute(___uri, ___local, ___qname);
                    break;
                }
            }

            public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                throws org.xml.sax.SAXException
            {
                int attIdx;
                outer:
                while (true) {
                    switch (state) {
                        case  7 :
                            revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                            return ;
                        case  5 :
                            if (("isDefault" == ___local)&&("" == ___uri)) {
                                state = 6;
                                return ;
                            }
                            break;
                        case  3 :
                            attIdx = context.getAttribute("", "isDefault");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 6;
                                eatText1(v);
                                continue outer;
                            }
                            state = 6;
                            continue outer;
                        case  2 :
                            if (("id" == ___local)&&("" == ___uri)) {
                                state = 3;
                                return ;
                            }
                            break;
                        case  0 :
                            attIdx = context.getAttribute("", "id");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 3;
                                eatText2(v);
                                continue outer;
                            }
                            break;
                    }
                    super.leaveAttribute(___uri, ___local, ___qname);
                    break;
                }
            }

            public void handleText(final java.lang.String value)
                throws org.xml.sax.SAXException
            {
                int attIdx;
                outer:
                while (true) {
                    try {
                        switch (state) {
                            case  7 :
                                revertToParentFromText(value);
                                return ;
                            case  4 :
                                state = 5;
                                eatText1(value);
                                return ;
                            case  6 :
                                state = 7;
                                eatText3(value);
                                return ;
                            case  3 :
                                attIdx = context.getAttribute("", "isDefault");
                                if (attIdx >= 0) {
                                    final java.lang.String v = context.eatAttribute(attIdx);
                                    state = 6;
                                    eatText1(v);
                                    continue outer;
                                }
                                state = 6;
                                continue outer;
                            case  0 :
                                attIdx = context.getAttribute("", "id");
                                if (attIdx >= 0) {
                                    final java.lang.String v = context.eatAttribute(attIdx);
                                    state = 3;
                                    eatText2(v);
                                    continue outer;
                                }
                                break;
                            case  1 :
                                state = 2;
                                eatText2(value);
                                return ;
                        }
                    } catch (java.lang.RuntimeException e) {
                        handleUnexpectedTextException(value, e);
                    }
                    break;
                }
            }

            private void eatText3(final java.lang.String value)
                throws org.xml.sax.SAXException
            {
                try {
                    _Value = com.sun.xml.bind.WhiteSpaceProcessor.collapse(value);
                } catch (java.lang.Exception e) {
                    handleParseConversionException(e);
                }
            }

        }

    }

    public class Unmarshaller
        extends com.sun.identity.federation.jaxb.entityconfig.impl.runtime.AbstractUnmarshallingEventHandlerImpl
    {


        public Unmarshaller(com.sun.identity.federation.jaxb.entityconfig.impl.runtime.UnmarshallingContext context) {
            super(context, "--------");
        }

        protected Unmarshaller(com.sun.identity.federation.jaxb.entityconfig.impl.runtime.UnmarshallingContext context, int startState) {
            this(context);
            state = startState;
        }

        public java.lang.Object owner() {
            return com.sun.identity.liberty.ws.meta.jaxb.impl.SPDescriptorTypeImpl.this;
        }

        public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  2 :
                        attIdx = context.getAttribute("", "id");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        break;
                    case  7 :
                        revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                        return ;
                    case  4 :
                        if (("AssertionConsumerServiceURL" == ___local)&&("urn:liberty:metadata:2003-08" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 2;
                            return ;
                        }
                        if (("AuthnRequestsSigned" == ___local)&&("urn:liberty:metadata:2003-08" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 5;
                            return ;
                        }
                        break;
                    case  0 :
                        attIdx = context.getAttribute("", "cacheDuration");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        attIdx = context.getAttribute("", "id");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        attIdx = context.getAttribute("", "protocolSupportEnumeration");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        break;
                    case  1 :
                        if (("AssertionConsumerServiceURL" == ___local)&&("urn:liberty:metadata:2003-08" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 2;
                            return ;
                        }
                        break;
                }
                super.enterElement(___uri, ___local, ___qname, __atts);
                break;
            }
        }

        public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  6 :
                        if (("AuthnRequestsSigned" == ___local)&&("urn:liberty:metadata:2003-08" == ___uri)) {
                            context.popAttributes();
                            state = 7;
                            return ;
                        }
                        break;
                    case  2 :
                        attIdx = context.getAttribute("", "id");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                    case  3 :
                        if (("AssertionConsumerServiceURL" == ___local)&&("urn:liberty:metadata:2003-08" == ___uri)) {
                            context.popAttributes();
                            state = 4;
                            return ;
                        }
                        break;
                    case  7 :
                        revertToParentFromLeaveElement(___uri, ___local, ___qname);
                        return ;
                    case  0 :
                        attIdx = context.getAttribute("", "cacheDuration");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "id");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "protocolSupportEnumeration");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                }
                super.leaveElement(___uri, ___local, ___qname);
                break;
            }
        }

        public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  2 :
                        if (("id" == ___local)&&("" == ___uri)) {
                            _getAssertionConsumerServiceURL().add(((com.sun.identity.liberty.ws.meta.jaxb.impl.SPDescriptorTypeImpl.AssertionConsumerServiceURLTypeImpl) spawnChildFromEnterAttribute((com.sun.identity.liberty.ws.meta.jaxb.impl.SPDescriptorTypeImpl.AssertionConsumerServiceURLTypeImpl.class), 3, ___uri, ___local, ___qname)));
                            return ;
                        }
                        break;
                    case  7 :
                        revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                        return ;
                    case  0 :
                        if (("cacheDuration" == ___local)&&("" == ___uri)) {
                            spawnHandlerFromEnterAttribute((((com.sun.identity.liberty.ws.meta.jaxb.impl.ProviderDescriptorTypeImpl)com.sun.identity.liberty.ws.meta.jaxb.impl.SPDescriptorTypeImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname);
                            return ;
                        }
                        if (("id" == ___local)&&("" == ___uri)) {
                            spawnHandlerFromEnterAttribute((((com.sun.identity.liberty.ws.meta.jaxb.impl.ProviderDescriptorTypeImpl)com.sun.identity.liberty.ws.meta.jaxb.impl.SPDescriptorTypeImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname);
                            return ;
                        }
                        if (("protocolSupportEnumeration" == ___local)&&("" == ___uri)) {
                            spawnHandlerFromEnterAttribute((((com.sun.identity.liberty.ws.meta.jaxb.impl.ProviderDescriptorTypeImpl)com.sun.identity.liberty.ws.meta.jaxb.impl.SPDescriptorTypeImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                }
                super.enterAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  2 :
                        attIdx = context.getAttribute("", "id");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                    case  7 :
                        revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                        return ;
                    case  0 :
                        attIdx = context.getAttribute("", "cacheDuration");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "id");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "protocolSupportEnumeration");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                }
                super.leaveAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void handleText(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                try {
                    switch (state) {
                        case  2 :
                            attIdx = context.getAttribute("", "id");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            break;
                        case  7 :
                            revertToParentFromText(value);
                            return ;
                        case  5 :
                            state = 6;
                            eatText1(value);
                            return ;
                        case  0 :
                            attIdx = context.getAttribute("", "cacheDuration");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            attIdx = context.getAttribute("", "id");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            attIdx = context.getAttribute("", "protocolSupportEnumeration");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            break;
                    }
                } catch (java.lang.RuntimeException e) {
                    handleUnexpectedTextException(value, e);
                }
                break;
            }
        }

        private void eatText1(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _AuthnRequestsSigned = javax.xml.bind.DatatypeConverter.parseBoolean(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                has_AuthnRequestsSigned = true;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

    }

}
