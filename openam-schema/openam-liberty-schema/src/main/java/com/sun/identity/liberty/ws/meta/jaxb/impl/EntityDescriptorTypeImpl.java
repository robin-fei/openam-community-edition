//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v1.0.6-b27-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2012.06.11 at 10:33:54 AM PDT 
//


package com.sun.identity.liberty.ws.meta.jaxb.impl;

public class EntityDescriptorTypeImpl implements com.sun.identity.liberty.ws.meta.jaxb.EntityDescriptorType, com.sun.xml.bind.JAXBObject, com.sun.identity.federation.jaxb.entityconfig.impl.runtime.UnmarshallableObject, com.sun.identity.federation.jaxb.entityconfig.impl.runtime.XMLSerializable, com.sun.xml.bind.marshaller.IdentifiableObject, com.sun.identity.federation.jaxb.entityconfig.impl.runtime.ValidatableObject
{

    protected com.sun.identity.liberty.ws.meta.jaxb.ExtensionType _Extension;
    protected java.lang.String _ValidUntil;
    protected com.sun.identity.liberty.ws.meta.jaxb.ContactType _ContactPerson;
    protected com.sun.xml.bind.util.ListImpl _SPDescriptor;
    protected com.sun.identity.liberty.ws.meta.jaxb.OrganizationType _Organization;
    protected java.lang.String _ProviderID;
    protected java.lang.String _Id;
    protected java.lang.String _CacheDuration;
    protected com.sun.xml.bind.util.ListImpl _IDPDescriptor;
    protected com.sun.identity.liberty.ws.meta.jaxb.AffiliationDescriptorType _AffiliationDescriptor;
    protected com.sun.identity.liberty.ws.common.jaxb.xmlsig.SignatureType _Signature;
    public final static java.lang.Class version = (com.sun.identity.liberty.ws.meta.jaxb.impl.JAXBVersion.class);
    private static com.sun.msv.grammar.Grammar schemaFragment;

    private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
        return (com.sun.identity.liberty.ws.meta.jaxb.EntityDescriptorType.class);
    }

    public com.sun.identity.liberty.ws.meta.jaxb.ExtensionType getExtension() {
        return _Extension;
    }

    public void setExtension(com.sun.identity.liberty.ws.meta.jaxb.ExtensionType value) {
        _Extension = value;
    }

    public java.lang.String getValidUntil() {
        return _ValidUntil;
    }

    public void setValidUntil(java.lang.String value) {
        _ValidUntil = value;
    }

    public com.sun.identity.liberty.ws.meta.jaxb.ContactType getContactPerson() {
        return _ContactPerson;
    }

    public void setContactPerson(com.sun.identity.liberty.ws.meta.jaxb.ContactType value) {
        _ContactPerson = value;
    }

    protected com.sun.xml.bind.util.ListImpl _getSPDescriptor() {
        if (_SPDescriptor == null) {
            _SPDescriptor = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
        }
        return _SPDescriptor;
    }

    public java.util.List getSPDescriptor() {
        return _getSPDescriptor();
    }

    public com.sun.identity.liberty.ws.meta.jaxb.OrganizationType getOrganization() {
        return _Organization;
    }

    public void setOrganization(com.sun.identity.liberty.ws.meta.jaxb.OrganizationType value) {
        _Organization = value;
    }

    public java.lang.String getProviderID() {
        return _ProviderID;
    }

    public void setProviderID(java.lang.String value) {
        _ProviderID = value;
    }

    public java.lang.String getId() {
        return _Id;
    }

    public void setId(java.lang.String value) {
        _Id = value;
    }

    public java.lang.String getCacheDuration() {
        return _CacheDuration;
    }

    public void setCacheDuration(java.lang.String value) {
        _CacheDuration = value;
    }

    protected com.sun.xml.bind.util.ListImpl _getIDPDescriptor() {
        if (_IDPDescriptor == null) {
            _IDPDescriptor = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
        }
        return _IDPDescriptor;
    }

    public java.util.List getIDPDescriptor() {
        return _getIDPDescriptor();
    }

    public com.sun.identity.liberty.ws.meta.jaxb.AffiliationDescriptorType getAffiliationDescriptor() {
        return _AffiliationDescriptor;
    }

    public void setAffiliationDescriptor(com.sun.identity.liberty.ws.meta.jaxb.AffiliationDescriptorType value) {
        _AffiliationDescriptor = value;
    }

    public com.sun.identity.liberty.ws.common.jaxb.xmlsig.SignatureType getSignature() {
        return _Signature;
    }

    public void setSignature(com.sun.identity.liberty.ws.common.jaxb.xmlsig.SignatureType value) {
        _Signature = value;
    }

    public com.sun.identity.federation.jaxb.entityconfig.impl.runtime.UnmarshallingEventHandler createUnmarshaller(com.sun.identity.federation.jaxb.entityconfig.impl.runtime.UnmarshallingContext context) {
        return new com.sun.identity.liberty.ws.meta.jaxb.impl.EntityDescriptorTypeImpl.Unmarshaller(context);
    }

    public void serializeBody(com.sun.identity.federation.jaxb.entityconfig.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        int idx4 = 0;
        final int len4 = ((_SPDescriptor == null)? 0 :_SPDescriptor.size());
        int idx9 = 0;
        final int len9 = ((_IDPDescriptor == null)? 0 :_IDPDescriptor.size());
        if (_AffiliationDescriptor == null) {
            while (idx9 != len9) {
                if (_IDPDescriptor.get(idx9) instanceof javax.xml.bind.Element) {
                    context.childAsBody(((com.sun.xml.bind.JAXBObject) _IDPDescriptor.get(idx9 ++)), "IDPDescriptor");
                } else {
                    context.startElement("urn:liberty:metadata:2003-08", "IDPDescriptor");
                    int idx_0 = idx9;
                    context.childAsURIs(((com.sun.xml.bind.JAXBObject) _IDPDescriptor.get(idx_0 ++)), "IDPDescriptor");
                    context.endNamespaceDecls();
                    int idx_1 = idx9;
                    context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _IDPDescriptor.get(idx_1 ++)), "IDPDescriptor");
                    context.endAttributes();
                    context.childAsBody(((com.sun.xml.bind.JAXBObject) _IDPDescriptor.get(idx9 ++)), "IDPDescriptor");
                    context.endElement();
                }
            }
            while (idx4 != len4) {
                if (_SPDescriptor.get(idx4) instanceof javax.xml.bind.Element) {
                    context.childAsBody(((com.sun.xml.bind.JAXBObject) _SPDescriptor.get(idx4 ++)), "SPDescriptor");
                } else {
                    context.startElement("urn:liberty:metadata:2003-08", "SPDescriptor");
                    int idx_2 = idx4;
                    context.childAsURIs(((com.sun.xml.bind.JAXBObject) _SPDescriptor.get(idx_2 ++)), "SPDescriptor");
                    context.endNamespaceDecls();
                    int idx_3 = idx4;
                    context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _SPDescriptor.get(idx_3 ++)), "SPDescriptor");
                    context.endAttributes();
                    context.childAsBody(((com.sun.xml.bind.JAXBObject) _SPDescriptor.get(idx4 ++)), "SPDescriptor");
                    context.endElement();
                }
            }
        } else {
            if (((_AffiliationDescriptor!= null)&&(((_SPDescriptor == null)? 0 :_SPDescriptor.size()) == 0))&&(((_IDPDescriptor == null)? 0 :_IDPDescriptor.size()) == 0)) {
                context.startElement("urn:liberty:metadata:2003-08", "AffiliationDescriptor");
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _AffiliationDescriptor), "AffiliationDescriptor");
                context.endNamespaceDecls();
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _AffiliationDescriptor), "AffiliationDescriptor");
                context.endAttributes();
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _AffiliationDescriptor), "AffiliationDescriptor");
                context.endElement();
            }
        }
        if (_ContactPerson!= null) {
            context.startElement("urn:liberty:metadata:2003-08", "ContactPerson");
            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _ContactPerson), "ContactPerson");
            context.endNamespaceDecls();
            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _ContactPerson), "ContactPerson");
            context.endAttributes();
            context.childAsBody(((com.sun.xml.bind.JAXBObject) _ContactPerson), "ContactPerson");
            context.endElement();
        }
        if (_Organization!= null) {
            context.startElement("urn:liberty:metadata:2003-08", "Organization");
            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Organization), "Organization");
            context.endNamespaceDecls();
            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Organization), "Organization");
            context.endAttributes();
            context.childAsBody(((com.sun.xml.bind.JAXBObject) _Organization), "Organization");
            context.endElement();
        }
        if (_Extension!= null) {
            if (_Extension instanceof javax.xml.bind.Element) {
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _Extension), "Extension");
            } else {
                context.startElement("urn:liberty:metadata:2003-08", "Extension");
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Extension), "Extension");
                context.endNamespaceDecls();
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Extension), "Extension");
                context.endAttributes();
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _Extension), "Extension");
                context.endElement();
            }
        }
        if (_Signature!= null) {
            if (_Signature instanceof javax.xml.bind.Element) {
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _Signature), "Signature");
            } else {
                context.startElement("http://www.w3.org/2000/09/xmldsig#", "Signature");
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Signature), "Signature");
                context.endNamespaceDecls();
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Signature), "Signature");
                context.endAttributes();
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _Signature), "Signature");
                context.endElement();
            }
        }
    }

    public void serializeAttributes(com.sun.identity.federation.jaxb.entityconfig.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        int idx4 = 0;
        final int len4 = ((_SPDescriptor == null)? 0 :_SPDescriptor.size());
        int idx9 = 0;
        final int len9 = ((_IDPDescriptor == null)? 0 :_IDPDescriptor.size());
        if (_CacheDuration!= null) {
            context.startAttribute("", "cacheDuration");
            try {
                context.text(((java.lang.String) _CacheDuration), "CacheDuration");
            } catch (java.lang.Exception e) {
                com.sun.identity.federation.jaxb.entityconfig.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
        }
        if (_Id!= null) {
            context.startAttribute("", "id");
            try {
                context.text(context.onID(this, ((java.lang.String) _Id)), "Id");
            } catch (java.lang.Exception e) {
                com.sun.identity.federation.jaxb.entityconfig.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
        }
        context.startAttribute("", "providerID");
        try {
            context.text(((java.lang.String) _ProviderID), "ProviderID");
        } catch (java.lang.Exception e) {
            com.sun.identity.federation.jaxb.entityconfig.impl.runtime.Util.handlePrintConversionException(this, e, context);
        }
        context.endAttribute();
        if (_ValidUntil!= null) {
            context.startAttribute("", "validUntil");
            try {
                context.text(((java.lang.String) _ValidUntil), "ValidUntil");
            } catch (java.lang.Exception e) {
                com.sun.identity.federation.jaxb.entityconfig.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
        }
        if (_AffiliationDescriptor == null) {
            while (idx9 != len9) {
                if (_IDPDescriptor.get(idx9) instanceof javax.xml.bind.Element) {
                    context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _IDPDescriptor.get(idx9 ++)), "IDPDescriptor");
                } else {
                    idx9 += 1;
                }
            }
            while (idx4 != len4) {
                if (_SPDescriptor.get(idx4) instanceof javax.xml.bind.Element) {
                    context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _SPDescriptor.get(idx4 ++)), "SPDescriptor");
                } else {
                    idx4 += 1;
                }
            }
        }
        if (_Extension!= null) {
            if (_Extension instanceof javax.xml.bind.Element) {
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Extension), "Extension");
            }
        }
        if (_Signature!= null) {
            if (_Signature instanceof javax.xml.bind.Element) {
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Signature), "Signature");
            }
        }
    }

    public void serializeURIs(com.sun.identity.federation.jaxb.entityconfig.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        int idx4 = 0;
        final int len4 = ((_SPDescriptor == null)? 0 :_SPDescriptor.size());
        int idx9 = 0;
        final int len9 = ((_IDPDescriptor == null)? 0 :_IDPDescriptor.size());
        if (_AffiliationDescriptor == null) {
            while (idx9 != len9) {
                if (_IDPDescriptor.get(idx9) instanceof javax.xml.bind.Element) {
                    context.childAsURIs(((com.sun.xml.bind.JAXBObject) _IDPDescriptor.get(idx9 ++)), "IDPDescriptor");
                } else {
                    idx9 += 1;
                }
            }
            while (idx4 != len4) {
                if (_SPDescriptor.get(idx4) instanceof javax.xml.bind.Element) {
                    context.childAsURIs(((com.sun.xml.bind.JAXBObject) _SPDescriptor.get(idx4 ++)), "SPDescriptor");
                } else {
                    idx4 += 1;
                }
            }
        }
        if (_Extension!= null) {
            if (_Extension instanceof javax.xml.bind.Element) {
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Extension), "Extension");
            }
        }
        if (_Signature!= null) {
            if (_Signature instanceof javax.xml.bind.Element) {
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Signature), "Signature");
            }
        }
    }

    public java.lang.String ____jaxb____getId() {
        return ((java.lang.String) _Id);
    }

    public java.lang.Class getPrimaryInterface() {
        return (com.sun.identity.liberty.ws.meta.jaxb.EntityDescriptorType.class);
    }

    public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
        if (schemaFragment == null) {
            schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.su"
+"n.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gra"
+"mmar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expressi"
+"on\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0002L\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000b"
+"expandedExpq\u0000~\u0000\u0002xpppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000pp"
+"sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsr\u0000\u001dcom.sun.msv.grammar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000"
+"xq\u0000~\u0000\u0001ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\rppsr\u0000 com.sun.msv.grammar.OneOrMoreExp"
+"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001ccom.sun.msv.grammar.UnaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0003exp"
+"q\u0000~\u0000\u0002xq\u0000~\u0000\u0003sr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000psq\u0000~\u0000"
+"\rq\u0000~\u0000\u0015psr\u0000\'com.sun.msv.grammar.trex.ElementPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000"
+"\u0001L\u0000\tnameClasst\u0000\u001fLcom/sun/msv/grammar/NameClass;xr\u0000\u001ecom.sun.m"
+"sv.grammar.ElementExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAttribute"
+"sL\u0000\fcontentModelq\u0000~\u0000\u0002xq\u0000~\u0000\u0003q\u0000~\u0000\u0015p\u0000sq\u0000~\u0000\rppsq\u0000~\u0000\u0011q\u0000~\u0000\u0015psr\u0000 co"
+"m.sun.msv.grammar.AttributeExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnameC"
+"lassq\u0000~\u0000\u0018xq\u0000~\u0000\u0003q\u0000~\u0000\u0015psr\u00002com.sun.msv.grammar.Expression$AnyS"
+"tringExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003sq\u0000~\u0000\u0014\u0001q\u0000~\u0000 sr\u0000 com.sun.msv."
+"grammar.AnyNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.sun.msv.grammar.NameC"
+"lass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.sun.msv.grammar.Expression$EpsilonE"
+"xpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003q\u0000~\u0000!q\u0000~\u0000&sr\u0000#com.sun.msv.grammar."
+"SimpleNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNamet\u0000\u0012Ljava/lang/String;L"
+"\u0000\fnamespaceURIq\u0000~\u0000(xq\u0000~\u0000#t\u0000:com.sun.identity.liberty.ws.meta"
+".jaxb.IDPDescriptorElementt\u0000+http://java.sun.com/jaxb/xjc/du"
+"mmy-elementssq\u0000~\u0000\u0017q\u0000~\u0000\u0015p\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0017pp\u0000sq\u0000~\u0000\rppsq\u0000~\u0000\u0011q\u0000~\u0000"
+"\u0015psq\u0000~\u0000\u001dq\u0000~\u0000\u0015pq\u0000~\u0000 q\u0000~\u0000$q\u0000~\u0000&sq\u0000~\u0000\'t\u00007com.sun.identity.liber"
+"ty.ws.meta.jaxb.IDPDescriptorTypeq\u0000~\u0000+sq\u0000~\u0000\rppsq\u0000~\u0000\u001dq\u0000~\u0000\u0015psr"
+"\u0000\u001bcom.sun.msv.grammar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/relaxng"
+"/datatype/Datatype;L\u0000\u0006exceptq\u0000~\u0000\u0002L\u0000\u0004namet\u0000\u001dLcom/sun/msv/util"
+"/StringPair;xq\u0000~\u0000\u0003q\u0000~\u0000\u0015psr\u0000\"com.sun.msv.datatype.xsd.QnameTy"
+"pe\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000*com.sun.msv.datatype.xsd.BuiltinAtomicType\u0000"
+"\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.datatype.xsd.ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002"
+"\u0000\u0000xr\u0000\'com.sun.msv.datatype.xsd.XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fn"
+"amespaceUriq\u0000~\u0000(L\u0000\btypeNameq\u0000~\u0000(L\u0000\nwhiteSpacet\u0000.Lcom/sun/msv"
+"/datatype/xsd/WhiteSpaceProcessor;xpt\u0000 http://www.w3.org/200"
+"1/XMLSchemat\u0000\u0005QNamesr\u00005com.sun.msv.datatype.xsd.WhiteSpacePr"
+"ocessor$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun.msv.datatype.xsd.Whit"
+"eSpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.sun.msv.grammar.Expressi"
+"on$NullSetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003q\u0000~\u0000\u0015psr\u0000\u001bcom.sun.msv.u"
+"til.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000(L\u0000\fnamespaceURIq\u0000~"
+"\u0000(xpq\u0000~\u0000Aq\u0000~\u0000@sq\u0000~\u0000\'t\u0000\u0004typet\u0000)http://www.w3.org/2001/XMLSche"
+"ma-instanceq\u0000~\u0000&sq\u0000~\u0000\'t\u0000\rIDPDescriptort\u0000\u001curn:liberty:metadat"
+"a:2003-08q\u0000~\u0000&sq\u0000~\u0000\rppsq\u0000~\u0000\u0011q\u0000~\u0000\u0015psq\u0000~\u0000\rq\u0000~\u0000\u0015psq\u0000~\u0000\u0017q\u0000~\u0000\u0015p\u0000s"
+"q\u0000~\u0000\rppsq\u0000~\u0000\u0011q\u0000~\u0000\u0015psq\u0000~\u0000\u001dq\u0000~\u0000\u0015pq\u0000~\u0000 q\u0000~\u0000$q\u0000~\u0000&sq\u0000~\u0000\'t\u00009com.s"
+"un.identity.liberty.ws.meta.jaxb.SPDescriptorElementq\u0000~\u0000+sq\u0000"
+"~\u0000\u0017q\u0000~\u0000\u0015p\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0017pp\u0000sq\u0000~\u0000\rppsq\u0000~\u0000\u0011q\u0000~\u0000\u0015psq\u0000~\u0000\u001dq\u0000~\u0000\u0015pq"
+"\u0000~\u0000 q\u0000~\u0000$q\u0000~\u0000&sq\u0000~\u0000\'t\u00006com.sun.identity.liberty.ws.meta.jaxb"
+".SPDescriptorTypeq\u0000~\u0000+sq\u0000~\u0000\rppsq\u0000~\u0000\u001dq\u0000~\u0000\u0015pq\u0000~\u00009q\u0000~\u0000Iq\u0000~\u0000&sq\u0000"
+"~\u0000\'t\u0000\fSPDescriptorq\u0000~\u0000Nq\u0000~\u0000&sq\u0000~\u0000\u0017pp\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0017pp\u0000sq\u0000~\u0000\r"
+"ppsq\u0000~\u0000\u0011q\u0000~\u0000\u0015psq\u0000~\u0000\u001dq\u0000~\u0000\u0015pq\u0000~\u0000 q\u0000~\u0000$q\u0000~\u0000&sq\u0000~\u0000\'t\u0000?com.sun.id"
+"entity.liberty.ws.meta.jaxb.AffiliationDescriptorTypeq\u0000~\u0000+sq"
+"\u0000~\u0000\rppsq\u0000~\u0000\u001dq\u0000~\u0000\u0015pq\u0000~\u00009q\u0000~\u0000Iq\u0000~\u0000&sq\u0000~\u0000\'t\u0000\u0015AffiliationDescrip"
+"torq\u0000~\u0000Nsq\u0000~\u0000\rppsq\u0000~\u0000\u0017q\u0000~\u0000\u0015p\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0017pp\u0000sq\u0000~\u0000\rppsq\u0000~\u0000\u0011"
+"q\u0000~\u0000\u0015psq\u0000~\u0000\u001dq\u0000~\u0000\u0015pq\u0000~\u0000 q\u0000~\u0000$q\u0000~\u0000&sq\u0000~\u0000\'t\u00001com.sun.identity.l"
+"iberty.ws.meta.jaxb.ContactTypeq\u0000~\u0000+sq\u0000~\u0000\rppsq\u0000~\u0000\u001dq\u0000~\u0000\u0015pq\u0000~\u0000"
+"9q\u0000~\u0000Iq\u0000~\u0000&sq\u0000~\u0000\'t\u0000\rContactPersonq\u0000~\u0000Nq\u0000~\u0000&sq\u0000~\u0000\rppsq\u0000~\u0000\u0017q\u0000~"
+"\u0000\u0015p\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0017pp\u0000sq\u0000~\u0000\rppsq\u0000~\u0000\u0011q\u0000~\u0000\u0015psq\u0000~\u0000\u001dq\u0000~\u0000\u0015pq\u0000~\u0000 q\u0000"
+"~\u0000$q\u0000~\u0000&sq\u0000~\u0000\'t\u00006com.sun.identity.liberty.ws.meta.jaxb.Organ"
+"izationTypeq\u0000~\u0000+sq\u0000~\u0000\rppsq\u0000~\u0000\u001dq\u0000~\u0000\u0015pq\u0000~\u00009q\u0000~\u0000Iq\u0000~\u0000&sq\u0000~\u0000\'t\u0000\f"
+"Organizationq\u0000~\u0000Nq\u0000~\u0000&sq\u0000~\u0000\rppsq\u0000~\u0000\rq\u0000~\u0000\u0015psq\u0000~\u0000\u0017q\u0000~\u0000\u0015p\u0000sq\u0000~\u0000"
+"\rppsq\u0000~\u0000\u0011q\u0000~\u0000\u0015psq\u0000~\u0000\u001dq\u0000~\u0000\u0015pq\u0000~\u0000 q\u0000~\u0000$q\u0000~\u0000&sq\u0000~\u0000\'t\u00006com.sun.i"
+"dentity.liberty.ws.meta.jaxb.ExtensionElementq\u0000~\u0000+sq\u0000~\u0000\u0017q\u0000~\u0000"
+"\u0015p\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0017pp\u0000sq\u0000~\u0000\rppsq\u0000~\u0000\u0011q\u0000~\u0000\u0015psq\u0000~\u0000\u001dq\u0000~\u0000\u0015pq\u0000~\u0000 q\u0000~"
+"\u0000$q\u0000~\u0000&sq\u0000~\u0000\'t\u00003com.sun.identity.liberty.ws.meta.jaxb.Extens"
+"ionTypeq\u0000~\u0000+sq\u0000~\u0000\rppsq\u0000~\u0000\u001dq\u0000~\u0000\u0015pq\u0000~\u00009q\u0000~\u0000Iq\u0000~\u0000&sq\u0000~\u0000\'t\u0000\tExte"
+"nsionq\u0000~\u0000Nq\u0000~\u0000&sq\u0000~\u0000\rppsq\u0000~\u0000\rq\u0000~\u0000\u0015psq\u0000~\u0000\u0017q\u0000~\u0000\u0015p\u0000sq\u0000~\u0000\rppsq\u0000~"
+"\u0000\u0011q\u0000~\u0000\u0015psq\u0000~\u0000\u001dq\u0000~\u0000\u0015pq\u0000~\u0000 q\u0000~\u0000$q\u0000~\u0000&sq\u0000~\u0000\'t\u0000?com.sun.identity"
+".liberty.ws.common.jaxb.xmlsig.SignatureElementq\u0000~\u0000+sq\u0000~\u0000\u0017q\u0000"
+"~\u0000\u0015p\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0017pp\u0000sq\u0000~\u0000\rppsq\u0000~\u0000\u0011q\u0000~\u0000\u0015psq\u0000~\u0000\u001dq\u0000~\u0000\u0015pq\u0000~\u0000 q"
+"\u0000~\u0000$q\u0000~\u0000&sq\u0000~\u0000\'t\u0000<com.sun.identity.liberty.ws.common.jaxb.xm"
+"lsig.SignatureTypeq\u0000~\u0000+sq\u0000~\u0000\rppsq\u0000~\u0000\u001dq\u0000~\u0000\u0015pq\u0000~\u00009q\u0000~\u0000Iq\u0000~\u0000&sq"
+"\u0000~\u0000\'t\u0000\tSignaturet\u0000\"http://www.w3.org/2000/09/xmldsig#q\u0000~\u0000&sq"
+"\u0000~\u0000\rppsq\u0000~\u0000\u001dq\u0000~\u0000\u0015psq\u0000~\u00006ppsr\u0000%com.sun.msv.datatype.xsd.Simpl"
+"eURType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000;q\u0000~\u0000@t\u0000\ranySimpleTypesr\u00005com.sun.msv"
+".datatype.xsd.WhiteSpaceProcessor$Preserve\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000Cq"
+"\u0000~\u0000Fsq\u0000~\u0000Gq\u0000~\u0000\u00b8q\u0000~\u0000@sq\u0000~\u0000\'t\u0000\rcacheDurationt\u0000\u0000q\u0000~\u0000&sq\u0000~\u0000\rppsq"
+"\u0000~\u0000\u001dq\u0000~\u0000\u0015psq\u0000~\u00006ppsr\u0000\u001fcom.sun.msv.datatype.xsd.IDType\u0000\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0001\u0002\u0000\u0000xr\u0000#com.sun.msv.datatype.xsd.NcnameType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\"co"
+"m.sun.msv.datatype.xsd.TokenType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000#com.sun.msv.d"
+"atatype.xsd.StringType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001Z\u0000\risAlwaysValidxq\u0000~\u0000;q\u0000~\u0000@"
+"t\u0000\u0002IDq\u0000~\u0000D\u0000q\u0000~\u0000Fsq\u0000~\u0000Gq\u0000~\u0000\u00c7q\u0000~\u0000@sq\u0000~\u0000\'t\u0000\u0002idq\u0000~\u0000\u00beq\u0000~\u0000&sq\u0000~\u0000\u001dp"
+"psq\u0000~\u00006ppsr\u0000\'com.sun.msv.datatype.xsd.MaxLengthFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001"
+"\u0002\u0000\u0001I\u0000\tmaxLengthxr\u00009com.sun.msv.datatype.xsd.DataTypeWithValu"
+"eConstraintFacet\"\u00a7Ro\u00ca\u00c7\u008aT\u0002\u0000\u0000xr\u0000*com.sun.msv.datatype.xsd.Data"
+"TypeWithFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0005Z\u0000\fisFacetFixedZ\u0000\u0012needValueCheckFlag"
+"L\u0000\bbaseTypet\u0000)Lcom/sun/msv/datatype/xsd/XSDatatypeImpl;L\u0000\fco"
+"ncreteTypet\u0000\'Lcom/sun/msv/datatype/xsd/ConcreteType;L\u0000\tfacet"
+"Nameq\u0000~\u0000(xq\u0000~\u0000=q\u0000~\u0000Nt\u0000\fentityIDTypeq\u0000~\u0000D\u0000\u0000sr\u0000#com.sun.msv.da"
+"tatype.xsd.AnyURIType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000;q\u0000~\u0000@t\u0000\u0006anyURIq\u0000~\u0000Dq\u0000~"
+"\u0000\u00d5t\u0000\tmaxLength\u0000\u0000\u0004\u0000q\u0000~\u0000Fsq\u0000~\u0000Gq\u0000~\u0000\u00d3q\u0000~\u0000Nsq\u0000~\u0000\'t\u0000\nproviderIDq\u0000"
+"~\u0000\u00besq\u0000~\u0000\rppsq\u0000~\u0000\u001dq\u0000~\u0000\u0015pq\u0000~\u0000\u00b5sq\u0000~\u0000\'t\u0000\nvalidUntilq\u0000~\u0000\u00beq\u0000~\u0000&sr\u0000"
+"\"com.sun.msv.grammar.ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/"
+"Lcom/sun/msv/grammar/ExpressionPool$ClosedHash;xpsr\u0000-com.sun"
+".msv.grammar.ExpressionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0003\u0000\u0003I\u0000\u0005countB\u0000\r"
+"streamVersionL\u0000\u0006parentt\u0000$Lcom/sun/msv/grammar/ExpressionPool"
+";xp\u0000\u0000\u0000=\u0001pq\u0000~\u0000\u001cq\u0000~\u0000\u000fq\u0000~\u0000}q\u0000~\u0000pq\u0000~\u0000\u000eq\u0000~\u0000\u0005q\u0000~\u0000\u00bfq\u0000~\u0000\u009eq\u0000~\u0000\u008aq\u0000~\u0000Oq"
+"\u0000~\u0000\u00a9q\u0000~\u0000\u00a1q\u0000~\u0000\u0095q\u0000~\u0000\u008dq\u0000~\u0000\u0081q\u0000~\u0000tq\u0000~\u0000\fq\u0000~\u0000gq\u0000~\u0000[q\u0000~\u0000Sq\u0000~\u0000/q\u0000~\u0000\u001bq"
+"\u0000~\u0000\u0010q\u0000~\u0000\u0016q\u0000~\u0000\u009fq\u0000~\u0000\u008bq\u0000~\u0000Qq\u0000~\u0000\u00aeq\u0000~\u0000\u009aq\u0000~\u0000\u0086q\u0000~\u0000yq\u0000~\u0000lq\u0000~\u0000`q\u0000~\u00004q"
+"\u0000~\u0000\u0006q\u0000~\u0000\u00dbq\u0000~\u0000\bq\u0000~\u0000\tq\u0000~\u0000\u00a7q\u0000~\u0000\u0093q\u0000~\u0000\u007fq\u0000~\u0000rq\u0000~\u0000eq\u0000~\u0000Yq\u0000~\u0000-q\u0000~\u0000Pq"
+"\u0000~\u0000\u0013q\u0000~\u0000\u00b3q\u0000~\u0000\u0007q\u0000~\u0000\nq\u0000~\u0000\u00aaq\u0000~\u0000\u00a2q\u0000~\u0000\u000bq\u0000~\u0000\u0096q\u0000~\u0000\u008eq\u0000~\u0000\u0082q\u0000~\u0000uq\u0000~\u0000hq"
+"\u0000~\u0000\\q\u0000~\u0000Tq\u0000~\u00000x"));
        }
        return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
    }

    public class Unmarshaller
        extends com.sun.identity.federation.jaxb.entityconfig.impl.runtime.AbstractUnmarshallingEventHandlerImpl
    {


        public Unmarshaller(com.sun.identity.federation.jaxb.entityconfig.impl.runtime.UnmarshallingContext context) {
            super(context, "---------------------------------");
        }

        protected Unmarshaller(com.sun.identity.federation.jaxb.entityconfig.impl.runtime.UnmarshallingContext context, int startState) {
            this(context);
            state = startState;
        }

        public java.lang.Object owner() {
            return com.sun.identity.liberty.ws.meta.jaxb.impl.EntityDescriptorTypeImpl.this;
        }

        public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  0 :
                        attIdx = context.getAttribute("", "cacheDuration");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 3;
                            eatText1(v);
                            continue outer;
                        }
                        state = 3;
                        continue outer;
                    case  31 :
                        attIdx = context.getAttribute("", "cacheDuration");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        attIdx = context.getAttribute("", "id");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        attIdx = context.getAttribute("", "protocolSupportEnumeration");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        break;
                    case  3 :
                        attIdx = context.getAttribute("", "id");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 6;
                            eatText2(v);
                            continue outer;
                        }
                        state = 6;
                        continue outer;
                    case  28 :
                        attIdx = context.getAttribute("", "affiliationID");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        break;
                    case  24 :
                        revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                        return ;
                    case  22 :
                        attIdx = context.getAttribute("", "Id");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("SignedInfo" == ___local)&&("http://www.w3.org/2000/09/xmldsig#" == ___uri)) {
                            _Signature = ((com.sun.identity.liberty.ws.common.jaxb.xmlsig.impl.SignatureTypeImpl) spawnChildFromEnterElement((com.sun.identity.liberty.ws.common.jaxb.xmlsig.impl.SignatureTypeImpl.class), 23, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("SignedInfo" == ___local)&&("http://www.w3.org/2000/09/xmldsig#" == ___uri)) {
                            _Signature = ((com.sun.identity.liberty.ws.common.jaxb.xmlsig.impl.SignatureTypeImpl) spawnChildFromEnterElement((com.sun.identity.liberty.ws.common.jaxb.xmlsig.impl.SignatureTypeImpl.class), 23, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        break;
                    case  25 :
                        if (("SPDescriptor" == ___local)&&("urn:liberty:metadata:2003-08" == ___uri)) {
                            _getSPDescriptor().add(((com.sun.identity.liberty.ws.meta.jaxb.impl.SPDescriptorElementImpl) spawnChildFromEnterElement((com.sun.identity.liberty.ws.meta.jaxb.impl.SPDescriptorElementImpl.class), 25, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("SPDescriptor" == ___local)&&("urn:liberty:metadata:2003-08" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 26;
                            return ;
                        }
                        if (("ContactPerson" == ___local)&&("urn:liberty:metadata:2003-08" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 13;
                            return ;
                        }
                        state = 15;
                        continue outer;
                    case  18 :
                        if (("Extension" == ___local)&&("urn:liberty:metadata:2003-08" == ___uri)) {
                            _Extension = ((com.sun.identity.liberty.ws.meta.jaxb.impl.ExtensionElementImpl) spawnChildFromEnterElement((com.sun.identity.liberty.ws.meta.jaxb.impl.ExtensionElementImpl.class), 21, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("Extension" == ___local)&&("urn:liberty:metadata:2003-08" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 19;
                            return ;
                        }
                        state = 21;
                        continue outer;
                    case  19 :
                        if (!(("" == ___uri)||("urn:liberty:metadata:2003-08" == ___uri))) {
                            _Extension = ((com.sun.identity.liberty.ws.meta.jaxb.impl.ExtensionTypeImpl) spawnChildFromEnterElement((com.sun.identity.liberty.ws.meta.jaxb.impl.ExtensionTypeImpl.class), 20, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        break;
                    case  6 :
                        attIdx = context.getAttribute("", "providerID");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 9;
                            eatText3(v);
                            continue outer;
                        }
                        break;
                    case  26 :
                        attIdx = context.getAttribute("", "cacheDuration");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        attIdx = context.getAttribute("", "id");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        attIdx = context.getAttribute("", "protocolSupportEnumeration");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        break;
                    case  30 :
                        if (("IDPDescriptor" == ___local)&&("urn:liberty:metadata:2003-08" == ___uri)) {
                            _getIDPDescriptor().add(((com.sun.identity.liberty.ws.meta.jaxb.impl.IDPDescriptorElementImpl) spawnChildFromEnterElement((com.sun.identity.liberty.ws.meta.jaxb.impl.IDPDescriptorElementImpl.class), 30, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("IDPDescriptor" == ___local)&&("urn:liberty:metadata:2003-08" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 31;
                            return ;
                        }
                        if (("SPDescriptor" == ___local)&&("urn:liberty:metadata:2003-08" == ___uri)) {
                            _getSPDescriptor().add(((com.sun.identity.liberty.ws.meta.jaxb.impl.SPDescriptorElementImpl) spawnChildFromEnterElement((com.sun.identity.liberty.ws.meta.jaxb.impl.SPDescriptorElementImpl.class), 25, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("SPDescriptor" == ___local)&&("urn:liberty:metadata:2003-08" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 26;
                            return ;
                        }
                        state = 25;
                        continue outer;
                    case  21 :
                        if (("Signature" == ___local)&&("http://www.w3.org/2000/09/xmldsig#" == ___uri)) {
                            _Signature = ((com.sun.identity.liberty.ws.common.jaxb.xmlsig.impl.SignatureElementImpl) spawnChildFromEnterElement((com.sun.identity.liberty.ws.common.jaxb.xmlsig.impl.SignatureElementImpl.class), 24, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("Signature" == ___local)&&("http://www.w3.org/2000/09/xmldsig#" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 22;
                            return ;
                        }
                        state = 24;
                        continue outer;
                    case  9 :
                        attIdx = context.getAttribute("", "validUntil");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 12;
                            eatText4(v);
                            continue outer;
                        }
                        state = 12;
                        continue outer;
                    case  15 :
                        if (("Organization" == ___local)&&("urn:liberty:metadata:2003-08" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 16;
                            return ;
                        }
                        state = 18;
                        continue outer;
                    case  12 :
                        if (("IDPDescriptor" == ___local)&&("urn:liberty:metadata:2003-08" == ___uri)) {
                            _getIDPDescriptor().add(((com.sun.identity.liberty.ws.meta.jaxb.impl.IDPDescriptorElementImpl) spawnChildFromEnterElement((com.sun.identity.liberty.ws.meta.jaxb.impl.IDPDescriptorElementImpl.class), 30, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("IDPDescriptor" == ___local)&&("urn:liberty:metadata:2003-08" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 31;
                            return ;
                        }
                        if (("SPDescriptor" == ___local)&&("urn:liberty:metadata:2003-08" == ___uri)) {
                            _getSPDescriptor().add(((com.sun.identity.liberty.ws.meta.jaxb.impl.SPDescriptorElementImpl) spawnChildFromEnterElement((com.sun.identity.liberty.ws.meta.jaxb.impl.SPDescriptorElementImpl.class), 25, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("SPDescriptor" == ___local)&&("urn:liberty:metadata:2003-08" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 26;
                            return ;
                        }
                        if (("AffiliationDescriptor" == ___local)&&("urn:liberty:metadata:2003-08" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 28;
                            return ;
                        }
                        if (("ContactPerson" == ___local)&&("urn:liberty:metadata:2003-08" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 13;
                            return ;
                        }
                        if (("Organization" == ___local)&&("urn:liberty:metadata:2003-08" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 16;
                            return ;
                        }
                        if (("Extension" == ___local)&&("urn:liberty:metadata:2003-08" == ___uri)) {
                            _Extension = ((com.sun.identity.liberty.ws.meta.jaxb.impl.ExtensionElementImpl) spawnChildFromEnterElement((com.sun.identity.liberty.ws.meta.jaxb.impl.ExtensionElementImpl.class), 21, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("Extension" == ___local)&&("urn:liberty:metadata:2003-08" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 19;
                            return ;
                        }
                        if (("Signature" == ___local)&&("http://www.w3.org/2000/09/xmldsig#" == ___uri)) {
                            _Signature = ((com.sun.identity.liberty.ws.common.jaxb.xmlsig.impl.SignatureElementImpl) spawnChildFromEnterElement((com.sun.identity.liberty.ws.common.jaxb.xmlsig.impl.SignatureElementImpl.class), 24, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("Signature" == ___local)&&("http://www.w3.org/2000/09/xmldsig#" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 22;
                            return ;
                        }
                        revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                        return ;
                    case  13 :
                        attIdx = context.getAttribute("", "contactType");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        break;
                    case  16 :
                        if (("OrganizationName" == ___local)&&("urn:liberty:metadata:2003-08" == ___uri)) {
                            _Organization = ((com.sun.identity.liberty.ws.meta.jaxb.impl.OrganizationTypeImpl) spawnChildFromEnterElement((com.sun.identity.liberty.ws.meta.jaxb.impl.OrganizationTypeImpl.class), 17, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        break;
                }
                super.enterElement(___uri, ___local, ___qname, __atts);
                break;
            }
        }

        private void eatText1(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _CacheDuration = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText2(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Id = context.addToIdTable(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText3(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _ProviderID = com.sun.xml.bind.WhiteSpaceProcessor.collapse(value);
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText4(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _ValidUntil = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  0 :
                        attIdx = context.getAttribute("", "cacheDuration");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 3;
                            eatText1(v);
                            continue outer;
                        }
                        state = 3;
                        continue outer;
                    case  31 :
                        attIdx = context.getAttribute("", "cacheDuration");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "id");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "protocolSupportEnumeration");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                    case  17 :
                        if (("Organization" == ___local)&&("urn:liberty:metadata:2003-08" == ___uri)) {
                            context.popAttributes();
                            state = 18;
                            return ;
                        }
                        break;
                    case  3 :
                        attIdx = context.getAttribute("", "id");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 6;
                            eatText2(v);
                            continue outer;
                        }
                        state = 6;
                        continue outer;
                    case  28 :
                        attIdx = context.getAttribute("", "affiliationID");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                    case  24 :
                        revertToParentFromLeaveElement(___uri, ___local, ___qname);
                        return ;
                    case  22 :
                        attIdx = context.getAttribute("", "Id");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                    case  25 :
                        state = 15;
                        continue outer;
                    case  18 :
                        state = 21;
                        continue outer;
                    case  27 :
                        if (("SPDescriptor" == ___local)&&("urn:liberty:metadata:2003-08" == ___uri)) {
                            context.popAttributes();
                            state = 25;
                            return ;
                        }
                        break;
                    case  6 :
                        attIdx = context.getAttribute("", "providerID");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 9;
                            eatText3(v);
                            continue outer;
                        }
                        break;
                    case  26 :
                        attIdx = context.getAttribute("", "cacheDuration");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "id");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "protocolSupportEnumeration");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                    case  30 :
                        state = 25;
                        continue outer;
                    case  21 :
                        state = 24;
                        continue outer;
                    case  9 :
                        attIdx = context.getAttribute("", "validUntil");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 12;
                            eatText4(v);
                            continue outer;
                        }
                        state = 12;
                        continue outer;
                    case  23 :
                        if (("Signature" == ___local)&&("http://www.w3.org/2000/09/xmldsig#" == ___uri)) {
                            context.popAttributes();
                            state = 24;
                            return ;
                        }
                        break;
                    case  32 :
                        if (("IDPDescriptor" == ___local)&&("urn:liberty:metadata:2003-08" == ___uri)) {
                            context.popAttributes();
                            state = 30;
                            return ;
                        }
                        break;
                    case  20 :
                        if (("Extension" == ___local)&&("urn:liberty:metadata:2003-08" == ___uri)) {
                            context.popAttributes();
                            state = 21;
                            return ;
                        }
                        break;
                    case  15 :
                        state = 18;
                        continue outer;
                    case  29 :
                        if (("AffiliationDescriptor" == ___local)&&("urn:liberty:metadata:2003-08" == ___uri)) {
                            context.popAttributes();
                            state = 25;
                            return ;
                        }
                        break;
                    case  12 :
                        revertToParentFromLeaveElement(___uri, ___local, ___qname);
                        return ;
                    case  13 :
                        attIdx = context.getAttribute("", "contactType");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                    case  14 :
                        if (("ContactPerson" == ___local)&&("urn:liberty:metadata:2003-08" == ___uri)) {
                            context.popAttributes();
                            state = 15;
                            return ;
                        }
                        break;
                }
                super.leaveElement(___uri, ___local, ___qname);
                break;
            }
        }

        public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  0 :
                        if (("cacheDuration" == ___local)&&("" == ___uri)) {
                            state = 1;
                            return ;
                        }
                        state = 3;
                        continue outer;
                    case  31 :
                        if (("cacheDuration" == ___local)&&("" == ___uri)) {
                            _getIDPDescriptor().add(((com.sun.identity.liberty.ws.meta.jaxb.impl.IDPDescriptorTypeImpl) spawnChildFromEnterAttribute((com.sun.identity.liberty.ws.meta.jaxb.impl.IDPDescriptorTypeImpl.class), 32, ___uri, ___local, ___qname)));
                            return ;
                        }
                        if (("id" == ___local)&&("" == ___uri)) {
                            _getIDPDescriptor().add(((com.sun.identity.liberty.ws.meta.jaxb.impl.IDPDescriptorTypeImpl) spawnChildFromEnterAttribute((com.sun.identity.liberty.ws.meta.jaxb.impl.IDPDescriptorTypeImpl.class), 32, ___uri, ___local, ___qname)));
                            return ;
                        }
                        if (("protocolSupportEnumeration" == ___local)&&("" == ___uri)) {
                            _getIDPDescriptor().add(((com.sun.identity.liberty.ws.meta.jaxb.impl.IDPDescriptorTypeImpl) spawnChildFromEnterAttribute((com.sun.identity.liberty.ws.meta.jaxb.impl.IDPDescriptorTypeImpl.class), 32, ___uri, ___local, ___qname)));
                            return ;
                        }
                        break;
                    case  3 :
                        if (("id" == ___local)&&("" == ___uri)) {
                            state = 4;
                            return ;
                        }
                        state = 6;
                        continue outer;
                    case  28 :
                        if (("affiliationID" == ___local)&&("" == ___uri)) {
                            _AffiliationDescriptor = ((com.sun.identity.liberty.ws.meta.jaxb.impl.AffiliationDescriptorTypeImpl) spawnChildFromEnterAttribute((com.sun.identity.liberty.ws.meta.jaxb.impl.AffiliationDescriptorTypeImpl.class), 29, ___uri, ___local, ___qname));
                            return ;
                        }
                        break;
                    case  24 :
                        revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                        return ;
                    case  22 :
                        if (("Id" == ___local)&&("" == ___uri)) {
                            _Signature = ((com.sun.identity.liberty.ws.common.jaxb.xmlsig.impl.SignatureTypeImpl) spawnChildFromEnterAttribute((com.sun.identity.liberty.ws.common.jaxb.xmlsig.impl.SignatureTypeImpl.class), 23, ___uri, ___local, ___qname));
                            return ;
                        }
                        break;
                    case  25 :
                        state = 15;
                        continue outer;
                    case  18 :
                        state = 21;
                        continue outer;
                    case  6 :
                        if (("providerID" == ___local)&&("" == ___uri)) {
                            state = 7;
                            return ;
                        }
                        break;
                    case  26 :
                        if (("cacheDuration" == ___local)&&("" == ___uri)) {
                            _getSPDescriptor().add(((com.sun.identity.liberty.ws.meta.jaxb.impl.SPDescriptorTypeImpl) spawnChildFromEnterAttribute((com.sun.identity.liberty.ws.meta.jaxb.impl.SPDescriptorTypeImpl.class), 27, ___uri, ___local, ___qname)));
                            return ;
                        }
                        if (("id" == ___local)&&("" == ___uri)) {
                            _getSPDescriptor().add(((com.sun.identity.liberty.ws.meta.jaxb.impl.SPDescriptorTypeImpl) spawnChildFromEnterAttribute((com.sun.identity.liberty.ws.meta.jaxb.impl.SPDescriptorTypeImpl.class), 27, ___uri, ___local, ___qname)));
                            return ;
                        }
                        if (("protocolSupportEnumeration" == ___local)&&("" == ___uri)) {
                            _getSPDescriptor().add(((com.sun.identity.liberty.ws.meta.jaxb.impl.SPDescriptorTypeImpl) spawnChildFromEnterAttribute((com.sun.identity.liberty.ws.meta.jaxb.impl.SPDescriptorTypeImpl.class), 27, ___uri, ___local, ___qname)));
                            return ;
                        }
                        break;
                    case  30 :
                        state = 25;
                        continue outer;
                    case  21 :
                        state = 24;
                        continue outer;
                    case  9 :
                        if (("validUntil" == ___local)&&("" == ___uri)) {
                            state = 10;
                            return ;
                        }
                        state = 12;
                        continue outer;
                    case  15 :
                        state = 18;
                        continue outer;
                    case  12 :
                        revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                        return ;
                    case  13 :
                        if (("contactType" == ___local)&&("" == ___uri)) {
                            _ContactPerson = ((com.sun.identity.liberty.ws.meta.jaxb.impl.ContactTypeImpl) spawnChildFromEnterAttribute((com.sun.identity.liberty.ws.meta.jaxb.impl.ContactTypeImpl.class), 14, ___uri, ___local, ___qname));
                            return ;
                        }
                        break;
                }
                super.enterAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  0 :
                        attIdx = context.getAttribute("", "cacheDuration");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 3;
                            eatText1(v);
                            continue outer;
                        }
                        state = 3;
                        continue outer;
                    case  31 :
                        attIdx = context.getAttribute("", "cacheDuration");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "id");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "protocolSupportEnumeration");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                    case  3 :
                        attIdx = context.getAttribute("", "id");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 6;
                            eatText2(v);
                            continue outer;
                        }
                        state = 6;
                        continue outer;
                    case  28 :
                        attIdx = context.getAttribute("", "affiliationID");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                    case  2 :
                        if (("cacheDuration" == ___local)&&("" == ___uri)) {
                            state = 3;
                            return ;
                        }
                        break;
                    case  24 :
                        revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                        return ;
                    case  22 :
                        attIdx = context.getAttribute("", "Id");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                    case  25 :
                        state = 15;
                        continue outer;
                    case  18 :
                        state = 21;
                        continue outer;
                    case  8 :
                        if (("providerID" == ___local)&&("" == ___uri)) {
                            state = 9;
                            return ;
                        }
                        break;
                    case  6 :
                        attIdx = context.getAttribute("", "providerID");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 9;
                            eatText3(v);
                            continue outer;
                        }
                        break;
                    case  26 :
                        attIdx = context.getAttribute("", "cacheDuration");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "id");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "protocolSupportEnumeration");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                    case  11 :
                        if (("validUntil" == ___local)&&("" == ___uri)) {
                            state = 12;
                            return ;
                        }
                        break;
                    case  5 :
                        if (("id" == ___local)&&("" == ___uri)) {
                            state = 6;
                            return ;
                        }
                        break;
                    case  30 :
                        state = 25;
                        continue outer;
                    case  21 :
                        state = 24;
                        continue outer;
                    case  9 :
                        attIdx = context.getAttribute("", "validUntil");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 12;
                            eatText4(v);
                            continue outer;
                        }
                        state = 12;
                        continue outer;
                    case  15 :
                        state = 18;
                        continue outer;
                    case  12 :
                        revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                        return ;
                    case  13 :
                        attIdx = context.getAttribute("", "contactType");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                }
                super.leaveAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void handleText(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                try {
                    switch (state) {
                        case  0 :
                            attIdx = context.getAttribute("", "cacheDuration");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 3;
                                eatText1(v);
                                continue outer;
                            }
                            state = 3;
                            continue outer;
                        case  31 :
                            attIdx = context.getAttribute("", "cacheDuration");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            attIdx = context.getAttribute("", "id");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            attIdx = context.getAttribute("", "protocolSupportEnumeration");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            break;
                        case  3 :
                            attIdx = context.getAttribute("", "id");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 6;
                                eatText2(v);
                                continue outer;
                            }
                            state = 6;
                            continue outer;
                        case  10 :
                            state = 11;
                            eatText4(value);
                            return ;
                        case  28 :
                            attIdx = context.getAttribute("", "affiliationID");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            break;
                        case  24 :
                            revertToParentFromText(value);
                            return ;
                        case  22 :
                            attIdx = context.getAttribute("", "Id");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            break;
                        case  7 :
                            state = 8;
                            eatText3(value);
                            return ;
                        case  25 :
                            state = 15;
                            continue outer;
                        case  18 :
                            state = 21;
                            continue outer;
                        case  4 :
                            state = 5;
                            eatText2(value);
                            return ;
                        case  6 :
                            attIdx = context.getAttribute("", "providerID");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 9;
                                eatText3(v);
                                continue outer;
                            }
                            break;
                        case  26 :
                            attIdx = context.getAttribute("", "cacheDuration");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            attIdx = context.getAttribute("", "id");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            attIdx = context.getAttribute("", "protocolSupportEnumeration");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            break;
                        case  30 :
                            state = 25;
                            continue outer;
                        case  21 :
                            state = 24;
                            continue outer;
                        case  9 :
                            attIdx = context.getAttribute("", "validUntil");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 12;
                                eatText4(v);
                                continue outer;
                            }
                            state = 12;
                            continue outer;
                        case  15 :
                            state = 18;
                            continue outer;
                        case  1 :
                            state = 2;
                            eatText1(value);
                            return ;
                        case  12 :
                            revertToParentFromText(value);
                            return ;
                        case  13 :
                            attIdx = context.getAttribute("", "contactType");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            break;
                    }
                } catch (java.lang.RuntimeException e) {
                    handleUnexpectedTextException(value, e);
                }
                break;
            }
        }

    }

}
