//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v1.0.6-b27-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2012.06.11 at 10:33:54 AM PDT 
//


package com.sun.identity.liberty.ws.authnsvc.jaxb.impl;

public class SASLResponseTypeImpl implements com.sun.identity.liberty.ws.authnsvc.jaxb.SASLResponseType, com.sun.xml.bind.JAXBObject, com.sun.identity.federation.jaxb.entityconfig.impl.runtime.UnmarshallableObject, com.sun.identity.federation.jaxb.entityconfig.impl.runtime.XMLSerializable, com.sun.xml.bind.marshaller.IdentifiableObject, com.sun.identity.federation.jaxb.entityconfig.impl.runtime.ValidatableObject
{

    protected com.sun.identity.liberty.ws.authnsvc.jaxb.SASLResponseType.DataType _Data;
    protected com.sun.identity.liberty.ws.authnsvc.jaxb.StatusType _Status;
    protected com.sun.identity.liberty.ws.authnsvc.jaxb.PasswordTransformsType _PasswordTransforms;
    protected com.sun.xml.bind.util.ListImpl _ResourceOffering;
    protected java.lang.String _Id;
    protected java.lang.String _ServerMechanism;
    protected com.sun.identity.liberty.ws.authnsvc.jaxb.SASLResponseType.CredentialsType _Credentials;
    public final static java.lang.Class version = (com.sun.identity.liberty.ws.authnsvc.jaxb.impl.JAXBVersion.class);
    private static com.sun.msv.grammar.Grammar schemaFragment;

    private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
        return (com.sun.identity.liberty.ws.authnsvc.jaxb.SASLResponseType.class);
    }

    public com.sun.identity.liberty.ws.authnsvc.jaxb.SASLResponseType.DataType getData() {
        return _Data;
    }

    public void setData(com.sun.identity.liberty.ws.authnsvc.jaxb.SASLResponseType.DataType value) {
        _Data = value;
    }

    public com.sun.identity.liberty.ws.authnsvc.jaxb.StatusType getStatus() {
        return _Status;
    }

    public void setStatus(com.sun.identity.liberty.ws.authnsvc.jaxb.StatusType value) {
        _Status = value;
    }

    public com.sun.identity.liberty.ws.authnsvc.jaxb.PasswordTransformsType getPasswordTransforms() {
        return _PasswordTransforms;
    }

    public void setPasswordTransforms(com.sun.identity.liberty.ws.authnsvc.jaxb.PasswordTransformsType value) {
        _PasswordTransforms = value;
    }

    protected com.sun.xml.bind.util.ListImpl _getResourceOffering() {
        if (_ResourceOffering == null) {
            _ResourceOffering = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
        }
        return _ResourceOffering;
    }

    public java.util.List getResourceOffering() {
        return _getResourceOffering();
    }

    public java.lang.String getId() {
        return _Id;
    }

    public void setId(java.lang.String value) {
        _Id = value;
    }

    public java.lang.String getServerMechanism() {
        return _ServerMechanism;
    }

    public void setServerMechanism(java.lang.String value) {
        _ServerMechanism = value;
    }

    public com.sun.identity.liberty.ws.authnsvc.jaxb.SASLResponseType.CredentialsType getCredentials() {
        return _Credentials;
    }

    public void setCredentials(com.sun.identity.liberty.ws.authnsvc.jaxb.SASLResponseType.CredentialsType value) {
        _Credentials = value;
    }

    public com.sun.identity.federation.jaxb.entityconfig.impl.runtime.UnmarshallingEventHandler createUnmarshaller(com.sun.identity.federation.jaxb.entityconfig.impl.runtime.UnmarshallingContext context) {
        return new com.sun.identity.liberty.ws.authnsvc.jaxb.impl.SASLResponseTypeImpl.Unmarshaller(context);
    }

    public void serializeBody(com.sun.identity.federation.jaxb.entityconfig.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        int idx4 = 0;
        final int len4 = ((_ResourceOffering == null)? 0 :_ResourceOffering.size());
        if (_Status instanceof javax.xml.bind.Element) {
            context.childAsBody(((com.sun.xml.bind.JAXBObject) _Status), "Status");
        } else {
            context.startElement("urn:liberty:sa:2004-04", "Status");
            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Status), "Status");
            context.endNamespaceDecls();
            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Status), "Status");
            context.endAttributes();
            context.childAsBody(((com.sun.xml.bind.JAXBObject) _Status), "Status");
            context.endElement();
        }
        if (_PasswordTransforms!= null) {
            if (_PasswordTransforms instanceof javax.xml.bind.Element) {
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _PasswordTransforms), "PasswordTransforms");
            } else {
                context.startElement("urn:liberty:sa:2004-04", "PasswordTransforms");
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _PasswordTransforms), "PasswordTransforms");
                context.endNamespaceDecls();
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _PasswordTransforms), "PasswordTransforms");
                context.endAttributes();
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _PasswordTransforms), "PasswordTransforms");
                context.endElement();
            }
        }
        if (_Data!= null) {
            context.startElement("urn:liberty:sa:2004-04", "Data");
            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Data), "Data");
            context.endNamespaceDecls();
            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Data), "Data");
            context.endAttributes();
            context.childAsBody(((com.sun.xml.bind.JAXBObject) _Data), "Data");
            context.endElement();
        }
        while (idx4 != len4) {
            if (_ResourceOffering.get(idx4) instanceof javax.xml.bind.Element) {
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _ResourceOffering.get(idx4 ++)), "ResourceOffering");
            } else {
                context.startElement("urn:liberty:disco:2003-08", "ResourceOffering");
                int idx_6 = idx4;
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _ResourceOffering.get(idx_6 ++)), "ResourceOffering");
                context.endNamespaceDecls();
                int idx_7 = idx4;
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _ResourceOffering.get(idx_7 ++)), "ResourceOffering");
                context.endAttributes();
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _ResourceOffering.get(idx4 ++)), "ResourceOffering");
                context.endElement();
            }
        }
        if (_Credentials!= null) {
            context.startElement("urn:liberty:sa:2004-04", "Credentials");
            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Credentials), "Credentials");
            context.endNamespaceDecls();
            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Credentials), "Credentials");
            context.endAttributes();
            context.childAsBody(((com.sun.xml.bind.JAXBObject) _Credentials), "Credentials");
            context.endElement();
        }
    }

    public void serializeAttributes(com.sun.identity.federation.jaxb.entityconfig.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        int idx4 = 0;
        final int len4 = ((_ResourceOffering == null)? 0 :_ResourceOffering.size());
        if (_Id!= null) {
            context.startAttribute("", "id");
            try {
                context.text(context.onID(this, ((java.lang.String) _Id)), "Id");
            } catch (java.lang.Exception e) {
                com.sun.identity.federation.jaxb.entityconfig.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
        }
        if (_ServerMechanism!= null) {
            context.startAttribute("", "serverMechanism");
            try {
                context.text(((java.lang.String) _ServerMechanism), "ServerMechanism");
            } catch (java.lang.Exception e) {
                com.sun.identity.federation.jaxb.entityconfig.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
        }
        if (_Status instanceof javax.xml.bind.Element) {
            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Status), "Status");
        }
        if (_PasswordTransforms!= null) {
            if (_PasswordTransforms instanceof javax.xml.bind.Element) {
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _PasswordTransforms), "PasswordTransforms");
            }
        }
        while (idx4 != len4) {
            if (_ResourceOffering.get(idx4) instanceof javax.xml.bind.Element) {
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _ResourceOffering.get(idx4 ++)), "ResourceOffering");
            } else {
                idx4 += 1;
            }
        }
    }

    public void serializeURIs(com.sun.identity.federation.jaxb.entityconfig.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        int idx4 = 0;
        final int len4 = ((_ResourceOffering == null)? 0 :_ResourceOffering.size());
        if (_Status instanceof javax.xml.bind.Element) {
            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Status), "Status");
        }
        if (_PasswordTransforms!= null) {
            if (_PasswordTransforms instanceof javax.xml.bind.Element) {
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _PasswordTransforms), "PasswordTransforms");
            }
        }
        while (idx4 != len4) {
            if (_ResourceOffering.get(idx4) instanceof javax.xml.bind.Element) {
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _ResourceOffering.get(idx4 ++)), "ResourceOffering");
            } else {
                idx4 += 1;
            }
        }
    }

    public java.lang.String ____jaxb____getId() {
        return ((java.lang.String) _Id);
    }

    public java.lang.Class getPrimaryInterface() {
        return (com.sun.identity.liberty.ws.authnsvc.jaxb.SASLResponseType.class);
    }

    public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
        if (schemaFragment == null) {
            schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.su"
+"n.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gra"
+"mmar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expressi"
+"on\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0002L\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000b"
+"expandedExpq\u0000~\u0000\u0002xpppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000pp"
+"sr\u0000\u001dcom.sun.msv.grammar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0001ppsr\u0000\'com."
+"sun.msv.grammar.trex.ElementPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\tnameClasst\u0000"
+"\u001fLcom/sun/msv/grammar/NameClass;xr\u0000\u001ecom.sun.msv.grammar.Elem"
+"entExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAttributesL\u0000\fcontentMode"
+"lq\u0000~\u0000\u0002xq\u0000~\u0000\u0003pp\u0000sq\u0000~\u0000\u000bppsr\u0000 com.sun.msv.grammar.OneOrMoreExp\u0000"
+"\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001ccom.sun.msv.grammar.UnaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0003expq"
+"\u0000~\u0000\u0002xq\u0000~\u0000\u0003sr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000psr\u0000 co"
+"m.sun.msv.grammar.AttributeExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnameC"
+"lassq\u0000~\u0000\u000exq\u0000~\u0000\u0003q\u0000~\u0000\u0016psr\u00002com.sun.msv.grammar.Expression$AnyS"
+"tringExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003sq\u0000~\u0000\u0015\u0001q\u0000~\u0000\u001asr\u0000 com.sun.msv."
+"grammar.AnyNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.sun.msv.grammar.NameC"
+"lass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.sun.msv.grammar.Expression$EpsilonE"
+"xpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003q\u0000~\u0000\u001bq\u0000~\u0000 sr\u0000#com.sun.msv.grammar."
+"SimpleNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNamet\u0000\u0012Ljava/lang/String;L"
+"\u0000\fnamespaceURIq\u0000~\u0000\"xq\u0000~\u0000\u001dt\u00007com.sun.identity.liberty.ws.auth"
+"nsvc.jaxb.StatusElementt\u0000+http://java.sun.com/jaxb/xjc/dummy"
+"-elementssq\u0000~\u0000\rpp\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\rpp\u0000sq\u0000~\u0000\u000bppsq\u0000~\u0000\u0012q\u0000~\u0000\u0016psq\u0000~\u0000"
+"\u0017q\u0000~\u0000\u0016pq\u0000~\u0000\u001aq\u0000~\u0000\u001eq\u0000~\u0000 sq\u0000~\u0000!t\u00004com.sun.identity.liberty.ws.a"
+"uthnsvc.jaxb.StatusTypeq\u0000~\u0000%sq\u0000~\u0000\u000bppsq\u0000~\u0000\u0017q\u0000~\u0000\u0016psr\u0000\u001bcom.sun."
+"msv.grammar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/relaxng/datatype/"
+"Datatype;L\u0000\u0006exceptq\u0000~\u0000\u0002L\u0000\u0004namet\u0000\u001dLcom/sun/msv/util/StringPai"
+"r;xq\u0000~\u0000\u0003q\u0000~\u0000\u0016psr\u0000\"com.sun.msv.datatype.xsd.QnameType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001"
+"\u0002\u0000\u0000xr\u0000*com.sun.msv.datatype.xsd.BuiltinAtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000"
+"xr\u0000%com.sun.msv.datatype.xsd.ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com."
+"sun.msv.datatype.xsd.XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUr"
+"iq\u0000~\u0000\"L\u0000\btypeNameq\u0000~\u0000\"L\u0000\nwhiteSpacet\u0000.Lcom/sun/msv/datatype/"
+"xsd/WhiteSpaceProcessor;xpt\u0000 http://www.w3.org/2001/XMLSchem"
+"at\u0000\u0005QNamesr\u00005com.sun.msv.datatype.xsd.WhiteSpaceProcessor$Co"
+"llapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun.msv.datatype.xsd.WhiteSpaceProc"
+"essor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.sun.msv.grammar.Expression$NullSet"
+"Expression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003q\u0000~\u0000\u0016psr\u0000\u001bcom.sun.msv.util.String"
+"Pair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\"L\u0000\fnamespaceURIq\u0000~\u0000\"xpq\u0000~\u0000;q"
+"\u0000~\u0000:sq\u0000~\u0000!t\u0000\u0004typet\u0000)http://www.w3.org/2001/XMLSchema-instanc"
+"eq\u0000~\u0000 sq\u0000~\u0000!t\u0000\u0006Statust\u0000\u0016urn:liberty:sa:2004-04sq\u0000~\u0000\u000bppsq\u0000~\u0000\u000b"
+"q\u0000~\u0000\u0016psq\u0000~\u0000\rq\u0000~\u0000\u0016p\u0000sq\u0000~\u0000\u000bppsq\u0000~\u0000\u0012q\u0000~\u0000\u0016psq\u0000~\u0000\u0017q\u0000~\u0000\u0016pq\u0000~\u0000\u001aq\u0000~\u0000"
+"\u001eq\u0000~\u0000 sq\u0000~\u0000!t\u0000Ccom.sun.identity.liberty.ws.authnsvc.jaxb.Pas"
+"swordTransformsElementq\u0000~\u0000%sq\u0000~\u0000\rq\u0000~\u0000\u0016p\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\rpp\u0000sq\u0000"
+"~\u0000\u000bppsq\u0000~\u0000\u0012q\u0000~\u0000\u0016psq\u0000~\u0000\u0017q\u0000~\u0000\u0016pq\u0000~\u0000\u001aq\u0000~\u0000\u001eq\u0000~\u0000 sq\u0000~\u0000!t\u0000@com.sun"
+".identity.liberty.ws.authnsvc.jaxb.PasswordTransformsTypeq\u0000~"
+"\u0000%sq\u0000~\u0000\u000bppsq\u0000~\u0000\u0017q\u0000~\u0000\u0016pq\u0000~\u00003q\u0000~\u0000Cq\u0000~\u0000 sq\u0000~\u0000!t\u0000\u0012PasswordTransf"
+"ormsq\u0000~\u0000Hq\u0000~\u0000 sq\u0000~\u0000\u000bppsq\u0000~\u0000\rq\u0000~\u0000\u0016p\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\rpp\u0000sq\u0000~\u0000\u000bpp"
+"sq\u0000~\u0000\u0012q\u0000~\u0000\u0016psq\u0000~\u0000\u0017q\u0000~\u0000\u0016pq\u0000~\u0000\u001aq\u0000~\u0000\u001eq\u0000~\u0000 sq\u0000~\u0000!t\u0000Ccom.sun.iden"
+"tity.liberty.ws.authnsvc.jaxb.SASLResponseType.DataTypeq\u0000~\u0000%"
+"sq\u0000~\u0000\u000bppsq\u0000~\u0000\u0017q\u0000~\u0000\u0016pq\u0000~\u00003q\u0000~\u0000Cq\u0000~\u0000 sq\u0000~\u0000!t\u0000\u0004Dataq\u0000~\u0000Hq\u0000~\u0000 sq"
+"\u0000~\u0000\u000bppsq\u0000~\u0000\u0012q\u0000~\u0000\u0016psq\u0000~\u0000\u000bq\u0000~\u0000\u0016psq\u0000~\u0000\rq\u0000~\u0000\u0016p\u0000sq\u0000~\u0000\u000bppsq\u0000~\u0000\u0012q\u0000~"
+"\u0000\u0016psq\u0000~\u0000\u0017q\u0000~\u0000\u0016pq\u0000~\u0000\u001aq\u0000~\u0000\u001eq\u0000~\u0000 sq\u0000~\u0000!t\u0000>com.sun.identity.libe"
+"rty.ws.disco.jaxb.ResourceOfferingElementq\u0000~\u0000%sq\u0000~\u0000\rq\u0000~\u0000\u0016p\u0000s"
+"q\u0000~\u0000\u0000ppsq\u0000~\u0000\rpp\u0000sq\u0000~\u0000\u000bppsq\u0000~\u0000\u0012q\u0000~\u0000\u0016psq\u0000~\u0000\u0017q\u0000~\u0000\u0016pq\u0000~\u0000\u001aq\u0000~\u0000\u001eq\u0000"
+"~\u0000 sq\u0000~\u0000!t\u0000;com.sun.identity.liberty.ws.disco.jaxb.ResourceO"
+"fferingTypeq\u0000~\u0000%sq\u0000~\u0000\u000bppsq\u0000~\u0000\u0017q\u0000~\u0000\u0016pq\u0000~\u00003q\u0000~\u0000Cq\u0000~\u0000 sq\u0000~\u0000!t\u0000\u0010"
+"ResourceOfferingt\u0000\u0019urn:liberty:disco:2003-08q\u0000~\u0000 sq\u0000~\u0000\u000bppsq\u0000"
+"~\u0000\rq\u0000~\u0000\u0016p\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\rpp\u0000sq\u0000~\u0000\u000bppsq\u0000~\u0000\u0012q\u0000~\u0000\u0016psq\u0000~\u0000\u0017q\u0000~\u0000\u0016pq"
+"\u0000~\u0000\u001aq\u0000~\u0000\u001eq\u0000~\u0000 sq\u0000~\u0000!t\u0000Jcom.sun.identity.liberty.ws.authnsvc."
+"jaxb.SASLResponseType.CredentialsTypeq\u0000~\u0000%sq\u0000~\u0000\u000bppsq\u0000~\u0000\u0017q\u0000~\u0000"
+"\u0016pq\u0000~\u00003q\u0000~\u0000Cq\u0000~\u0000 sq\u0000~\u0000!t\u0000\u000bCredentialsq\u0000~\u0000Hq\u0000~\u0000 sq\u0000~\u0000\u000bppsq\u0000~\u0000"
+"\u0017q\u0000~\u0000\u0016psq\u0000~\u00000ppsr\u0000\u001fcom.sun.msv.datatype.xsd.IDType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000"
+"\u0000xr\u0000#com.sun.msv.datatype.xsd.NcnameType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\"com.s"
+"un.msv.datatype.xsd.TokenType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000#com.sun.msv.data"
+"type.xsd.StringType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001Z\u0000\risAlwaysValidxq\u0000~\u00005q\u0000~\u0000:t\u0000\u0002"
+"IDq\u0000~\u0000>\u0000q\u0000~\u0000@sq\u0000~\u0000Aq\u0000~\u0000\u0095q\u0000~\u0000:sq\u0000~\u0000!t\u0000\u0002idt\u0000\u0000q\u0000~\u0000 sq\u0000~\u0000\u000bppsq\u0000~"
+"\u0000\u0017q\u0000~\u0000\u0016psq\u0000~\u00000q\u0000~\u0000\u0016psq\u0000~\u0000\u0093q\u0000~\u0000:t\u0000\u0006stringsr\u00005com.sun.msv.data"
+"type.xsd.WhiteSpaceProcessor$Preserve\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000=\u0001q\u0000~\u0000@"
+"sq\u0000~\u0000Aq\u0000~\u0000\u009eq\u0000~\u0000:sq\u0000~\u0000!t\u0000\u000fserverMechanismq\u0000~\u0000\u0099q\u0000~\u0000 sr\u0000\"com.su"
+"n.msv.grammar.ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/su"
+"n/msv/grammar/ExpressionPool$ClosedHash;xpsr\u0000-com.sun.msv.gr"
+"ammar.ExpressionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0003\u0000\u0003I\u0000\u0005countB\u0000\rstreamV"
+"ersionL\u0000\u0006parentt\u0000$Lcom/sun/msv/grammar/ExpressionPool;xp\u0000\u0000\u0000*"
+"\u0001pq\u0000~\u0000Jq\u0000~\u0000lq\u0000~\u0000jq\u0000~\u0000\u008dq\u0000~\u0000kq\u0000~\u0000\u0014q\u0000~\u0000*q\u0000~\u0000Mq\u0000~\u0000Uq\u0000~\u0000bq\u0000~\u0000oq\u0000~"
+"\u0000wq\u0000~\u0000\u0085q\u0000~\u0000\u0011q\u0000~\u0000)q\u0000~\u0000Lq\u0000~\u0000Tq\u0000~\u0000aq\u0000~\u0000nq\u0000~\u0000vq\u0000~\u0000\u0084q\u0000~\u0000\tq\u0000~\u0000\u0006q\u0000~"
+"\u0000\'q\u0000~\u0000Rq\u0000~\u0000_q\u0000~\u0000tq\u0000~\u0000\u0082q\u0000~\u0000\u0007q\u0000~\u0000\u0005q\u0000~\u0000\bq\u0000~\u0000\nq\u0000~\u0000\u009aq\u0000~\u0000]q\u0000~\u0000\u0080q\u0000~"
+"\u0000Iq\u0000~\u0000.q\u0000~\u0000Yq\u0000~\u0000fq\u0000~\u0000{q\u0000~\u0000\u0089q\u0000~\u0000\fx"));
        }
        return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
    }

    public static class CredentialsTypeImpl implements com.sun.identity.liberty.ws.authnsvc.jaxb.SASLResponseType.CredentialsType, com.sun.xml.bind.JAXBObject, com.sun.identity.federation.jaxb.entityconfig.impl.runtime.UnmarshallableObject, com.sun.identity.federation.jaxb.entityconfig.impl.runtime.XMLSerializable, com.sun.identity.federation.jaxb.entityconfig.impl.runtime.ValidatableObject
    {

        protected com.sun.xml.bind.util.ListImpl _Any;
        public final static java.lang.Class version = (com.sun.identity.liberty.ws.authnsvc.jaxb.impl.JAXBVersion.class);
        private static com.sun.msv.grammar.Grammar schemaFragment;

        private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
            return (com.sun.identity.liberty.ws.authnsvc.jaxb.SASLResponseType.CredentialsType.class);
        }

        protected com.sun.xml.bind.util.ListImpl _getAny() {
            if (_Any == null) {
                _Any = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
            }
            return _Any;
        }

        public java.util.List getAny() {
            return _getAny();
        }

        public com.sun.identity.federation.jaxb.entityconfig.impl.runtime.UnmarshallingEventHandler createUnmarshaller(com.sun.identity.federation.jaxb.entityconfig.impl.runtime.UnmarshallingContext context) {
            return new com.sun.identity.liberty.ws.authnsvc.jaxb.impl.SASLResponseTypeImpl.CredentialsTypeImpl.Unmarshaller(context);
        }

        public void serializeBody(com.sun.identity.federation.jaxb.entityconfig.impl.runtime.XMLSerializer context)
            throws org.xml.sax.SAXException
        {
            int idx1 = 0;
            final int len1 = ((_Any == null)? 0 :_Any.size());
            while (idx1 != len1) {
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _Any.get(idx1 ++)), "Any");
            }
        }

        public void serializeAttributes(com.sun.identity.federation.jaxb.entityconfig.impl.runtime.XMLSerializer context)
            throws org.xml.sax.SAXException
        {
            int idx1 = 0;
            final int len1 = ((_Any == null)? 0 :_Any.size());
            while (idx1 != len1) {
                idx1 += 1;
            }
        }

        public void serializeURIs(com.sun.identity.federation.jaxb.entityconfig.impl.runtime.XMLSerializer context)
            throws org.xml.sax.SAXException
        {
            int idx1 = 0;
            final int len1 = ((_Any == null)? 0 :_Any.size());
            while (idx1 != len1) {
                idx1 += 1;
            }
        }

        public java.lang.Class getPrimaryInterface() {
            return (com.sun.identity.liberty.ws.authnsvc.jaxb.SASLResponseType.CredentialsType.class);
        }

        public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
            if (schemaFragment == null) {
                schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\u001dcom.sun.msv.grammar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.sun."
+"msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gramm"
+"ar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expression"
+"\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0002L\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000bex"
+"pandedExpq\u0000~\u0000\u0002xpppsr\u0000 com.sun.msv.grammar.OneOrMoreExp\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0000\u0001\u0002\u0000\u0000xr\u0000\u001ccom.sun.msv.grammar.UnaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0003expq\u0000~\u0000\u0002x"
+"q\u0000~\u0000\u0003sr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000psr\u0000\'com.sun"
+".msv.grammar.trex.ElementPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\tnameClasst\u0000\u001fLc"
+"om/sun/msv/grammar/NameClass;xr\u0000\u001ecom.sun.msv.grammar.Element"
+"Exp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAttributesL\u0000\fcontentModelq\u0000"
+"~\u0000\u0002xq\u0000~\u0000\u0003q\u0000~\u0000\np\u0000sr\u0000 com.sun.msv.grammar.AttributeExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001"
+"\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnameClassq\u0000~\u0000\fxq\u0000~\u0000\u0003ppsr\u00002com.sun.msv.gramm"
+"ar.Expression$AnyStringExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003sq\u0000~\u0000\t\u0001q\u0000~"
+"\u0000\u0012sr\u0000 com.sun.msv.grammar.AnyNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.sun"
+".msv.grammar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u0000&com.sun.msv.grammar.N"
+"amespaceNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\fnamespaceURIt\u0000\u0012Ljava/lang/Str"
+"ing;xq\u0000~\u0000\u0015t\u0000+http://java.sun.com/jaxb/xjc/dummy-elementssr\u00000"
+"com.sun.msv.grammar.Expression$EpsilonExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000x"
+"q\u0000~\u0000\u0003q\u0000~\u0000\u0013q\u0000~\u0000\u001csr\u0000\"com.sun.msv.grammar.ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun/msv/grammar/ExpressionPool$Closed"
+"Hash;xpsr\u0000-com.sun.msv.grammar.ExpressionPool$ClosedHash\u00d7j\u00d0N"
+"\u00ef\u00e8\u00ed\u001c\u0003\u0000\u0003I\u0000\u0005countB\u0000\rstreamVersionL\u0000\u0006parentt\u0000$Lcom/sun/msv/gram"
+"mar/ExpressionPool;xp\u0000\u0000\u0000\u0002\u0001pq\u0000~\u0000\u0005q\u0000~\u0000\bx"));
            }
            return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
        }

        public class Unmarshaller
            extends com.sun.identity.federation.jaxb.entityconfig.impl.runtime.AbstractUnmarshallingEventHandlerImpl
        {


            public Unmarshaller(com.sun.identity.federation.jaxb.entityconfig.impl.runtime.UnmarshallingContext context) {
                super(context, "--");
            }

            protected Unmarshaller(com.sun.identity.federation.jaxb.entityconfig.impl.runtime.UnmarshallingContext context, int startState) {
                this(context);
                state = startState;
            }

            public java.lang.Object owner() {
                return com.sun.identity.liberty.ws.authnsvc.jaxb.impl.SASLResponseTypeImpl.CredentialsTypeImpl.this;
            }

            public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
                throws org.xml.sax.SAXException
            {
                int attIdx;
                outer:
                while (true) {
                    switch (state) {
                        case  1 :
                            if (true) {
                                java.lang.Object co = spawnWildcard(1, ___uri, ___local, ___qname, __atts);
                                if (co!= null) {
                                    _getAny().add(co);
                                }
                                return ;
                            }
                            revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        case  0 :
                            if (true) {
                                java.lang.Object co = spawnWildcard(1, ___uri, ___local, ___qname, __atts);
                                if (co!= null) {
                                    _getAny().add(co);
                                }
                                return ;
                            }
                            state = 1;
                            continue outer;
                    }
                    super.enterElement(___uri, ___local, ___qname, __atts);
                    break;
                }
            }

            public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                throws org.xml.sax.SAXException
            {
                int attIdx;
                outer:
                while (true) {
                    switch (state) {
                        case  1 :
                            revertToParentFromLeaveElement(___uri, ___local, ___qname);
                            return ;
                        case  0 :
                            state = 1;
                            continue outer;
                    }
                    super.leaveElement(___uri, ___local, ___qname);
                    break;
                }
            }

            public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                throws org.xml.sax.SAXException
            {
                int attIdx;
                outer:
                while (true) {
                    switch (state) {
                        case  1 :
                            revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                            return ;
                        case  0 :
                            state = 1;
                            continue outer;
                    }
                    super.enterAttribute(___uri, ___local, ___qname);
                    break;
                }
            }

            public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                throws org.xml.sax.SAXException
            {
                int attIdx;
                outer:
                while (true) {
                    switch (state) {
                        case  1 :
                            revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                            return ;
                        case  0 :
                            state = 1;
                            continue outer;
                    }
                    super.leaveAttribute(___uri, ___local, ___qname);
                    break;
                }
            }

            public void handleText(final java.lang.String value)
                throws org.xml.sax.SAXException
            {
                int attIdx;
                outer:
                while (true) {
                    try {
                        switch (state) {
                            case  1 :
                                revertToParentFromText(value);
                                return ;
                            case  0 :
                                state = 1;
                                continue outer;
                        }
                    } catch (java.lang.RuntimeException e) {
                        handleUnexpectedTextException(value, e);
                    }
                    break;
                }
            }

        }

    }

    public static class DataTypeImpl implements com.sun.identity.liberty.ws.authnsvc.jaxb.SASLResponseType.DataType, com.sun.xml.bind.JAXBObject, com.sun.identity.federation.jaxb.entityconfig.impl.runtime.UnmarshallableObject, com.sun.identity.federation.jaxb.entityconfig.impl.runtime.XMLSerializable, com.sun.identity.federation.jaxb.entityconfig.impl.runtime.ValidatableObject
    {

        protected byte[] _Value;
        public final static java.lang.Class version = (com.sun.identity.liberty.ws.authnsvc.jaxb.impl.JAXBVersion.class);
        private static com.sun.msv.grammar.Grammar schemaFragment;

        private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
            return (com.sun.identity.liberty.ws.authnsvc.jaxb.SASLResponseType.DataType.class);
        }

        public byte[] getValue() {
            return _Value;
        }

        public void setValue(byte[] value) {
            _Value = value;
        }

        public com.sun.identity.federation.jaxb.entityconfig.impl.runtime.UnmarshallingEventHandler createUnmarshaller(com.sun.identity.federation.jaxb.entityconfig.impl.runtime.UnmarshallingContext context) {
            return new com.sun.identity.liberty.ws.authnsvc.jaxb.impl.SASLResponseTypeImpl.DataTypeImpl.Unmarshaller(context);
        }

        public void serializeBody(com.sun.identity.federation.jaxb.entityconfig.impl.runtime.XMLSerializer context)
            throws org.xml.sax.SAXException
        {
            try {
                context.text(com.sun.msv.datatype.xsd.Base64BinaryType.save(((byte[]) _Value)), "Value");
            } catch (java.lang.Exception e) {
                com.sun.identity.federation.jaxb.entityconfig.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
        }

        public void serializeAttributes(com.sun.identity.federation.jaxb.entityconfig.impl.runtime.XMLSerializer context)
            throws org.xml.sax.SAXException
        {
        }

        public void serializeURIs(com.sun.identity.federation.jaxb.entityconfig.impl.runtime.XMLSerializer context)
            throws org.xml.sax.SAXException
        {
        }

        public java.lang.Class getPrimaryInterface() {
            return (com.sun.identity.liberty.ws.authnsvc.jaxb.SASLResponseType.DataType.class);
        }

        public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
            if (schemaFragment == null) {
                schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\u001bcom.sun.msv.grammar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/r"
+"elaxng/datatype/Datatype;L\u0000\u0006exceptt\u0000 Lcom/sun/msv/grammar/Ex"
+"pression;L\u0000\u0004namet\u0000\u001dLcom/sun/msv/util/StringPair;xr\u0000\u001ecom.sun."
+"msv.grammar.Expression\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0002L\u0000\u0013epsilonReducibilityt\u0000\u0013Lj"
+"ava/lang/Boolean;L\u0000\u000bexpandedExpq\u0000~\u0000\u0002xpppsr\u0000)com.sun.msv.data"
+"type.xsd.Base64BinaryType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com.sun.msv.datatype"
+".xsd.BinaryBaseType\u00a7\u00ce\u000e\u0097^\u00afW\u0011\u0002\u0000\u0000xr\u0000*com.sun.msv.datatype.xsd.B"
+"uiltinAtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.datatype.xsd.Conc"
+"reteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com.sun.msv.datatype.xsd.XSDatatypeIm"
+"pl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUrit\u0000\u0012Ljava/lang/String;L\u0000\btypeName"
+"q\u0000~\u0000\fL\u0000\nwhiteSpacet\u0000.Lcom/sun/msv/datatype/xsd/WhiteSpacePro"
+"cessor;xpt\u0000 http://www.w3.org/2001/XMLSchemat\u0000\fbase64Binarys"
+"r\u00005com.sun.msv.datatype.xsd.WhiteSpaceProcessor$Collapse\u0000\u0000\u0000\u0000"
+"\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun.msv.datatype.xsd.WhiteSpaceProcessor\u0000\u0000\u0000\u0000\u0000"
+"\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.sun.msv.grammar.Expression$NullSetExpression"
+"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0004sr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000"
+"psr\u0000\u001bcom.sun.msv.util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\f"
+"L\u0000\fnamespaceURIq\u0000~\u0000\fxpq\u0000~\u0000\u0010q\u0000~\u0000\u000fsr\u0000\"com.sun.msv.grammar.Expr"
+"essionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun/msv/grammar/Expr"
+"essionPool$ClosedHash;xpsr\u0000-com.sun.msv.grammar.ExpressionPo"
+"ol$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0003\u0000\u0003I\u0000\u0005countB\u0000\rstreamVersionL\u0000\u0006parentt\u0000$"
+"Lcom/sun/msv/grammar/ExpressionPool;xp\u0000\u0000\u0000\u0000\u0001px"));
            }
            return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
        }

        public class Unmarshaller
            extends com.sun.identity.federation.jaxb.entityconfig.impl.runtime.AbstractUnmarshallingEventHandlerImpl
        {


            public Unmarshaller(com.sun.identity.federation.jaxb.entityconfig.impl.runtime.UnmarshallingContext context) {
                super(context, "--");
            }

            protected Unmarshaller(com.sun.identity.federation.jaxb.entityconfig.impl.runtime.UnmarshallingContext context, int startState) {
                this(context);
                state = startState;
            }

            public java.lang.Object owner() {
                return com.sun.identity.liberty.ws.authnsvc.jaxb.impl.SASLResponseTypeImpl.DataTypeImpl.this;
            }

            public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
                throws org.xml.sax.SAXException
            {
                int attIdx;
                outer:
                while (true) {
                    switch (state) {
                        case  1 :
                            revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                            return ;
                    }
                    super.enterElement(___uri, ___local, ___qname, __atts);
                    break;
                }
            }

            public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                throws org.xml.sax.SAXException
            {
                int attIdx;
                outer:
                while (true) {
                    switch (state) {
                        case  1 :
                            revertToParentFromLeaveElement(___uri, ___local, ___qname);
                            return ;
                    }
                    super.leaveElement(___uri, ___local, ___qname);
                    break;
                }
            }

            public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                throws org.xml.sax.SAXException
            {
                int attIdx;
                outer:
                while (true) {
                    switch (state) {
                        case  1 :
                            revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                            return ;
                    }
                    super.enterAttribute(___uri, ___local, ___qname);
                    break;
                }
            }

            public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                throws org.xml.sax.SAXException
            {
                int attIdx;
                outer:
                while (true) {
                    switch (state) {
                        case  1 :
                            revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                            return ;
                    }
                    super.leaveAttribute(___uri, ___local, ___qname);
                    break;
                }
            }

            public void handleText(final java.lang.String value)
                throws org.xml.sax.SAXException
            {
                int attIdx;
                outer:
                while (true) {
                    try {
                        switch (state) {
                            case  1 :
                                revertToParentFromText(value);
                                return ;
                            case  0 :
                                state = 1;
                                eatText1(value);
                                return ;
                        }
                    } catch (java.lang.RuntimeException e) {
                        handleUnexpectedTextException(value, e);
                    }
                    break;
                }
            }

            private void eatText1(final java.lang.String value)
                throws org.xml.sax.SAXException
            {
                try {
                    _Value = com.sun.msv.datatype.xsd.Base64BinaryType.load(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                } catch (java.lang.Exception e) {
                    handleParseConversionException(e);
                }
            }

        }

    }

    public class Unmarshaller
        extends com.sun.identity.federation.jaxb.entityconfig.impl.runtime.AbstractUnmarshallingEventHandlerImpl
    {


        public Unmarshaller(com.sun.identity.federation.jaxb.entityconfig.impl.runtime.UnmarshallingContext context) {
            super(context, "----------------------");
        }

        protected Unmarshaller(com.sun.identity.federation.jaxb.entityconfig.impl.runtime.UnmarshallingContext context, int startState) {
            this(context);
            state = startState;
        }

        public java.lang.Object owner() {
            return com.sun.identity.liberty.ws.authnsvc.jaxb.impl.SASLResponseTypeImpl.this;
        }

        public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  18 :
                        if (("Transform" == ___local)&&("urn:liberty:sa:2004-04" == ___uri)) {
                            _PasswordTransforms = ((com.sun.identity.liberty.ws.authnsvc.jaxb.impl.PasswordTransformsTypeImpl) spawnChildFromEnterElement((com.sun.identity.liberty.ws.authnsvc.jaxb.impl.PasswordTransformsTypeImpl.class), 19, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        break;
                    case  13 :
                        if (true) {
                            _Credentials = ((com.sun.identity.liberty.ws.authnsvc.jaxb.impl.SASLResponseTypeImpl.CredentialsTypeImpl) spawnChildFromEnterElement((com.sun.identity.liberty.ws.authnsvc.jaxb.impl.SASLResponseTypeImpl.CredentialsTypeImpl.class), 14, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        _Credentials = ((com.sun.identity.liberty.ws.authnsvc.jaxb.impl.SASLResponseTypeImpl.CredentialsTypeImpl) spawnChildFromEnterElement((com.sun.identity.liberty.ws.authnsvc.jaxb.impl.SASLResponseTypeImpl.CredentialsTypeImpl.class), 14, ___uri, ___local, ___qname, __atts));
                        return ;
                    case  12 :
                        if (("ResourceOffering" == ___local)&&("urn:liberty:disco:2003-08" == ___uri)) {
                            _getResourceOffering().add(((com.sun.identity.liberty.ws.disco.jaxb.impl.ResourceOfferingElementImpl) spawnChildFromEnterElement((com.sun.identity.liberty.ws.disco.jaxb.impl.ResourceOfferingElementImpl.class), 12, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("ResourceOffering" == ___local)&&("urn:liberty:disco:2003-08" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 16;
                            return ;
                        }
                        if (("Credentials" == ___local)&&("urn:liberty:sa:2004-04" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 13;
                            return ;
                        }
                        state = 15;
                        continue outer;
                    case  7 :
                        if (("PasswordTransforms" == ___local)&&("urn:liberty:sa:2004-04" == ___uri)) {
                            _PasswordTransforms = ((com.sun.identity.liberty.ws.authnsvc.jaxb.impl.PasswordTransformsElementImpl) spawnChildFromEnterElement((com.sun.identity.liberty.ws.authnsvc.jaxb.impl.PasswordTransformsElementImpl.class), 8, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("PasswordTransforms" == ___local)&&("urn:liberty:sa:2004-04" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 18;
                            return ;
                        }
                        state = 8;
                        continue outer;
                    case  8 :
                        if (("Data" == ___local)&&("urn:liberty:sa:2004-04" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 9;
                            return ;
                        }
                        state = 11;
                        continue outer;
                    case  16 :
                        attIdx = context.getAttribute("", "entryID");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("ResourceID" == ___local)&&("urn:liberty:disco:2003-08" == ___uri)) {
                            _getResourceOffering().add(((com.sun.identity.liberty.ws.disco.jaxb.impl.ResourceOfferingTypeImpl) spawnChildFromEnterElement((com.sun.identity.liberty.ws.disco.jaxb.impl.ResourceOfferingTypeImpl.class), 17, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("ResourceID" == ___local)&&("urn:liberty:disco:2003-08" == ___uri)) {
                            _getResourceOffering().add(((com.sun.identity.liberty.ws.disco.jaxb.impl.ResourceOfferingTypeImpl) spawnChildFromEnterElement((com.sun.identity.liberty.ws.disco.jaxb.impl.ResourceOfferingTypeImpl.class), 17, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("EncryptedResourceID" == ___local)&&("urn:liberty:disco:2003-08" == ___uri)) {
                            _getResourceOffering().add(((com.sun.identity.liberty.ws.disco.jaxb.impl.ResourceOfferingTypeImpl) spawnChildFromEnterElement((com.sun.identity.liberty.ws.disco.jaxb.impl.ResourceOfferingTypeImpl.class), 17, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("EncryptedResourceID" == ___local)&&("urn:liberty:disco:2003-08" == ___uri)) {
                            _getResourceOffering().add(((com.sun.identity.liberty.ws.disco.jaxb.impl.ResourceOfferingTypeImpl) spawnChildFromEnterElement((com.sun.identity.liberty.ws.disco.jaxb.impl.ResourceOfferingTypeImpl.class), 17, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("ServiceInstance" == ___local)&&("urn:liberty:disco:2003-08" == ___uri)) {
                            _getResourceOffering().add(((com.sun.identity.liberty.ws.disco.jaxb.impl.ResourceOfferingTypeImpl) spawnChildFromEnterElement((com.sun.identity.liberty.ws.disco.jaxb.impl.ResourceOfferingTypeImpl.class), 17, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        break;
                    case  6 :
                        if (("Status" == ___local)&&("urn:liberty:sa:2004-04" == ___uri)) {
                            _Status = ((com.sun.identity.liberty.ws.authnsvc.jaxb.impl.StatusElementImpl) spawnChildFromEnterElement((com.sun.identity.liberty.ws.authnsvc.jaxb.impl.StatusElementImpl.class), 7, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("Status" == ___local)&&("urn:liberty:sa:2004-04" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 20;
                            return ;
                        }
                        break;
                    case  0 :
                        attIdx = context.getAttribute("", "id");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 3;
                            eatText1(v);
                            continue outer;
                        }
                        state = 3;
                        continue outer;
                    case  3 :
                        attIdx = context.getAttribute("", "serverMechanism");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 6;
                            eatText2(v);
                            continue outer;
                        }
                        state = 6;
                        continue outer;
                    case  15 :
                        revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                        return ;
                    case  20 :
                        attIdx = context.getAttribute("", "code");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        break;
                    case  11 :
                        if (("ResourceOffering" == ___local)&&("urn:liberty:disco:2003-08" == ___uri)) {
                            _getResourceOffering().add(((com.sun.identity.liberty.ws.disco.jaxb.impl.ResourceOfferingElementImpl) spawnChildFromEnterElement((com.sun.identity.liberty.ws.disco.jaxb.impl.ResourceOfferingElementImpl.class), 12, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("ResourceOffering" == ___local)&&("urn:liberty:disco:2003-08" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 16;
                            return ;
                        }
                        state = 12;
                        continue outer;
                }
                super.enterElement(___uri, ___local, ___qname, __atts);
                break;
            }
        }

        private void eatText1(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Id = context.addToIdTable(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText2(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _ServerMechanism = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  17 :
                        if (("ResourceOffering" == ___local)&&("urn:liberty:disco:2003-08" == ___uri)) {
                            context.popAttributes();
                            state = 12;
                            return ;
                        }
                        break;
                    case  13 :
                        _Credentials = ((com.sun.identity.liberty.ws.authnsvc.jaxb.impl.SASLResponseTypeImpl.CredentialsTypeImpl) spawnChildFromLeaveElement((com.sun.identity.liberty.ws.authnsvc.jaxb.impl.SASLResponseTypeImpl.CredentialsTypeImpl.class), 14, ___uri, ___local, ___qname));
                        return ;
                    case  12 :
                        state = 15;
                        continue outer;
                    case  14 :
                        if (("Credentials" == ___local)&&("urn:liberty:sa:2004-04" == ___uri)) {
                            context.popAttributes();
                            state = 15;
                            return ;
                        }
                        break;
                    case  7 :
                        state = 8;
                        continue outer;
                    case  8 :
                        state = 11;
                        continue outer;
                    case  19 :
                        if (("PasswordTransforms" == ___local)&&("urn:liberty:sa:2004-04" == ___uri)) {
                            context.popAttributes();
                            state = 8;
                            return ;
                        }
                        break;
                    case  16 :
                        attIdx = context.getAttribute("", "entryID");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                    case  10 :
                        if (("Data" == ___local)&&("urn:liberty:sa:2004-04" == ___uri)) {
                            context.popAttributes();
                            state = 11;
                            return ;
                        }
                        break;
                    case  0 :
                        attIdx = context.getAttribute("", "id");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 3;
                            eatText1(v);
                            continue outer;
                        }
                        state = 3;
                        continue outer;
                    case  3 :
                        attIdx = context.getAttribute("", "serverMechanism");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 6;
                            eatText2(v);
                            continue outer;
                        }
                        state = 6;
                        continue outer;
                    case  15 :
                        revertToParentFromLeaveElement(___uri, ___local, ___qname);
                        return ;
                    case  21 :
                        if (("Status" == ___local)&&("urn:liberty:sa:2004-04" == ___uri)) {
                            context.popAttributes();
                            state = 7;
                            return ;
                        }
                        break;
                    case  20 :
                        attIdx = context.getAttribute("", "code");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                    case  11 :
                        state = 12;
                        continue outer;
                }
                super.leaveElement(___uri, ___local, ___qname);
                break;
            }
        }

        public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  13 :
                        _Credentials = ((com.sun.identity.liberty.ws.authnsvc.jaxb.impl.SASLResponseTypeImpl.CredentialsTypeImpl) spawnChildFromEnterAttribute((com.sun.identity.liberty.ws.authnsvc.jaxb.impl.SASLResponseTypeImpl.CredentialsTypeImpl.class), 14, ___uri, ___local, ___qname));
                        return ;
                    case  12 :
                        state = 15;
                        continue outer;
                    case  7 :
                        state = 8;
                        continue outer;
                    case  8 :
                        state = 11;
                        continue outer;
                    case  16 :
                        if (("entryID" == ___local)&&("" == ___uri)) {
                            _getResourceOffering().add(((com.sun.identity.liberty.ws.disco.jaxb.impl.ResourceOfferingTypeImpl) spawnChildFromEnterAttribute((com.sun.identity.liberty.ws.disco.jaxb.impl.ResourceOfferingTypeImpl.class), 17, ___uri, ___local, ___qname)));
                            return ;
                        }
                        break;
                    case  0 :
                        if (("id" == ___local)&&("" == ___uri)) {
                            state = 1;
                            return ;
                        }
                        state = 3;
                        continue outer;
                    case  3 :
                        if (("serverMechanism" == ___local)&&("" == ___uri)) {
                            state = 4;
                            return ;
                        }
                        state = 6;
                        continue outer;
                    case  15 :
                        revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                        return ;
                    case  20 :
                        if (("code" == ___local)&&("" == ___uri)) {
                            _Status = ((com.sun.identity.liberty.ws.authnsvc.jaxb.impl.StatusTypeImpl) spawnChildFromEnterAttribute((com.sun.identity.liberty.ws.authnsvc.jaxb.impl.StatusTypeImpl.class), 21, ___uri, ___local, ___qname));
                            return ;
                        }
                        break;
                    case  11 :
                        state = 12;
                        continue outer;
                }
                super.enterAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  13 :
                        _Credentials = ((com.sun.identity.liberty.ws.authnsvc.jaxb.impl.SASLResponseTypeImpl.CredentialsTypeImpl) spawnChildFromLeaveAttribute((com.sun.identity.liberty.ws.authnsvc.jaxb.impl.SASLResponseTypeImpl.CredentialsTypeImpl.class), 14, ___uri, ___local, ___qname));
                        return ;
                    case  12 :
                        state = 15;
                        continue outer;
                    case  5 :
                        if (("serverMechanism" == ___local)&&("" == ___uri)) {
                            state = 6;
                            return ;
                        }
                        break;
                    case  7 :
                        state = 8;
                        continue outer;
                    case  8 :
                        state = 11;
                        continue outer;
                    case  16 :
                        attIdx = context.getAttribute("", "entryID");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                    case  0 :
                        attIdx = context.getAttribute("", "id");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 3;
                            eatText1(v);
                            continue outer;
                        }
                        state = 3;
                        continue outer;
                    case  3 :
                        attIdx = context.getAttribute("", "serverMechanism");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 6;
                            eatText2(v);
                            continue outer;
                        }
                        state = 6;
                        continue outer;
                    case  15 :
                        revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                        return ;
                    case  2 :
                        if (("id" == ___local)&&("" == ___uri)) {
                            state = 3;
                            return ;
                        }
                        break;
                    case  20 :
                        attIdx = context.getAttribute("", "code");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                    case  11 :
                        state = 12;
                        continue outer;
                }
                super.leaveAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void handleText(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                try {
                    switch (state) {
                        case  13 :
                            _Credentials = ((com.sun.identity.liberty.ws.authnsvc.jaxb.impl.SASLResponseTypeImpl.CredentialsTypeImpl) spawnChildFromText((com.sun.identity.liberty.ws.authnsvc.jaxb.impl.SASLResponseTypeImpl.CredentialsTypeImpl.class), 14, value));
                            return ;
                        case  12 :
                            state = 15;
                            continue outer;
                        case  7 :
                            state = 8;
                            continue outer;
                        case  8 :
                            state = 11;
                            continue outer;
                        case  1 :
                            state = 2;
                            eatText1(value);
                            return ;
                        case  4 :
                            state = 5;
                            eatText2(value);
                            return ;
                        case  9 :
                            _Data = ((com.sun.identity.liberty.ws.authnsvc.jaxb.impl.SASLResponseTypeImpl.DataTypeImpl) spawnChildFromText((com.sun.identity.liberty.ws.authnsvc.jaxb.impl.SASLResponseTypeImpl.DataTypeImpl.class), 10, value));
                            return ;
                        case  16 :
                            attIdx = context.getAttribute("", "entryID");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            break;
                        case  0 :
                            attIdx = context.getAttribute("", "id");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 3;
                                eatText1(v);
                                continue outer;
                            }
                            state = 3;
                            continue outer;
                        case  3 :
                            attIdx = context.getAttribute("", "serverMechanism");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 6;
                                eatText2(v);
                                continue outer;
                            }
                            state = 6;
                            continue outer;
                        case  15 :
                            revertToParentFromText(value);
                            return ;
                        case  20 :
                            attIdx = context.getAttribute("", "code");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            break;
                        case  11 :
                            state = 12;
                            continue outer;
                    }
                } catch (java.lang.RuntimeException e) {
                    handleUnexpectedTextException(value, e);
                }
                break;
            }
        }

    }

}
