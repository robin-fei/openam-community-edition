//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v1.0.6-b27-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2012.06.11 at 10:33:54 AM PDT 
//


package com.sun.identity.liberty.ws.common.jaxb.ps;


/**
 * This object contains factory methods for each 
 * Java content interface and Java element interface 
 * generated in the com.sun.identity.liberty.ws.common.jaxb.ps package. 
 * <p>An ObjectFactory allows you to programatically 
 * construct new instances of the Java representation 
 * for XML content. The Java representation of XML 
 * content can consist of schema derived interfaces 
 * and classes representing the binding of schema 
 * type definitions, element declarations and model 
 * groups.  Factory methods for each of these are 
 * provided in this class.
 * 
 */
public class ObjectFactory
    extends com.sun.identity.federation.jaxb.entityconfig.impl.runtime.DefaultJAXBContextImpl
{

    private static java.util.HashMap defaultImplementations = new java.util.HashMap(80, 0.75F);
    private static java.util.HashMap rootTagMap = new java.util.HashMap();
    public final static com.sun.identity.federation.jaxb.entityconfig.impl.runtime.GrammarInfo grammarInfo = new com.sun.identity.federation.jaxb.entityconfig.impl.runtime.GrammarInfoImpl(rootTagMap, defaultImplementations, (com.sun.identity.liberty.ws.common.jaxb.ps.ObjectFactory.class));
    public final static java.lang.Class version = (com.sun.identity.liberty.ws.common.jaxb.ps.impl.JAXBVersion.class);

    static {
        defaultImplementations.put((com.sun.identity.liberty.ws.common.jaxb.ps.AuthnRequestEnvelopeElement.class), "com.sun.identity.liberty.ws.common.jaxb.ps.impl.AuthnRequestEnvelopeElementImpl");
        defaultImplementations.put((com.sun.identity.liberty.ws.common.jaxb.ps.AuthnResponseElement.class), "com.sun.identity.liberty.ws.common.jaxb.ps.impl.AuthnResponseElementImpl");
        defaultImplementations.put((com.sun.identity.liberty.ws.common.jaxb.ps.NameIdentifierMappingResponseType.class), "com.sun.identity.liberty.ws.common.jaxb.ps.impl.NameIdentifierMappingResponseTypeImpl");
        defaultImplementations.put((com.sun.identity.liberty.ws.common.jaxb.ps.SubjectElement.class), "com.sun.identity.liberty.ws.common.jaxb.ps.impl.SubjectElementImpl");
        defaultImplementations.put((com.sun.identity.liberty.ws.common.jaxb.ps.IDPEntriesElement.class), "com.sun.identity.liberty.ws.common.jaxb.ps.impl.IDPEntriesElementImpl");
        defaultImplementations.put((com.sun.identity.liberty.ws.common.jaxb.ps.IDPListType.class), "com.sun.identity.liberty.ws.common.jaxb.ps.impl.IDPListTypeImpl");
        defaultImplementations.put((com.sun.identity.liberty.ws.common.jaxb.ps.RequestEnvelopeType.class), "com.sun.identity.liberty.ws.common.jaxb.ps.impl.RequestEnvelopeTypeImpl");
        defaultImplementations.put((com.sun.identity.liberty.ws.common.jaxb.ps.OldProvidedNameIdentifierElement.class), "com.sun.identity.liberty.ws.common.jaxb.ps.impl.OldProvidedNameIdentifierElementImpl");
        defaultImplementations.put((com.sun.identity.liberty.ws.common.jaxb.ps.IDPProvidedNameIdentifierElement.class), "com.sun.identity.liberty.ws.common.jaxb.ps.impl.IDPProvidedNameIdentifierElementImpl");
        defaultImplementations.put((com.sun.identity.liberty.ws.common.jaxb.ps.AuthnResponseEnvelopeType.class), "com.sun.identity.liberty.ws.common.jaxb.ps.impl.AuthnResponseEnvelopeTypeImpl");
        defaultImplementations.put((com.sun.identity.liberty.ws.common.jaxb.ps.LogoutResponseElement.class), "com.sun.identity.liberty.ws.common.jaxb.ps.impl.LogoutResponseElementImpl");
        defaultImplementations.put((com.sun.identity.liberty.ws.common.jaxb.ps.NameIdentifierMappingRequestElement.class), "com.sun.identity.liberty.ws.common.jaxb.ps.impl.NameIdentifierMappingRequestElementImpl");
        defaultImplementations.put((com.sun.identity.liberty.ws.common.jaxb.ps.RequestAuthnContextElement.class), "com.sun.identity.liberty.ws.common.jaxb.ps.impl.RequestAuthnContextElementImpl");
        defaultImplementations.put((com.sun.identity.liberty.ws.common.jaxb.ps.ResponseEnvelopeType.class), "com.sun.identity.liberty.ws.common.jaxb.ps.impl.ResponseEnvelopeTypeImpl");
        defaultImplementations.put((com.sun.identity.liberty.ws.common.jaxb.ps.AuthenticationStatementType.class), "com.sun.identity.liberty.ws.common.jaxb.ps.impl.AuthenticationStatementTypeImpl");
        defaultImplementations.put((com.sun.identity.liberty.ws.common.jaxb.ps.AuthnContextType.class), "com.sun.identity.liberty.ws.common.jaxb.ps.impl.AuthnContextTypeImpl");
        defaultImplementations.put((com.sun.identity.liberty.ws.common.jaxb.ps.LogoutRequestElement.class), "com.sun.identity.liberty.ws.common.jaxb.ps.impl.LogoutRequestElementImpl");
        defaultImplementations.put((com.sun.identity.liberty.ws.common.jaxb.ps.RegisterNameIdentifierRequestElement.class), "com.sun.identity.liberty.ws.common.jaxb.ps.impl.RegisterNameIdentifierRequestElementImpl");
        defaultImplementations.put((com.sun.identity.liberty.ws.common.jaxb.ps.ScopingType.class), "com.sun.identity.liberty.ws.common.jaxb.ps.impl.ScopingTypeImpl");
        defaultImplementations.put((com.sun.identity.liberty.ws.common.jaxb.ps.IDPEntriesType.class), "com.sun.identity.liberty.ws.common.jaxb.ps.impl.IDPEntriesTypeImpl");
        defaultImplementations.put((com.sun.identity.liberty.ws.common.jaxb.ps.LogoutRequestType.class), "com.sun.identity.liberty.ws.common.jaxb.ps.impl.LogoutRequestTypeImpl");
        defaultImplementations.put((com.sun.identity.liberty.ws.common.jaxb.ps.AuthnRequestType.class), "com.sun.identity.liberty.ws.common.jaxb.ps.impl.AuthnRequestTypeImpl");
        defaultImplementations.put((com.sun.identity.liberty.ws.common.jaxb.ps.AuthnContextElement.class), "com.sun.identity.liberty.ws.common.jaxb.ps.impl.AuthnContextElementImpl");
        defaultImplementations.put((com.sun.identity.liberty.ws.common.jaxb.ps.EncryptableNameIdentifierType.class), "com.sun.identity.liberty.ws.common.jaxb.ps.impl.EncryptableNameIdentifierTypeImpl");
        defaultImplementations.put((com.sun.identity.liberty.ws.common.jaxb.ps.AuthenticationStatementElement.class), "com.sun.identity.liberty.ws.common.jaxb.ps.impl.AuthenticationStatementElementImpl");
        defaultImplementations.put((com.sun.identity.liberty.ws.common.jaxb.ps.SubjectType.class), "com.sun.identity.liberty.ws.common.jaxb.ps.impl.SubjectTypeImpl");
        defaultImplementations.put((com.sun.identity.liberty.ws.common.jaxb.ps.FederationTerminationNotificationType.class), "com.sun.identity.liberty.ws.common.jaxb.ps.impl.FederationTerminationNotificationTypeImpl");
        defaultImplementations.put((com.sun.identity.liberty.ws.common.jaxb.ps.RegisterNameIdentifierRequestType.class), "com.sun.identity.liberty.ws.common.jaxb.ps.impl.RegisterNameIdentifierRequestTypeImpl");
        defaultImplementations.put((com.sun.identity.liberty.ws.common.jaxb.ps.IDPListElement.class), "com.sun.identity.liberty.ws.common.jaxb.ps.impl.IDPListElementImpl");
        defaultImplementations.put((com.sun.identity.liberty.ws.common.jaxb.ps.AuthnRequestEnvelopeType.class), "com.sun.identity.liberty.ws.common.jaxb.ps.impl.AuthnRequestEnvelopeTypeImpl");
        defaultImplementations.put((com.sun.identity.liberty.ws.common.jaxb.ps.AssertionType.class), "com.sun.identity.liberty.ws.common.jaxb.ps.impl.AssertionTypeImpl");
        defaultImplementations.put((com.sun.identity.liberty.ws.common.jaxb.ps.RelayStateElement.class), "com.sun.identity.liberty.ws.common.jaxb.ps.impl.RelayStateElementImpl");
        defaultImplementations.put((com.sun.identity.liberty.ws.common.jaxb.ps.AuthnResponseEnvelopeElement.class), "com.sun.identity.liberty.ws.common.jaxb.ps.impl.AuthnResponseEnvelopeElementImpl");
        defaultImplementations.put((com.sun.identity.liberty.ws.common.jaxb.ps.SPProvidedNameIdentifierElement.class), "com.sun.identity.liberty.ws.common.jaxb.ps.impl.SPProvidedNameIdentifierElementImpl");
        defaultImplementations.put((com.sun.identity.liberty.ws.common.jaxb.ps.ProviderIDElement.class), "com.sun.identity.liberty.ws.common.jaxb.ps.impl.ProviderIDElementImpl");
        defaultImplementations.put((com.sun.identity.liberty.ws.common.jaxb.ps.ProtocolProfileElement.class), "com.sun.identity.liberty.ws.common.jaxb.ps.impl.ProtocolProfileElementImpl");
        defaultImplementations.put((com.sun.identity.liberty.ws.common.jaxb.ps.IDPEntryType.class), "com.sun.identity.liberty.ws.common.jaxb.ps.impl.IDPEntryTypeImpl");
        defaultImplementations.put((com.sun.identity.liberty.ws.common.jaxb.ps.EncryptedNameIdentifierType.class), "com.sun.identity.liberty.ws.common.jaxb.ps.impl.EncryptedNameIdentifierTypeImpl");
        defaultImplementations.put((com.sun.identity.liberty.ws.common.jaxb.ps.FederationTerminationNotificationElement.class), "com.sun.identity.liberty.ws.common.jaxb.ps.impl.FederationTerminationNotificationElementImpl");
        defaultImplementations.put((com.sun.identity.liberty.ws.common.jaxb.ps.AuthnRequestElement.class), "com.sun.identity.liberty.ws.common.jaxb.ps.impl.AuthnRequestElementImpl");
        defaultImplementations.put((com.sun.identity.liberty.ws.common.jaxb.ps.EncryptedNameIdentifierElement.class), "com.sun.identity.liberty.ws.common.jaxb.ps.impl.EncryptedNameIdentifierElementImpl");
        defaultImplementations.put((com.sun.identity.liberty.ws.common.jaxb.ps.NameIdentifierMappingRequestType.class), "com.sun.identity.liberty.ws.common.jaxb.ps.impl.NameIdentifierMappingRequestTypeImpl");
        defaultImplementations.put((com.sun.identity.liberty.ws.common.jaxb.ps.StatusElement.class), "com.sun.identity.liberty.ws.common.jaxb.ps.impl.StatusElementImpl");
        defaultImplementations.put((com.sun.identity.liberty.ws.common.jaxb.ps.ExtensionElement.class), "com.sun.identity.liberty.ws.common.jaxb.ps.impl.ExtensionElementImpl");
        defaultImplementations.put((com.sun.identity.liberty.ws.common.jaxb.ps.ScopingElement.class), "com.sun.identity.liberty.ws.common.jaxb.ps.impl.ScopingElementImpl");
        defaultImplementations.put((com.sun.identity.liberty.ws.common.jaxb.ps.AffiliationIDElement.class), "com.sun.identity.liberty.ws.common.jaxb.ps.impl.AffiliationIDElementImpl");
        defaultImplementations.put((com.sun.identity.liberty.ws.common.jaxb.ps.StatusType.class), "com.sun.identity.liberty.ws.common.jaxb.ps.impl.StatusTypeImpl");
        defaultImplementations.put((com.sun.identity.liberty.ws.common.jaxb.ps.NameIDPolicyElement.class), "com.sun.identity.liberty.ws.common.jaxb.ps.impl.NameIDPolicyElementImpl");
        defaultImplementations.put((com.sun.identity.liberty.ws.common.jaxb.ps.NameIdentifierMappingResponseElement.class), "com.sun.identity.liberty.ws.common.jaxb.ps.impl.NameIdentifierMappingResponseElementImpl");
        defaultImplementations.put((com.sun.identity.liberty.ws.common.jaxb.ps.EmptyType.class), "com.sun.identity.liberty.ws.common.jaxb.ps.impl.EmptyTypeImpl");
        defaultImplementations.put((com.sun.identity.liberty.ws.common.jaxb.ps.RequestAuthnContextType.class), "com.sun.identity.liberty.ws.common.jaxb.ps.impl.RequestAuthnContextTypeImpl");
        defaultImplementations.put((com.sun.identity.liberty.ws.common.jaxb.ps.AssertionElement.class), "com.sun.identity.liberty.ws.common.jaxb.ps.impl.AssertionElementImpl");
        defaultImplementations.put((com.sun.identity.liberty.ws.common.jaxb.ps.AuthnResponseType.class), "com.sun.identity.liberty.ws.common.jaxb.ps.impl.AuthnResponseTypeImpl");
        defaultImplementations.put((com.sun.identity.liberty.ws.common.jaxb.ps.IDPEntryElement.class), "com.sun.identity.liberty.ws.common.jaxb.ps.impl.IDPEntryElementImpl");
        defaultImplementations.put((com.sun.identity.liberty.ws.common.jaxb.ps.RegisterNameIdentifierResponseElement.class), "com.sun.identity.liberty.ws.common.jaxb.ps.impl.RegisterNameIdentifierResponseElementImpl");
        defaultImplementations.put((com.sun.identity.liberty.ws.common.jaxb.ps.GetCompleteElement.class), "com.sun.identity.liberty.ws.common.jaxb.ps.impl.GetCompleteElementImpl");
        defaultImplementations.put((com.sun.identity.liberty.ws.common.jaxb.ps.ExtensionType.class), "com.sun.identity.liberty.ws.common.jaxb.ps.impl.ExtensionTypeImpl");
        defaultImplementations.put((com.sun.identity.liberty.ws.common.jaxb.ps.StatusResponseType.class), "com.sun.identity.liberty.ws.common.jaxb.ps.impl.StatusResponseTypeImpl");
        defaultImplementations.put((com.sun.identity.liberty.ws.common.jaxb.ps.EncryptableNameIdentifierElement.class), "com.sun.identity.liberty.ws.common.jaxb.ps.impl.EncryptableNameIdentifierElementImpl");
        rootTagMap.put(new javax.xml.namespace.QName("urn:liberty:iff:2003-08", "FederationTerminationNotification"), (com.sun.identity.liberty.ws.common.jaxb.ps.FederationTerminationNotificationElement.class));
        rootTagMap.put(new javax.xml.namespace.QName("urn:liberty:iff:2003-08", "Extension"), (com.sun.identity.liberty.ws.common.jaxb.ps.ExtensionElement.class));
        rootTagMap.put(new javax.xml.namespace.QName("urn:liberty:iff:2003-08", "ProtocolProfile"), (com.sun.identity.liberty.ws.common.jaxb.ps.ProtocolProfileElement.class));
        rootTagMap.put(new javax.xml.namespace.QName("urn:liberty:iff:2003-08", "LogoutRequest"), (com.sun.identity.liberty.ws.common.jaxb.ps.LogoutRequestElement.class));
        rootTagMap.put(new javax.xml.namespace.QName("urn:liberty:iff:2003-08", "AuthenticationStatement"), (com.sun.identity.liberty.ws.common.jaxb.ps.AuthenticationStatementElement.class));
        rootTagMap.put(new javax.xml.namespace.QName("urn:liberty:iff:2003-08", "LogoutResponse"), (com.sun.identity.liberty.ws.common.jaxb.ps.LogoutResponseElement.class));
        rootTagMap.put(new javax.xml.namespace.QName("urn:liberty:iff:2003-08", "AffiliationID"), (com.sun.identity.liberty.ws.common.jaxb.ps.AffiliationIDElement.class));
        rootTagMap.put(new javax.xml.namespace.QName("urn:liberty:iff:2003-08", "AuthnContext"), (com.sun.identity.liberty.ws.common.jaxb.ps.AuthnContextElement.class));
        rootTagMap.put(new javax.xml.namespace.QName("urn:liberty:iff:2003-08", "AuthnResponseEnvelope"), (com.sun.identity.liberty.ws.common.jaxb.ps.AuthnResponseEnvelopeElement.class));
        rootTagMap.put(new javax.xml.namespace.QName("urn:liberty:iff:2003-08", "IDPEntry"), (com.sun.identity.liberty.ws.common.jaxb.ps.IDPEntryElement.class));
        rootTagMap.put(new javax.xml.namespace.QName("urn:liberty:iff:2003-08", "EncryptableNameIdentifier"), (com.sun.identity.liberty.ws.common.jaxb.ps.EncryptableNameIdentifierElement.class));
        rootTagMap.put(new javax.xml.namespace.QName("urn:liberty:iff:2003-08", "EncryptedNameIdentifier"), (com.sun.identity.liberty.ws.common.jaxb.ps.EncryptedNameIdentifierElement.class));
        rootTagMap.put(new javax.xml.namespace.QName("urn:liberty:iff:2003-08", "RegisterNameIdentifierRequest"), (com.sun.identity.liberty.ws.common.jaxb.ps.RegisterNameIdentifierRequestElement.class));
        rootTagMap.put(new javax.xml.namespace.QName("urn:liberty:iff:2003-08", "GetComplete"), (com.sun.identity.liberty.ws.common.jaxb.ps.GetCompleteElement.class));
        rootTagMap.put(new javax.xml.namespace.QName("urn:liberty:iff:2003-08", "Assertion"), (com.sun.identity.liberty.ws.common.jaxb.ps.AssertionElement.class));
        rootTagMap.put(new javax.xml.namespace.QName("urn:liberty:iff:2003-08", "NameIdentifierMappingRequest"), (com.sun.identity.liberty.ws.common.jaxb.ps.NameIdentifierMappingRequestElement.class));
        rootTagMap.put(new javax.xml.namespace.QName("urn:liberty:iff:2003-08", "Status"), (com.sun.identity.liberty.ws.common.jaxb.ps.StatusElement.class));
        rootTagMap.put(new javax.xml.namespace.QName("urn:liberty:iff:2003-08", "IDPProvidedNameIdentifier"), (com.sun.identity.liberty.ws.common.jaxb.ps.IDPProvidedNameIdentifierElement.class));
        rootTagMap.put(new javax.xml.namespace.QName("urn:liberty:iff:2003-08", "AuthnRequest"), (com.sun.identity.liberty.ws.common.jaxb.ps.AuthnRequestElement.class));
        rootTagMap.put(new javax.xml.namespace.QName("urn:liberty:iff:2003-08", "SPProvidedNameIdentifier"), (com.sun.identity.liberty.ws.common.jaxb.ps.SPProvidedNameIdentifierElement.class));
        rootTagMap.put(new javax.xml.namespace.QName("urn:liberty:iff:2003-08", "IDPList"), (com.sun.identity.liberty.ws.common.jaxb.ps.IDPListElement.class));
        rootTagMap.put(new javax.xml.namespace.QName("urn:liberty:iff:2003-08", "RequestAuthnContext"), (com.sun.identity.liberty.ws.common.jaxb.ps.RequestAuthnContextElement.class));
        rootTagMap.put(new javax.xml.namespace.QName("urn:liberty:iff:2003-08", "NameIDPolicy"), (com.sun.identity.liberty.ws.common.jaxb.ps.NameIDPolicyElement.class));
        rootTagMap.put(new javax.xml.namespace.QName("urn:liberty:iff:2003-08", "Subject"), (com.sun.identity.liberty.ws.common.jaxb.ps.SubjectElement.class));
        rootTagMap.put(new javax.xml.namespace.QName("urn:liberty:iff:2003-08", "Scoping"), (com.sun.identity.liberty.ws.common.jaxb.ps.ScopingElement.class));
        rootTagMap.put(new javax.xml.namespace.QName("urn:liberty:iff:2003-08", "AuthnResponse"), (com.sun.identity.liberty.ws.common.jaxb.ps.AuthnResponseElement.class));
        rootTagMap.put(new javax.xml.namespace.QName("urn:liberty:iff:2003-08", "IDPEntries"), (com.sun.identity.liberty.ws.common.jaxb.ps.IDPEntriesElement.class));
        rootTagMap.put(new javax.xml.namespace.QName("urn:liberty:iff:2003-08", "RelayState"), (com.sun.identity.liberty.ws.common.jaxb.ps.RelayStateElement.class));
        rootTagMap.put(new javax.xml.namespace.QName("urn:liberty:iff:2003-08", "NameIdentifierMappingResponse"), (com.sun.identity.liberty.ws.common.jaxb.ps.NameIdentifierMappingResponseElement.class));
        rootTagMap.put(new javax.xml.namespace.QName("urn:liberty:iff:2003-08", "AuthnRequestEnvelope"), (com.sun.identity.liberty.ws.common.jaxb.ps.AuthnRequestEnvelopeElement.class));
        rootTagMap.put(new javax.xml.namespace.QName("urn:liberty:iff:2003-08", "OldProvidedNameIdentifier"), (com.sun.identity.liberty.ws.common.jaxb.ps.OldProvidedNameIdentifierElement.class));
        rootTagMap.put(new javax.xml.namespace.QName("urn:liberty:iff:2003-08", "RegisterNameIdentifierResponse"), (com.sun.identity.liberty.ws.common.jaxb.ps.RegisterNameIdentifierResponseElement.class));
        rootTagMap.put(new javax.xml.namespace.QName("urn:liberty:iff:2003-08", "ProviderID"), (com.sun.identity.liberty.ws.common.jaxb.ps.ProviderIDElement.class));
    }

    /**
     * Create a new ObjectFactory that can be used to create new instances of schema derived classes for package: com.sun.identity.liberty.ws.common.jaxb.ps
     * 
     */
    public ObjectFactory() {
        super(grammarInfo);
    }

    /**
     * Create an instance of the specified Java content interface.
     * 
     * @param javaContentInterface
     *     the Class object of the javacontent interface to instantiate
     * @return
     *     a new instance
     * @throws JAXBException
     *     if an error occurs
     */
    public java.lang.Object newInstance(java.lang.Class javaContentInterface)
        throws javax.xml.bind.JAXBException
    {
        return super.newInstance(javaContentInterface);
    }

    /**
     * Get the specified property. This method can only be
     * used to get provider specific properties.
     * Attempting to get an undefined property will result
     * in a PropertyException being thrown.
     * 
     * @param name
     *     the name of the property to retrieve
     * @return
     *     the value of the requested property
     * @throws PropertyException
     *     when there is an error retrieving the given property or value
     */
    public java.lang.Object getProperty(java.lang.String name)
        throws javax.xml.bind.PropertyException
    {
        return super.getProperty(name);
    }

    /**
     * Set the specified property. This method can only be
     * used to set provider specific properties.
     * Attempting to set an undefined property will result
     * in a PropertyException being thrown.
     * 
     * @param name
     *     the name of the property to retrieve
     * @param value
     *     the value of the property to be set
     * @throws PropertyException
     *     when there is an error processing the given property or value
     */
    public void setProperty(java.lang.String name, java.lang.Object value)
        throws javax.xml.bind.PropertyException
    {
        super.setProperty(name, value);
    }

    /**
     * Create an instance of AuthnRequestEnvelopeElement
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public com.sun.identity.liberty.ws.common.jaxb.ps.AuthnRequestEnvelopeElement createAuthnRequestEnvelopeElement()
        throws javax.xml.bind.JAXBException
    {
        return new com.sun.identity.liberty.ws.common.jaxb.ps.impl.AuthnRequestEnvelopeElementImpl();
    }

    /**
     * Create an instance of AuthnResponseElement
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public com.sun.identity.liberty.ws.common.jaxb.ps.AuthnResponseElement createAuthnResponseElement()
        throws javax.xml.bind.JAXBException
    {
        return new com.sun.identity.liberty.ws.common.jaxb.ps.impl.AuthnResponseElementImpl();
    }

    /**
     * Create an instance of NameIdentifierMappingResponseType
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public com.sun.identity.liberty.ws.common.jaxb.ps.NameIdentifierMappingResponseType createNameIdentifierMappingResponseType()
        throws javax.xml.bind.JAXBException
    {
        return new com.sun.identity.liberty.ws.common.jaxb.ps.impl.NameIdentifierMappingResponseTypeImpl();
    }

    /**
     * Create an instance of SubjectElement
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public com.sun.identity.liberty.ws.common.jaxb.ps.SubjectElement createSubjectElement()
        throws javax.xml.bind.JAXBException
    {
        return new com.sun.identity.liberty.ws.common.jaxb.ps.impl.SubjectElementImpl();
    }

    /**
     * Create an instance of IDPEntriesElement
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public com.sun.identity.liberty.ws.common.jaxb.ps.IDPEntriesElement createIDPEntriesElement()
        throws javax.xml.bind.JAXBException
    {
        return new com.sun.identity.liberty.ws.common.jaxb.ps.impl.IDPEntriesElementImpl();
    }

    /**
     * Create an instance of IDPListType
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public com.sun.identity.liberty.ws.common.jaxb.ps.IDPListType createIDPListType()
        throws javax.xml.bind.JAXBException
    {
        return new com.sun.identity.liberty.ws.common.jaxb.ps.impl.IDPListTypeImpl();
    }

    /**
     * Create an instance of RequestEnvelopeType
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public com.sun.identity.liberty.ws.common.jaxb.ps.RequestEnvelopeType createRequestEnvelopeType()
        throws javax.xml.bind.JAXBException
    {
        return new com.sun.identity.liberty.ws.common.jaxb.ps.impl.RequestEnvelopeTypeImpl();
    }

    /**
     * Create an instance of OldProvidedNameIdentifierElement
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public com.sun.identity.liberty.ws.common.jaxb.ps.OldProvidedNameIdentifierElement createOldProvidedNameIdentifierElement()
        throws javax.xml.bind.JAXBException
    {
        return new com.sun.identity.liberty.ws.common.jaxb.ps.impl.OldProvidedNameIdentifierElementImpl();
    }

    /**
     * Create an instance of IDPProvidedNameIdentifierElement
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public com.sun.identity.liberty.ws.common.jaxb.ps.IDPProvidedNameIdentifierElement createIDPProvidedNameIdentifierElement()
        throws javax.xml.bind.JAXBException
    {
        return new com.sun.identity.liberty.ws.common.jaxb.ps.impl.IDPProvidedNameIdentifierElementImpl();
    }

    /**
     * Create an instance of AuthnResponseEnvelopeType
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public com.sun.identity.liberty.ws.common.jaxb.ps.AuthnResponseEnvelopeType createAuthnResponseEnvelopeType()
        throws javax.xml.bind.JAXBException
    {
        return new com.sun.identity.liberty.ws.common.jaxb.ps.impl.AuthnResponseEnvelopeTypeImpl();
    }

    /**
     * Create an instance of LogoutResponseElement
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public com.sun.identity.liberty.ws.common.jaxb.ps.LogoutResponseElement createLogoutResponseElement()
        throws javax.xml.bind.JAXBException
    {
        return new com.sun.identity.liberty.ws.common.jaxb.ps.impl.LogoutResponseElementImpl();
    }

    /**
     * Create an instance of NameIdentifierMappingRequestElement
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public com.sun.identity.liberty.ws.common.jaxb.ps.NameIdentifierMappingRequestElement createNameIdentifierMappingRequestElement()
        throws javax.xml.bind.JAXBException
    {
        return new com.sun.identity.liberty.ws.common.jaxb.ps.impl.NameIdentifierMappingRequestElementImpl();
    }

    /**
     * Create an instance of RequestAuthnContextElement
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public com.sun.identity.liberty.ws.common.jaxb.ps.RequestAuthnContextElement createRequestAuthnContextElement()
        throws javax.xml.bind.JAXBException
    {
        return new com.sun.identity.liberty.ws.common.jaxb.ps.impl.RequestAuthnContextElementImpl();
    }

    /**
     * Create an instance of ResponseEnvelopeType
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public com.sun.identity.liberty.ws.common.jaxb.ps.ResponseEnvelopeType createResponseEnvelopeType()
        throws javax.xml.bind.JAXBException
    {
        return new com.sun.identity.liberty.ws.common.jaxb.ps.impl.ResponseEnvelopeTypeImpl();
    }

    /**
     * Create an instance of AuthenticationStatementType
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public com.sun.identity.liberty.ws.common.jaxb.ps.AuthenticationStatementType createAuthenticationStatementType()
        throws javax.xml.bind.JAXBException
    {
        return new com.sun.identity.liberty.ws.common.jaxb.ps.impl.AuthenticationStatementTypeImpl();
    }

    /**
     * Create an instance of AuthnContextType
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public com.sun.identity.liberty.ws.common.jaxb.ps.AuthnContextType createAuthnContextType()
        throws javax.xml.bind.JAXBException
    {
        return new com.sun.identity.liberty.ws.common.jaxb.ps.impl.AuthnContextTypeImpl();
    }

    /**
     * Create an instance of LogoutRequestElement
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public com.sun.identity.liberty.ws.common.jaxb.ps.LogoutRequestElement createLogoutRequestElement()
        throws javax.xml.bind.JAXBException
    {
        return new com.sun.identity.liberty.ws.common.jaxb.ps.impl.LogoutRequestElementImpl();
    }

    /**
     * Create an instance of RegisterNameIdentifierRequestElement
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public com.sun.identity.liberty.ws.common.jaxb.ps.RegisterNameIdentifierRequestElement createRegisterNameIdentifierRequestElement()
        throws javax.xml.bind.JAXBException
    {
        return new com.sun.identity.liberty.ws.common.jaxb.ps.impl.RegisterNameIdentifierRequestElementImpl();
    }

    /**
     * Create an instance of ScopingType
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public com.sun.identity.liberty.ws.common.jaxb.ps.ScopingType createScopingType()
        throws javax.xml.bind.JAXBException
    {
        return new com.sun.identity.liberty.ws.common.jaxb.ps.impl.ScopingTypeImpl();
    }

    /**
     * Create an instance of IDPEntriesType
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public com.sun.identity.liberty.ws.common.jaxb.ps.IDPEntriesType createIDPEntriesType()
        throws javax.xml.bind.JAXBException
    {
        return new com.sun.identity.liberty.ws.common.jaxb.ps.impl.IDPEntriesTypeImpl();
    }

    /**
     * Create an instance of LogoutRequestType
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public com.sun.identity.liberty.ws.common.jaxb.ps.LogoutRequestType createLogoutRequestType()
        throws javax.xml.bind.JAXBException
    {
        return new com.sun.identity.liberty.ws.common.jaxb.ps.impl.LogoutRequestTypeImpl();
    }

    /**
     * Create an instance of AuthnRequestType
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public com.sun.identity.liberty.ws.common.jaxb.ps.AuthnRequestType createAuthnRequestType()
        throws javax.xml.bind.JAXBException
    {
        return new com.sun.identity.liberty.ws.common.jaxb.ps.impl.AuthnRequestTypeImpl();
    }

    /**
     * Create an instance of AuthnContextElement
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public com.sun.identity.liberty.ws.common.jaxb.ps.AuthnContextElement createAuthnContextElement()
        throws javax.xml.bind.JAXBException
    {
        return new com.sun.identity.liberty.ws.common.jaxb.ps.impl.AuthnContextElementImpl();
    }

    /**
     * Create an instance of EncryptableNameIdentifierType
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public com.sun.identity.liberty.ws.common.jaxb.ps.EncryptableNameIdentifierType createEncryptableNameIdentifierType()
        throws javax.xml.bind.JAXBException
    {
        return new com.sun.identity.liberty.ws.common.jaxb.ps.impl.EncryptableNameIdentifierTypeImpl();
    }

    /**
     * Create an instance of AuthenticationStatementElement
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public com.sun.identity.liberty.ws.common.jaxb.ps.AuthenticationStatementElement createAuthenticationStatementElement()
        throws javax.xml.bind.JAXBException
    {
        return new com.sun.identity.liberty.ws.common.jaxb.ps.impl.AuthenticationStatementElementImpl();
    }

    /**
     * Create an instance of SubjectType
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public com.sun.identity.liberty.ws.common.jaxb.ps.SubjectType createSubjectType()
        throws javax.xml.bind.JAXBException
    {
        return new com.sun.identity.liberty.ws.common.jaxb.ps.impl.SubjectTypeImpl();
    }

    /**
     * Create an instance of FederationTerminationNotificationType
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public com.sun.identity.liberty.ws.common.jaxb.ps.FederationTerminationNotificationType createFederationTerminationNotificationType()
        throws javax.xml.bind.JAXBException
    {
        return new com.sun.identity.liberty.ws.common.jaxb.ps.impl.FederationTerminationNotificationTypeImpl();
    }

    /**
     * Create an instance of RegisterNameIdentifierRequestType
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public com.sun.identity.liberty.ws.common.jaxb.ps.RegisterNameIdentifierRequestType createRegisterNameIdentifierRequestType()
        throws javax.xml.bind.JAXBException
    {
        return new com.sun.identity.liberty.ws.common.jaxb.ps.impl.RegisterNameIdentifierRequestTypeImpl();
    }

    /**
     * Create an instance of IDPListElement
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public com.sun.identity.liberty.ws.common.jaxb.ps.IDPListElement createIDPListElement()
        throws javax.xml.bind.JAXBException
    {
        return new com.sun.identity.liberty.ws.common.jaxb.ps.impl.IDPListElementImpl();
    }

    /**
     * Create an instance of AuthnRequestEnvelopeType
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public com.sun.identity.liberty.ws.common.jaxb.ps.AuthnRequestEnvelopeType createAuthnRequestEnvelopeType()
        throws javax.xml.bind.JAXBException
    {
        return new com.sun.identity.liberty.ws.common.jaxb.ps.impl.AuthnRequestEnvelopeTypeImpl();
    }

    /**
     * Create an instance of AssertionType
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public com.sun.identity.liberty.ws.common.jaxb.ps.AssertionType createAssertionType()
        throws javax.xml.bind.JAXBException
    {
        return new com.sun.identity.liberty.ws.common.jaxb.ps.impl.AssertionTypeImpl();
    }

    /**
     * Create an instance of RelayStateElement
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public com.sun.identity.liberty.ws.common.jaxb.ps.RelayStateElement createRelayStateElement()
        throws javax.xml.bind.JAXBException
    {
        return new com.sun.identity.liberty.ws.common.jaxb.ps.impl.RelayStateElementImpl();
    }

    /**
     * Create an instance of RelayStateElement
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public com.sun.identity.liberty.ws.common.jaxb.ps.RelayStateElement createRelayStateElement(java.lang.String value)
        throws javax.xml.bind.JAXBException
    {
        return new com.sun.identity.liberty.ws.common.jaxb.ps.impl.RelayStateElementImpl(value);
    }

    /**
     * Create an instance of AuthnResponseEnvelopeElement
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public com.sun.identity.liberty.ws.common.jaxb.ps.AuthnResponseEnvelopeElement createAuthnResponseEnvelopeElement()
        throws javax.xml.bind.JAXBException
    {
        return new com.sun.identity.liberty.ws.common.jaxb.ps.impl.AuthnResponseEnvelopeElementImpl();
    }

    /**
     * Create an instance of SPProvidedNameIdentifierElement
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public com.sun.identity.liberty.ws.common.jaxb.ps.SPProvidedNameIdentifierElement createSPProvidedNameIdentifierElement()
        throws javax.xml.bind.JAXBException
    {
        return new com.sun.identity.liberty.ws.common.jaxb.ps.impl.SPProvidedNameIdentifierElementImpl();
    }

    /**
     * Create an instance of ProviderIDElement
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public com.sun.identity.liberty.ws.common.jaxb.ps.ProviderIDElement createProviderIDElement()
        throws javax.xml.bind.JAXBException
    {
        return new com.sun.identity.liberty.ws.common.jaxb.ps.impl.ProviderIDElementImpl();
    }

    /**
     * Create an instance of ProviderIDElement
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public com.sun.identity.liberty.ws.common.jaxb.ps.ProviderIDElement createProviderIDElement(java.lang.String value)
        throws javax.xml.bind.JAXBException
    {
        return new com.sun.identity.liberty.ws.common.jaxb.ps.impl.ProviderIDElementImpl(value);
    }

    /**
     * Create an instance of ProtocolProfileElement
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public com.sun.identity.liberty.ws.common.jaxb.ps.ProtocolProfileElement createProtocolProfileElement()
        throws javax.xml.bind.JAXBException
    {
        return new com.sun.identity.liberty.ws.common.jaxb.ps.impl.ProtocolProfileElementImpl();
    }

    /**
     * Create an instance of ProtocolProfileElement
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public com.sun.identity.liberty.ws.common.jaxb.ps.ProtocolProfileElement createProtocolProfileElement(java.lang.String value)
        throws javax.xml.bind.JAXBException
    {
        return new com.sun.identity.liberty.ws.common.jaxb.ps.impl.ProtocolProfileElementImpl(value);
    }

    /**
     * Create an instance of IDPEntryType
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public com.sun.identity.liberty.ws.common.jaxb.ps.IDPEntryType createIDPEntryType()
        throws javax.xml.bind.JAXBException
    {
        return new com.sun.identity.liberty.ws.common.jaxb.ps.impl.IDPEntryTypeImpl();
    }

    /**
     * Create an instance of EncryptedNameIdentifierType
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public com.sun.identity.liberty.ws.common.jaxb.ps.EncryptedNameIdentifierType createEncryptedNameIdentifierType()
        throws javax.xml.bind.JAXBException
    {
        return new com.sun.identity.liberty.ws.common.jaxb.ps.impl.EncryptedNameIdentifierTypeImpl();
    }

    /**
     * Create an instance of FederationTerminationNotificationElement
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public com.sun.identity.liberty.ws.common.jaxb.ps.FederationTerminationNotificationElement createFederationTerminationNotificationElement()
        throws javax.xml.bind.JAXBException
    {
        return new com.sun.identity.liberty.ws.common.jaxb.ps.impl.FederationTerminationNotificationElementImpl();
    }

    /**
     * Create an instance of AuthnRequestElement
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public com.sun.identity.liberty.ws.common.jaxb.ps.AuthnRequestElement createAuthnRequestElement()
        throws javax.xml.bind.JAXBException
    {
        return new com.sun.identity.liberty.ws.common.jaxb.ps.impl.AuthnRequestElementImpl();
    }

    /**
     * Create an instance of EncryptedNameIdentifierElement
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public com.sun.identity.liberty.ws.common.jaxb.ps.EncryptedNameIdentifierElement createEncryptedNameIdentifierElement()
        throws javax.xml.bind.JAXBException
    {
        return new com.sun.identity.liberty.ws.common.jaxb.ps.impl.EncryptedNameIdentifierElementImpl();
    }

    /**
     * Create an instance of NameIdentifierMappingRequestType
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public com.sun.identity.liberty.ws.common.jaxb.ps.NameIdentifierMappingRequestType createNameIdentifierMappingRequestType()
        throws javax.xml.bind.JAXBException
    {
        return new com.sun.identity.liberty.ws.common.jaxb.ps.impl.NameIdentifierMappingRequestTypeImpl();
    }

    /**
     * Create an instance of StatusElement
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public com.sun.identity.liberty.ws.common.jaxb.ps.StatusElement createStatusElement()
        throws javax.xml.bind.JAXBException
    {
        return new com.sun.identity.liberty.ws.common.jaxb.ps.impl.StatusElementImpl();
    }

    /**
     * Create an instance of ExtensionElement
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public com.sun.identity.liberty.ws.common.jaxb.ps.ExtensionElement createExtensionElement()
        throws javax.xml.bind.JAXBException
    {
        return new com.sun.identity.liberty.ws.common.jaxb.ps.impl.ExtensionElementImpl();
    }

    /**
     * Create an instance of ScopingElement
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public com.sun.identity.liberty.ws.common.jaxb.ps.ScopingElement createScopingElement()
        throws javax.xml.bind.JAXBException
    {
        return new com.sun.identity.liberty.ws.common.jaxb.ps.impl.ScopingElementImpl();
    }

    /**
     * Create an instance of AffiliationIDElement
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public com.sun.identity.liberty.ws.common.jaxb.ps.AffiliationIDElement createAffiliationIDElement()
        throws javax.xml.bind.JAXBException
    {
        return new com.sun.identity.liberty.ws.common.jaxb.ps.impl.AffiliationIDElementImpl();
    }

    /**
     * Create an instance of AffiliationIDElement
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public com.sun.identity.liberty.ws.common.jaxb.ps.AffiliationIDElement createAffiliationIDElement(java.lang.String value)
        throws javax.xml.bind.JAXBException
    {
        return new com.sun.identity.liberty.ws.common.jaxb.ps.impl.AffiliationIDElementImpl(value);
    }

    /**
     * Create an instance of StatusType
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public com.sun.identity.liberty.ws.common.jaxb.ps.StatusType createStatusType()
        throws javax.xml.bind.JAXBException
    {
        return new com.sun.identity.liberty.ws.common.jaxb.ps.impl.StatusTypeImpl();
    }

    /**
     * Create an instance of NameIDPolicyElement
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public com.sun.identity.liberty.ws.common.jaxb.ps.NameIDPolicyElement createNameIDPolicyElement()
        throws javax.xml.bind.JAXBException
    {
        return new com.sun.identity.liberty.ws.common.jaxb.ps.impl.NameIDPolicyElementImpl();
    }

    /**
     * Create an instance of NameIDPolicyElement
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public com.sun.identity.liberty.ws.common.jaxb.ps.NameIDPolicyElement createNameIDPolicyElement(java.lang.String value)
        throws javax.xml.bind.JAXBException
    {
        return new com.sun.identity.liberty.ws.common.jaxb.ps.impl.NameIDPolicyElementImpl(value);
    }

    /**
     * Create an instance of NameIdentifierMappingResponseElement
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public com.sun.identity.liberty.ws.common.jaxb.ps.NameIdentifierMappingResponseElement createNameIdentifierMappingResponseElement()
        throws javax.xml.bind.JAXBException
    {
        return new com.sun.identity.liberty.ws.common.jaxb.ps.impl.NameIdentifierMappingResponseElementImpl();
    }

    /**
     * Create an instance of EmptyType
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public com.sun.identity.liberty.ws.common.jaxb.ps.EmptyType createEmptyType()
        throws javax.xml.bind.JAXBException
    {
        return new com.sun.identity.liberty.ws.common.jaxb.ps.impl.EmptyTypeImpl();
    }

    /**
     * Create an instance of RequestAuthnContextType
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public com.sun.identity.liberty.ws.common.jaxb.ps.RequestAuthnContextType createRequestAuthnContextType()
        throws javax.xml.bind.JAXBException
    {
        return new com.sun.identity.liberty.ws.common.jaxb.ps.impl.RequestAuthnContextTypeImpl();
    }

    /**
     * Create an instance of AssertionElement
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public com.sun.identity.liberty.ws.common.jaxb.ps.AssertionElement createAssertionElement()
        throws javax.xml.bind.JAXBException
    {
        return new com.sun.identity.liberty.ws.common.jaxb.ps.impl.AssertionElementImpl();
    }

    /**
     * Create an instance of AuthnResponseType
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public com.sun.identity.liberty.ws.common.jaxb.ps.AuthnResponseType createAuthnResponseType()
        throws javax.xml.bind.JAXBException
    {
        return new com.sun.identity.liberty.ws.common.jaxb.ps.impl.AuthnResponseTypeImpl();
    }

    /**
     * Create an instance of IDPEntryElement
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public com.sun.identity.liberty.ws.common.jaxb.ps.IDPEntryElement createIDPEntryElement()
        throws javax.xml.bind.JAXBException
    {
        return new com.sun.identity.liberty.ws.common.jaxb.ps.impl.IDPEntryElementImpl();
    }

    /**
     * Create an instance of RegisterNameIdentifierResponseElement
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public com.sun.identity.liberty.ws.common.jaxb.ps.RegisterNameIdentifierResponseElement createRegisterNameIdentifierResponseElement()
        throws javax.xml.bind.JAXBException
    {
        return new com.sun.identity.liberty.ws.common.jaxb.ps.impl.RegisterNameIdentifierResponseElementImpl();
    }

    /**
     * Create an instance of GetCompleteElement
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public com.sun.identity.liberty.ws.common.jaxb.ps.GetCompleteElement createGetCompleteElement()
        throws javax.xml.bind.JAXBException
    {
        return new com.sun.identity.liberty.ws.common.jaxb.ps.impl.GetCompleteElementImpl();
    }

    /**
     * Create an instance of GetCompleteElement
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public com.sun.identity.liberty.ws.common.jaxb.ps.GetCompleteElement createGetCompleteElement(java.lang.String value)
        throws javax.xml.bind.JAXBException
    {
        return new com.sun.identity.liberty.ws.common.jaxb.ps.impl.GetCompleteElementImpl(value);
    }

    /**
     * Create an instance of ExtensionType
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public com.sun.identity.liberty.ws.common.jaxb.ps.ExtensionType createExtensionType()
        throws javax.xml.bind.JAXBException
    {
        return new com.sun.identity.liberty.ws.common.jaxb.ps.impl.ExtensionTypeImpl();
    }

    /**
     * Create an instance of StatusResponseType
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public com.sun.identity.liberty.ws.common.jaxb.ps.StatusResponseType createStatusResponseType()
        throws javax.xml.bind.JAXBException
    {
        return new com.sun.identity.liberty.ws.common.jaxb.ps.impl.StatusResponseTypeImpl();
    }

    /**
     * Create an instance of EncryptableNameIdentifierElement
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public com.sun.identity.liberty.ws.common.jaxb.ps.EncryptableNameIdentifierElement createEncryptableNameIdentifierElement()
        throws javax.xml.bind.JAXBException
    {
        return new com.sun.identity.liberty.ws.common.jaxb.ps.impl.EncryptableNameIdentifierElementImpl();
    }

}
