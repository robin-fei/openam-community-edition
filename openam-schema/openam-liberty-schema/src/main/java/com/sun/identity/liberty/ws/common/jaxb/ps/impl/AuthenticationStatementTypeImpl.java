//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v1.0.6-b27-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2012.06.11 at 10:33:54 AM PDT 
//


package com.sun.identity.liberty.ws.common.jaxb.ps.impl;

public class AuthenticationStatementTypeImpl
    extends com.sun.identity.liberty.ws.common.jaxb.assertion.impl.AuthenticationStatementTypeImpl
    implements com.sun.identity.liberty.ws.common.jaxb.ps.AuthenticationStatementType, com.sun.xml.bind.JAXBObject, com.sun.identity.federation.jaxb.entityconfig.impl.runtime.UnmarshallableObject, com.sun.identity.federation.jaxb.entityconfig.impl.runtime.XMLSerializable, com.sun.identity.federation.jaxb.entityconfig.impl.runtime.ValidatableObject
{

    protected com.sun.identity.liberty.ws.common.jaxb.ps.AuthnContextType _AuthnContext;
    protected java.util.Calendar _ReauthenticateOnOrAfter;
    protected java.lang.String _SessionIndex;
    public final static java.lang.Class version = (com.sun.identity.liberty.ws.common.jaxb.ps.impl.JAXBVersion.class);
    private static com.sun.msv.grammar.Grammar schemaFragment;

    private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
        return (com.sun.identity.liberty.ws.common.jaxb.ps.AuthenticationStatementType.class);
    }

    public com.sun.identity.liberty.ws.common.jaxb.ps.AuthnContextType getAuthnContext() {
        return _AuthnContext;
    }

    public void setAuthnContext(com.sun.identity.liberty.ws.common.jaxb.ps.AuthnContextType value) {
        _AuthnContext = value;
    }

    public java.util.Calendar getReauthenticateOnOrAfter() {
        return _ReauthenticateOnOrAfter;
    }

    public void setReauthenticateOnOrAfter(java.util.Calendar value) {
        _ReauthenticateOnOrAfter = value;
    }

    public java.lang.String getSessionIndex() {
        return _SessionIndex;
    }

    public void setSessionIndex(java.lang.String value) {
        _SessionIndex = value;
    }

    public com.sun.identity.federation.jaxb.entityconfig.impl.runtime.UnmarshallingEventHandler createUnmarshaller(com.sun.identity.federation.jaxb.entityconfig.impl.runtime.UnmarshallingContext context) {
        return new com.sun.identity.liberty.ws.common.jaxb.ps.impl.AuthenticationStatementTypeImpl.Unmarshaller(context);
    }

    public void serializeBody(com.sun.identity.federation.jaxb.entityconfig.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        super.serializeBody(context);
        if (_AuthnContext!= null) {
            if (_AuthnContext instanceof javax.xml.bind.Element) {
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _AuthnContext), "AuthnContext");
            } else {
                context.startElement("urn:liberty:iff:2003-08", "AuthnContext");
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _AuthnContext), "AuthnContext");
                context.endNamespaceDecls();
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _AuthnContext), "AuthnContext");
                context.endAttributes();
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _AuthnContext), "AuthnContext");
                context.endElement();
            }
        }
    }

    public void serializeAttributes(com.sun.identity.federation.jaxb.entityconfig.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        if (_ReauthenticateOnOrAfter!= null) {
            context.startAttribute("", "ReauthenticateOnOrAfter");
            try {
                context.text(com.sun.msv.datatype.xsd.DateTimeType.theInstance.serializeJavaObject(((java.util.Calendar) _ReauthenticateOnOrAfter), null), "ReauthenticateOnOrAfter");
            } catch (java.lang.Exception e) {
                com.sun.identity.federation.jaxb.entityconfig.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
        }
        if (_SessionIndex!= null) {
            context.startAttribute("", "SessionIndex");
            try {
                context.text(((java.lang.String) _SessionIndex), "SessionIndex");
            } catch (java.lang.Exception e) {
                com.sun.identity.federation.jaxb.entityconfig.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
        }
        super.serializeAttributes(context);
        if (_AuthnContext!= null) {
            if (_AuthnContext instanceof javax.xml.bind.Element) {
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _AuthnContext), "AuthnContext");
            }
        }
    }

    public void serializeURIs(com.sun.identity.federation.jaxb.entityconfig.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        super.serializeURIs(context);
        if (_AuthnContext!= null) {
            if (_AuthnContext instanceof javax.xml.bind.Element) {
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _AuthnContext), "AuthnContext");
            }
        }
    }

    public java.lang.Class getPrimaryInterface() {
        return (com.sun.identity.liberty.ws.common.jaxb.ps.AuthenticationStatementType.class);
    }

    public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
        if (schemaFragment == null) {
            schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.su"
+"n.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gra"
+"mmar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expressi"
+"on\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0002L\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000b"
+"expandedExpq\u0000~\u0000\u0002xpppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000pp"
+"sq\u0000~\u0000\u0000ppsr\u0000\u001dcom.sun.msv.grammar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0001pp"
+"sq\u0000~\u0000\fppsq\u0000~\u0000\fppsr\u0000\'com.sun.msv.grammar.trex.ElementPattern\u0000"
+"\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\tnameClasst\u0000\u001fLcom/sun/msv/grammar/NameClass;xr\u0000\u001e"
+"com.sun.msv.grammar.ElementExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUndeclared"
+"AttributesL\u0000\fcontentModelq\u0000~\u0000\u0002xq\u0000~\u0000\u0003pp\u0000sq\u0000~\u0000\fppsr\u0000 com.sun.m"
+"sv.grammar.OneOrMoreExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001ccom.sun.msv.grammar.Un"
+"aryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0003expq\u0000~\u0000\u0002xq\u0000~\u0000\u0003sr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5"
+"\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000psr\u0000 com.sun.msv.grammar.AttributeExp\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnameClassq\u0000~\u0000\u0011xq\u0000~\u0000\u0003q\u0000~\u0000\u0019psr\u00002com.sun.msv"
+".grammar.Expression$AnyStringExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003sq\u0000~"
+"\u0000\u0018\u0001q\u0000~\u0000\u001dsr\u0000 com.sun.msv.grammar.AnyNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dc"
+"om.sun.msv.grammar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.sun.msv.gra"
+"mmar.Expression$EpsilonExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003q\u0000~\u0000\u001eq\u0000~\u0000#"
+"sr\u0000#com.sun.msv.grammar.SimpleNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNa"
+"met\u0000\u0012Ljava/lang/String;L\u0000\fnamespaceURIq\u0000~\u0000%xq\u0000~\u0000 t\u0000@com.sun."
+"identity.liberty.ws.common.jaxb.assertion.SubjectElementt\u0000+h"
+"ttp://java.sun.com/jaxb/xjc/dummy-elementssq\u0000~\u0000\u0010pp\u0000sq\u0000~\u0000\u0000pps"
+"q\u0000~\u0000\u0010pp\u0000sq\u0000~\u0000\fppsq\u0000~\u0000\u0015q\u0000~\u0000\u0019psq\u0000~\u0000\u001aq\u0000~\u0000\u0019pq\u0000~\u0000\u001dq\u0000~\u0000!q\u0000~\u0000#sq\u0000~\u0000"
+"$t\u0000=com.sun.identity.liberty.ws.common.jaxb.assertion.Subjec"
+"tTypeq\u0000~\u0000(sq\u0000~\u0000\fppsq\u0000~\u0000\u001aq\u0000~\u0000\u0019psr\u0000\u001bcom.sun.msv.grammar.DataEx"
+"p\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/relaxng/datatype/Datatype;L\u0000\u0006except"
+"q\u0000~\u0000\u0002L\u0000\u0004namet\u0000\u001dLcom/sun/msv/util/StringPair;xq\u0000~\u0000\u0003q\u0000~\u0000\u0019psr\u0000\""
+"com.sun.msv.datatype.xsd.QnameType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000*com.sun.msv"
+".datatype.xsd.BuiltinAtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.da"
+"tatype.xsd.ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com.sun.msv.datatype.x"
+"sd.XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUriq\u0000~\u0000%L\u0000\btypeNameq"
+"\u0000~\u0000%L\u0000\nwhiteSpacet\u0000.Lcom/sun/msv/datatype/xsd/WhiteSpaceProc"
+"essor;xpt\u0000 http://www.w3.org/2001/XMLSchemat\u0000\u0005QNamesr\u00005com.s"
+"un.msv.datatype.xsd.WhiteSpaceProcessor$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000x"
+"r\u0000,com.sun.msv.datatype.xsd.WhiteSpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xp"
+"sr\u00000com.sun.msv.grammar.Expression$NullSetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001"
+"\u0002\u0000\u0000xq\u0000~\u0000\u0003q\u0000~\u0000\u0019psr\u0000\u001bcom.sun.msv.util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\t"
+"localNameq\u0000~\u0000%L\u0000\fnamespaceURIq\u0000~\u0000%xpq\u0000~\u0000>q\u0000~\u0000=sq\u0000~\u0000$t\u0000\u0004typet"
+"\u0000)http://www.w3.org/2001/XMLSchema-instanceq\u0000~\u0000#sq\u0000~\u0000$t\u0000\u0007Sub"
+"jectt\u0000%urn:oasis:names:tc:SAML:1.0:assertionsq\u0000~\u0000\u0010pp\u0000sq\u0000~\u0000\fp"
+"psq\u0000~\u0000\u0015q\u0000~\u0000\u0019psq\u0000~\u0000\u001aq\u0000~\u0000\u0019pq\u0000~\u0000\u001dq\u0000~\u0000!q\u0000~\u0000#sq\u0000~\u0000$t\u00009com.sun.ide"
+"ntity.liberty.ws.common.jaxb.ps.SubjectElementq\u0000~\u0000(sq\u0000~\u0000\u0010pp\u0000"
+"sq\u0000~\u0000\fppsq\u0000~\u0000\u0015q\u0000~\u0000\u0019psq\u0000~\u0000\u001aq\u0000~\u0000\u0019pq\u0000~\u0000\u001dq\u0000~\u0000!q\u0000~\u0000#sq\u0000~\u0000$t\u0000Dcom."
+"sun.identity.liberty.ws.common.jaxb.security.ProxySubjectEle"
+"mentq\u0000~\u0000(sq\u0000~\u0000\fppsq\u0000~\u0000\fq\u0000~\u0000\u0019psq\u0000~\u0000\u0010q\u0000~\u0000\u0019p\u0000sq\u0000~\u0000\fppsq\u0000~\u0000\u0015q\u0000~\u0000"
+"\u0019psq\u0000~\u0000\u001aq\u0000~\u0000\u0019pq\u0000~\u0000\u001dq\u0000~\u0000!q\u0000~\u0000#sq\u0000~\u0000$t\u0000Hcom.sun.identity.liber"
+"ty.ws.common.jaxb.assertion.SubjectLocalityElementq\u0000~\u0000(sq\u0000~\u0000"
+"\u0010q\u0000~\u0000\u0019p\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0010pp\u0000sq\u0000~\u0000\fppsq\u0000~\u0000\u0015q\u0000~\u0000\u0019psq\u0000~\u0000\u001aq\u0000~\u0000\u0019pq\u0000~"
+"\u0000\u001dq\u0000~\u0000!q\u0000~\u0000#sq\u0000~\u0000$t\u0000Ecom.sun.identity.liberty.ws.common.jaxb"
+".assertion.SubjectLocalityTypeq\u0000~\u0000(sq\u0000~\u0000\fppsq\u0000~\u0000\u001aq\u0000~\u0000\u0019pq\u0000~\u00006"
+"q\u0000~\u0000Fq\u0000~\u0000#sq\u0000~\u0000$t\u0000\u000fSubjectLocalityq\u0000~\u0000Kq\u0000~\u0000#sq\u0000~\u0000\fppsq\u0000~\u0000\u0015q\u0000"
+"~\u0000\u0019psq\u0000~\u0000\fq\u0000~\u0000\u0019psq\u0000~\u0000\u0010q\u0000~\u0000\u0019p\u0000sq\u0000~\u0000\fppsq\u0000~\u0000\u0015q\u0000~\u0000\u0019psq\u0000~\u0000\u001aq\u0000~\u0000\u0019"
+"pq\u0000~\u0000\u001dq\u0000~\u0000!q\u0000~\u0000#sq\u0000~\u0000$t\u0000Icom.sun.identity.liberty.ws.common."
+"jaxb.assertion.AuthorityBindingElementq\u0000~\u0000(sq\u0000~\u0000\u0010q\u0000~\u0000\u0019p\u0000sq\u0000~"
+"\u0000\u0000ppsq\u0000~\u0000\u0010pp\u0000sq\u0000~\u0000\fppsq\u0000~\u0000\u0015q\u0000~\u0000\u0019psq\u0000~\u0000\u001aq\u0000~\u0000\u0019pq\u0000~\u0000\u001dq\u0000~\u0000!q\u0000~\u0000#"
+"sq\u0000~\u0000$t\u0000Fcom.sun.identity.liberty.ws.common.jaxb.assertion.A"
+"uthorityBindingTypeq\u0000~\u0000(sq\u0000~\u0000\fppsq\u0000~\u0000\u001aq\u0000~\u0000\u0019pq\u0000~\u00006q\u0000~\u0000Fq\u0000~\u0000#s"
+"q\u0000~\u0000$t\u0000\u0010AuthorityBindingq\u0000~\u0000Kq\u0000~\u0000#sq\u0000~\u0000\fppsq\u0000~\u0000\fq\u0000~\u0000\u0019psq\u0000~\u0000\u0010"
+"q\u0000~\u0000\u0019p\u0000sq\u0000~\u0000\fppsq\u0000~\u0000\u0015q\u0000~\u0000\u0019psq\u0000~\u0000\u001aq\u0000~\u0000\u0019pq\u0000~\u0000\u001dq\u0000~\u0000!q\u0000~\u0000#sq\u0000~\u0000$"
+"t\u0000>com.sun.identity.liberty.ws.common.jaxb.ps.AuthnContextEl"
+"ementq\u0000~\u0000(sq\u0000~\u0000\u0010q\u0000~\u0000\u0019p\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0010pp\u0000sq\u0000~\u0000\fppsq\u0000~\u0000\u0015q\u0000~\u0000\u0019p"
+"sq\u0000~\u0000\u001aq\u0000~\u0000\u0019pq\u0000~\u0000\u001dq\u0000~\u0000!q\u0000~\u0000#sq\u0000~\u0000$t\u0000;com.sun.identity.liberty"
+".ws.common.jaxb.ps.AuthnContextTypeq\u0000~\u0000(sq\u0000~\u0000\fppsq\u0000~\u0000\u001aq\u0000~\u0000\u0019p"
+"q\u0000~\u00006q\u0000~\u0000Fq\u0000~\u0000#sq\u0000~\u0000$t\u0000\fAuthnContextt\u0000\u0017urn:liberty:iff:2003-"
+"08q\u0000~\u0000#sq\u0000~\u0000\u001appsq\u0000~\u00003ppsr\u0000%com.sun.msv.datatype.xsd.DateTime"
+"Type\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000)com.sun.msv.datatype.xsd.DateTimeBaseType"
+"\u0014W\u001a@3\u00a5\u00b4\u00e5\u0002\u0000\u0000xq\u0000~\u00008q\u0000~\u0000=t\u0000\bdateTimeq\u0000~\u0000Aq\u0000~\u0000Csq\u0000~\u0000Dq\u0000~\u0000\u009bq\u0000~\u0000=s"
+"q\u0000~\u0000$t\u0000\u0015AuthenticationInstantt\u0000\u0000sq\u0000~\u0000\u001appsq\u0000~\u00003q\u0000~\u0000\u0019psr\u0000#com."
+"sun.msv.datatype.xsd.AnyURIType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u00008q\u0000~\u0000=t\u0000\u0006anyU"
+"RIq\u0000~\u0000Aq\u0000~\u0000Csq\u0000~\u0000Dq\u0000~\u0000\u00a4q\u0000~\u0000=sq\u0000~\u0000$t\u0000\u0014AuthenticationMethodq\u0000~"
+"\u0000\u009fsq\u0000~\u0000\fppsq\u0000~\u0000\u001aq\u0000~\u0000\u0019pq\u0000~\u0000\u0097sq\u0000~\u0000$t\u0000\u0017ReauthenticateOnOrAfterq"
+"\u0000~\u0000\u009fq\u0000~\u0000#sq\u0000~\u0000\fppsq\u0000~\u0000\u001aq\u0000~\u0000\u0019psq\u0000~\u00003q\u0000~\u0000\u0019psr\u0000#com.sun.msv.dat"
+"atype.xsd.StringType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001Z\u0000\risAlwaysValidxq\u0000~\u00008q\u0000~\u0000=t\u0000"
+"\u0006stringsr\u00005com.sun.msv.datatype.xsd.WhiteSpaceProcessor$Pres"
+"erve\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000@\u0001q\u0000~\u0000Csq\u0000~\u0000Dq\u0000~\u0000\u00b1q\u0000~\u0000=sq\u0000~\u0000$t\u0000\fSessionI"
+"ndexq\u0000~\u0000\u009fq\u0000~\u0000#sr\u0000\"com.sun.msv.grammar.ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001"
+"\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun/msv/grammar/ExpressionPool$ClosedH"
+"ash;xpsr\u0000-com.sun.msv.grammar.ExpressionPool$ClosedHash\u00d7j\u00d0N\u00ef"
+"\u00e8\u00ed\u001c\u0003\u0000\u0003I\u0000\u0005countB\u0000\rstreamVersionL\u0000\u0006parentt\u0000$Lcom/sun/msv/gramm"
+"ar/ExpressionPool;xp\u0000\u0000\u0000/\u0001pq\u0000~\u0000Yq\u0000~\u0000nq\u0000~\u0000\u0082q\u0000~\u0000\tq\u0000~\u0000lq\u0000~\u0000\u00acq\u0000~\u0000"
+"mq\u0000~\u0000\u0017q\u0000~\u0000-q\u0000~\u0000Nq\u0000~\u0000Tq\u0000~\u0000\\q\u0000~\u0000dq\u0000~\u0000qq\u0000~\u0000yq\u0000~\u0000\u0085q\u0000~\u0000\u008dq\u0000~\u0000\u0006q\u0000~\u0000"
+"\nq\u0000~\u0000\u0005q\u0000~\u0000\u0014q\u0000~\u0000,q\u0000~\u0000Mq\u0000~\u0000Sq\u0000~\u0000[q\u0000~\u0000cq\u0000~\u0000pq\u0000~\u0000xq\u0000~\u0000\u0084q\u0000~\u0000\u008cq\u0000~\u0000"
+"*q\u0000~\u0000aq\u0000~\u0000vq\u0000~\u0000\u008aq\u0000~\u0000\u0007q\u0000~\u0000\bq\u0000~\u0000\u000eq\u0000~\u0000\u00a8q\u0000~\u0000\u000bq\u0000~\u0000\rq\u0000~\u0000Xq\u0000~\u0000\u0081q\u0000~\u0000"
+"1q\u0000~\u0000hq\u0000~\u0000}q\u0000~\u0000\u0091q\u0000~\u0000\u000fx"));
        }
        return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
    }

    public class Unmarshaller
        extends com.sun.identity.federation.jaxb.entityconfig.impl.runtime.AbstractUnmarshallingEventHandlerImpl
    {


        public Unmarshaller(com.sun.identity.federation.jaxb.entityconfig.impl.runtime.UnmarshallingContext context) {
            super(context, "-----------");
        }

        protected Unmarshaller(com.sun.identity.federation.jaxb.entityconfig.impl.runtime.UnmarshallingContext context, int startState) {
            this(context);
            state = startState;
        }

        public java.lang.Object owner() {
            return com.sun.identity.liberty.ws.common.jaxb.ps.impl.AuthenticationStatementTypeImpl.this;
        }

        public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  3 :
                        attIdx = context.getAttribute("", "SessionIndex");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 6;
                            eatText1(v);
                            continue outer;
                        }
                        state = 6;
                        continue outer;
                    case  0 :
                        attIdx = context.getAttribute("", "ReauthenticateOnOrAfter");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 3;
                            eatText2(v);
                            continue outer;
                        }
                        state = 3;
                        continue outer;
                    case  6 :
                        attIdx = context.getAttribute("", "AuthenticationInstant");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        break;
                    case  8 :
                        revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                        return ;
                    case  9 :
                        if (("AuthnContextClassRef" == ___local)&&("urn:liberty:iff:2003-08" == ___uri)) {
                            _AuthnContext = ((com.sun.identity.liberty.ws.common.jaxb.ps.impl.AuthnContextTypeImpl) spawnChildFromEnterElement((com.sun.identity.liberty.ws.common.jaxb.ps.impl.AuthnContextTypeImpl.class), 10, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("AuthenticationContextStatement" == ___local)&&("urn:liberty:ac:2003-08" == ___uri)) {
                            _AuthnContext = ((com.sun.identity.liberty.ws.common.jaxb.ps.impl.AuthnContextTypeImpl) spawnChildFromEnterElement((com.sun.identity.liberty.ws.common.jaxb.ps.impl.AuthnContextTypeImpl.class), 10, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("AuthenticationContextStatement" == ___local)&&("urn:liberty:ac:2003-08" == ___uri)) {
                            _AuthnContext = ((com.sun.identity.liberty.ws.common.jaxb.ps.impl.AuthnContextTypeImpl) spawnChildFromEnterElement((com.sun.identity.liberty.ws.common.jaxb.ps.impl.AuthnContextTypeImpl.class), 10, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("AuthnContextStatementRef" == ___local)&&("urn:liberty:iff:2003-08" == ___uri)) {
                            _AuthnContext = ((com.sun.identity.liberty.ws.common.jaxb.ps.impl.AuthnContextTypeImpl) spawnChildFromEnterElement((com.sun.identity.liberty.ws.common.jaxb.ps.impl.AuthnContextTypeImpl.class), 10, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        break;
                    case  7 :
                        if (("AuthnContext" == ___local)&&("urn:liberty:iff:2003-08" == ___uri)) {
                            _AuthnContext = ((com.sun.identity.liberty.ws.common.jaxb.ps.impl.AuthnContextElementImpl) spawnChildFromEnterElement((com.sun.identity.liberty.ws.common.jaxb.ps.impl.AuthnContextElementImpl.class), 8, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("AuthnContext" == ___local)&&("urn:liberty:iff:2003-08" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 9;
                            return ;
                        }
                        state = 8;
                        continue outer;
                }
                super.enterElement(___uri, ___local, ___qname, __atts);
                break;
            }
        }

        private void eatText1(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _SessionIndex = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText2(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _ReauthenticateOnOrAfter = ((java.util.Calendar) com.sun.msv.datatype.xsd.DateTimeType.theInstance.createJavaObject(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value), null));
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  3 :
                        attIdx = context.getAttribute("", "SessionIndex");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 6;
                            eatText1(v);
                            continue outer;
                        }
                        state = 6;
                        continue outer;
                    case  0 :
                        attIdx = context.getAttribute("", "ReauthenticateOnOrAfter");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 3;
                            eatText2(v);
                            continue outer;
                        }
                        state = 3;
                        continue outer;
                    case  6 :
                        attIdx = context.getAttribute("", "AuthenticationInstant");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                    case  10 :
                        if (("AuthnContext" == ___local)&&("urn:liberty:iff:2003-08" == ___uri)) {
                            context.popAttributes();
                            state = 8;
                            return ;
                        }
                        break;
                    case  8 :
                        revertToParentFromLeaveElement(___uri, ___local, ___qname);
                        return ;
                    case  7 :
                        state = 8;
                        continue outer;
                }
                super.leaveElement(___uri, ___local, ___qname);
                break;
            }
        }

        public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  3 :
                        if (("SessionIndex" == ___local)&&("" == ___uri)) {
                            state = 4;
                            return ;
                        }
                        state = 6;
                        continue outer;
                    case  0 :
                        if (("ReauthenticateOnOrAfter" == ___local)&&("" == ___uri)) {
                            state = 1;
                            return ;
                        }
                        state = 3;
                        continue outer;
                    case  6 :
                        if (("AuthenticationInstant" == ___local)&&("" == ___uri)) {
                            spawnHandlerFromEnterAttribute((((com.sun.identity.liberty.ws.common.jaxb.assertion.impl.AuthenticationStatementTypeImpl)com.sun.identity.liberty.ws.common.jaxb.ps.impl.AuthenticationStatementTypeImpl.this).new Unmarshaller(context)), 7, ___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                    case  8 :
                        revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                        return ;
                    case  7 :
                        state = 8;
                        continue outer;
                }
                super.enterAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  5 :
                        if (("SessionIndex" == ___local)&&("" == ___uri)) {
                            state = 6;
                            return ;
                        }
                        break;
                    case  3 :
                        attIdx = context.getAttribute("", "SessionIndex");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 6;
                            eatText1(v);
                            continue outer;
                        }
                        state = 6;
                        continue outer;
                    case  0 :
                        attIdx = context.getAttribute("", "ReauthenticateOnOrAfter");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 3;
                            eatText2(v);
                            continue outer;
                        }
                        state = 3;
                        continue outer;
                    case  6 :
                        attIdx = context.getAttribute("", "AuthenticationInstant");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                    case  8 :
                        revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                        return ;
                    case  2 :
                        if (("ReauthenticateOnOrAfter" == ___local)&&("" == ___uri)) {
                            state = 3;
                            return ;
                        }
                        break;
                    case  7 :
                        state = 8;
                        continue outer;
                }
                super.leaveAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void handleText(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                try {
                    switch (state) {
                        case  3 :
                            attIdx = context.getAttribute("", "SessionIndex");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 6;
                                eatText1(v);
                                continue outer;
                            }
                            state = 6;
                            continue outer;
                        case  0 :
                            attIdx = context.getAttribute("", "ReauthenticateOnOrAfter");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 3;
                                eatText2(v);
                                continue outer;
                            }
                            state = 3;
                            continue outer;
                        case  1 :
                            state = 2;
                            eatText2(value);
                            return ;
                        case  6 :
                            attIdx = context.getAttribute("", "AuthenticationInstant");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            break;
                        case  4 :
                            state = 5;
                            eatText1(value);
                            return ;
                        case  8 :
                            revertToParentFromText(value);
                            return ;
                        case  7 :
                            state = 8;
                            continue outer;
                    }
                } catch (java.lang.RuntimeException e) {
                    handleUnexpectedTextException(value, e);
                }
                break;
            }
        }

    }

}
