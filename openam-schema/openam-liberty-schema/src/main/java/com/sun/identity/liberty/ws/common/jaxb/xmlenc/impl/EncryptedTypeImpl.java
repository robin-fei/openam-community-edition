//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v1.0.6-b27-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2012.06.11 at 10:33:54 AM PDT 
//


package com.sun.identity.liberty.ws.common.jaxb.xmlenc.impl;

public class EncryptedTypeImpl implements com.sun.identity.liberty.ws.common.jaxb.xmlenc.EncryptedType, com.sun.xml.bind.JAXBObject, com.sun.identity.federation.jaxb.entityconfig.impl.runtime.UnmarshallableObject, com.sun.identity.federation.jaxb.entityconfig.impl.runtime.XMLSerializable, com.sun.xml.bind.marshaller.IdentifiableObject, com.sun.identity.federation.jaxb.entityconfig.impl.runtime.ValidatableObject
{

    protected com.sun.identity.liberty.ws.common.jaxb.xmlsig.KeyInfoType _KeyInfo;
    protected com.sun.identity.liberty.ws.common.jaxb.xmlenc.EncryptionMethodType _EncryptionMethod;
    protected java.lang.String _Encoding;
    protected java.lang.String _Type;
    protected java.lang.String _MimeType;
    protected java.lang.String _Id;
    protected com.sun.identity.liberty.ws.common.jaxb.xmlenc.CipherDataType _CipherData;
    protected com.sun.identity.liberty.ws.common.jaxb.xmlenc.EncryptionPropertiesType _EncryptionProperties;
    public final static java.lang.Class version = (com.sun.identity.liberty.ws.common.jaxb.xmlenc.impl.JAXBVersion.class);
    private static com.sun.msv.grammar.Grammar schemaFragment;

    private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
        return (com.sun.identity.liberty.ws.common.jaxb.xmlenc.EncryptedType.class);
    }

    public com.sun.identity.liberty.ws.common.jaxb.xmlsig.KeyInfoType getKeyInfo() {
        return _KeyInfo;
    }

    public void setKeyInfo(com.sun.identity.liberty.ws.common.jaxb.xmlsig.KeyInfoType value) {
        _KeyInfo = value;
    }

    public com.sun.identity.liberty.ws.common.jaxb.xmlenc.EncryptionMethodType getEncryptionMethod() {
        return _EncryptionMethod;
    }

    public void setEncryptionMethod(com.sun.identity.liberty.ws.common.jaxb.xmlenc.EncryptionMethodType value) {
        _EncryptionMethod = value;
    }

    public java.lang.String getEncoding() {
        return _Encoding;
    }

    public void setEncoding(java.lang.String value) {
        _Encoding = value;
    }

    public java.lang.String getType() {
        return _Type;
    }

    public void setType(java.lang.String value) {
        _Type = value;
    }

    public java.lang.String getMimeType() {
        return _MimeType;
    }

    public void setMimeType(java.lang.String value) {
        _MimeType = value;
    }

    public java.lang.String getId() {
        return _Id;
    }

    public void setId(java.lang.String value) {
        _Id = value;
    }

    public com.sun.identity.liberty.ws.common.jaxb.xmlenc.CipherDataType getCipherData() {
        return _CipherData;
    }

    public void setCipherData(com.sun.identity.liberty.ws.common.jaxb.xmlenc.CipherDataType value) {
        _CipherData = value;
    }

    public com.sun.identity.liberty.ws.common.jaxb.xmlenc.EncryptionPropertiesType getEncryptionProperties() {
        return _EncryptionProperties;
    }

    public void setEncryptionProperties(com.sun.identity.liberty.ws.common.jaxb.xmlenc.EncryptionPropertiesType value) {
        _EncryptionProperties = value;
    }

    public com.sun.identity.federation.jaxb.entityconfig.impl.runtime.UnmarshallingEventHandler createUnmarshaller(com.sun.identity.federation.jaxb.entityconfig.impl.runtime.UnmarshallingContext context) {
        return new com.sun.identity.liberty.ws.common.jaxb.xmlenc.impl.EncryptedTypeImpl.Unmarshaller(context);
    }

    public void serializeBody(com.sun.identity.federation.jaxb.entityconfig.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        if (_EncryptionMethod!= null) {
            context.startElement("http://www.w3.org/2001/04/xmlenc#", "EncryptionMethod");
            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _EncryptionMethod), "EncryptionMethod");
            context.endNamespaceDecls();
            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _EncryptionMethod), "EncryptionMethod");
            context.endAttributes();
            context.childAsBody(((com.sun.xml.bind.JAXBObject) _EncryptionMethod), "EncryptionMethod");
            context.endElement();
        }
        if (_KeyInfo!= null) {
            if (_KeyInfo instanceof javax.xml.bind.Element) {
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _KeyInfo), "KeyInfo");
            } else {
                context.startElement("http://www.w3.org/2000/09/xmldsig#", "KeyInfo");
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _KeyInfo), "KeyInfo");
                context.endNamespaceDecls();
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _KeyInfo), "KeyInfo");
                context.endAttributes();
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _KeyInfo), "KeyInfo");
                context.endElement();
            }
        }
        if (_CipherData instanceof javax.xml.bind.Element) {
            context.childAsBody(((com.sun.xml.bind.JAXBObject) _CipherData), "CipherData");
        } else {
            context.startElement("http://www.w3.org/2001/04/xmlenc#", "CipherData");
            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _CipherData), "CipherData");
            context.endNamespaceDecls();
            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _CipherData), "CipherData");
            context.endAttributes();
            context.childAsBody(((com.sun.xml.bind.JAXBObject) _CipherData), "CipherData");
            context.endElement();
        }
        if (_EncryptionProperties!= null) {
            if (_EncryptionProperties instanceof javax.xml.bind.Element) {
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _EncryptionProperties), "EncryptionProperties");
            } else {
                context.startElement("http://www.w3.org/2001/04/xmlenc#", "EncryptionProperties");
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _EncryptionProperties), "EncryptionProperties");
                context.endNamespaceDecls();
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _EncryptionProperties), "EncryptionProperties");
                context.endAttributes();
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _EncryptionProperties), "EncryptionProperties");
                context.endElement();
            }
        }
    }

    public void serializeAttributes(com.sun.identity.federation.jaxb.entityconfig.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        if (_Encoding!= null) {
            context.startAttribute("", "Encoding");
            try {
                context.text(((java.lang.String) _Encoding), "Encoding");
            } catch (java.lang.Exception e) {
                com.sun.identity.federation.jaxb.entityconfig.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
        }
        if (_Id!= null) {
            context.startAttribute("", "Id");
            try {
                context.text(context.onID(this, ((java.lang.String) _Id)), "Id");
            } catch (java.lang.Exception e) {
                com.sun.identity.federation.jaxb.entityconfig.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
        }
        if (_MimeType!= null) {
            context.startAttribute("", "MimeType");
            try {
                context.text(((java.lang.String) _MimeType), "MimeType");
            } catch (java.lang.Exception e) {
                com.sun.identity.federation.jaxb.entityconfig.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
        }
        if (_Type!= null) {
            context.startAttribute("", "Type");
            try {
                context.text(((java.lang.String) _Type), "Type");
            } catch (java.lang.Exception e) {
                com.sun.identity.federation.jaxb.entityconfig.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
        }
        if (_KeyInfo!= null) {
            if (_KeyInfo instanceof javax.xml.bind.Element) {
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _KeyInfo), "KeyInfo");
            }
        }
        if (_CipherData instanceof javax.xml.bind.Element) {
            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _CipherData), "CipherData");
        }
        if (_EncryptionProperties!= null) {
            if (_EncryptionProperties instanceof javax.xml.bind.Element) {
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _EncryptionProperties), "EncryptionProperties");
            }
        }
    }

    public void serializeURIs(com.sun.identity.federation.jaxb.entityconfig.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        if (_KeyInfo!= null) {
            if (_KeyInfo instanceof javax.xml.bind.Element) {
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _KeyInfo), "KeyInfo");
            }
        }
        if (_CipherData instanceof javax.xml.bind.Element) {
            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _CipherData), "CipherData");
        }
        if (_EncryptionProperties!= null) {
            if (_EncryptionProperties instanceof javax.xml.bind.Element) {
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _EncryptionProperties), "EncryptionProperties");
            }
        }
    }

    public java.lang.String ____jaxb____getId() {
        return ((java.lang.String) _Id);
    }

    public java.lang.Class getPrimaryInterface() {
        return (com.sun.identity.liberty.ws.common.jaxb.xmlenc.EncryptedType.class);
    }

    public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
        if (schemaFragment == null) {
            schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.su"
+"n.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gra"
+"mmar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expressi"
+"on\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0002L\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000b"
+"expandedExpq\u0000~\u0000\u0002xpppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000pp"
+"sq\u0000~\u0000\u0000ppsr\u0000\u001dcom.sun.msv.grammar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0001pp"
+"sr\u0000\'com.sun.msv.grammar.trex.ElementPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\tnam"
+"eClasst\u0000\u001fLcom/sun/msv/grammar/NameClass;xr\u0000\u001ecom.sun.msv.gram"
+"mar.ElementExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAttributesL\u0000\fcon"
+"tentModelq\u0000~\u0000\u0002xq\u0000~\u0000\u0003sr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005value"
+"xp\u0000p\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u000epp\u0000sq\u0000~\u0000\fppsr\u0000 com.sun.msv.grammar.OneOrM"
+"oreExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001ccom.sun.msv.grammar.UnaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001"
+"L\u0000\u0003expq\u0000~\u0000\u0002xq\u0000~\u0000\u0003q\u0000~\u0000\u0013psr\u0000 com.sun.msv.grammar.AttributeExp\u0000"
+"\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnameClassq\u0000~\u0000\u000fxq\u0000~\u0000\u0003q\u0000~\u0000\u0013psr\u00002com.su"
+"n.msv.grammar.Expression$AnyStringExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000"
+"\u0003sq\u0000~\u0000\u0012\u0001q\u0000~\u0000\u001dsr\u0000 com.sun.msv.grammar.AnyNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000"
+"xr\u0000\u001dcom.sun.msv.grammar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.sun.ms"
+"v.grammar.Expression$EpsilonExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003q\u0000~\u0000\u001e"
+"q\u0000~\u0000#sr\u0000#com.sun.msv.grammar.SimpleNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlo"
+"calNamet\u0000\u0012Ljava/lang/String;L\u0000\fnamespaceURIq\u0000~\u0000%xq\u0000~\u0000 t\u0000Ccom"
+".sun.identity.liberty.ws.common.jaxb.xmlenc.EncryptionMethod"
+"Typet\u0000+http://java.sun.com/jaxb/xjc/dummy-elementssq\u0000~\u0000\fppsq"
+"\u0000~\u0000\u001aq\u0000~\u0000\u0013psr\u0000\u001bcom.sun.msv.grammar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001f"
+"Lorg/relaxng/datatype/Datatype;L\u0000\u0006exceptq\u0000~\u0000\u0002L\u0000\u0004namet\u0000\u001dLcom/"
+"sun/msv/util/StringPair;xq\u0000~\u0000\u0003q\u0000~\u0000\u0013psr\u0000\"com.sun.msv.datatype"
+".xsd.QnameType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000*com.sun.msv.datatype.xsd.Builti"
+"nAtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.datatype.xsd.ConcreteT"
+"ype\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com.sun.msv.datatype.xsd.XSDatatypeImpl\u0000\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUriq\u0000~\u0000%L\u0000\btypeNameq\u0000~\u0000%L\u0000\nwhiteSpacet\u0000."
+"Lcom/sun/msv/datatype/xsd/WhiteSpaceProcessor;xpt\u0000 http://ww"
+"w.w3.org/2001/XMLSchemat\u0000\u0005QNamesr\u00005com.sun.msv.datatype.xsd."
+"WhiteSpaceProcessor$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun.msv.datat"
+"ype.xsd.WhiteSpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.sun.msv.gram"
+"mar.Expression$NullSetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003q\u0000~\u0000\u0013psr\u0000\u001bc"
+"om.sun.msv.util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000%L\u0000\fnam"
+"espaceURIq\u0000~\u0000%xpq\u0000~\u00006q\u0000~\u00005sq\u0000~\u0000$t\u0000\u0004typet\u0000)http://www.w3.org/"
+"2001/XMLSchema-instanceq\u0000~\u0000#sq\u0000~\u0000$t\u0000\u0010EncryptionMethodt\u0000!http"
+"://www.w3.org/2001/04/xmlenc#q\u0000~\u0000#sq\u0000~\u0000\fppsq\u0000~\u0000\fq\u0000~\u0000\u0013psq\u0000~\u0000\u000e"
+"q\u0000~\u0000\u0013p\u0000sq\u0000~\u0000\fppsq\u0000~\u0000\u0017q\u0000~\u0000\u0013psq\u0000~\u0000\u001aq\u0000~\u0000\u0013pq\u0000~\u0000\u001dq\u0000~\u0000!q\u0000~\u0000#sq\u0000~\u0000$"
+"t\u0000=com.sun.identity.liberty.ws.common.jaxb.xmlsig.KeyInfoEle"
+"mentq\u0000~\u0000(sq\u0000~\u0000\u000eq\u0000~\u0000\u0013p\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u000epp\u0000sq\u0000~\u0000\fppsq\u0000~\u0000\u0017q\u0000~\u0000\u0013ps"
+"q\u0000~\u0000\u001aq\u0000~\u0000\u0013pq\u0000~\u0000\u001dq\u0000~\u0000!q\u0000~\u0000#sq\u0000~\u0000$t\u0000:com.sun.identity.liberty."
+"ws.common.jaxb.xmlsig.KeyInfoTypeq\u0000~\u0000(sq\u0000~\u0000\fppsq\u0000~\u0000\u001aq\u0000~\u0000\u0013pq\u0000"
+"~\u0000.q\u0000~\u0000>q\u0000~\u0000#sq\u0000~\u0000$t\u0000\u0007KeyInfot\u0000\"http://www.w3.org/2000/09/xm"
+"ldsig#q\u0000~\u0000#sq\u0000~\u0000\fppsq\u0000~\u0000\u000epp\u0000sq\u0000~\u0000\fppsq\u0000~\u0000\u0017q\u0000~\u0000\u0013psq\u0000~\u0000\u001aq\u0000~\u0000\u0013p"
+"q\u0000~\u0000\u001dq\u0000~\u0000!q\u0000~\u0000#sq\u0000~\u0000$t\u0000@com.sun.identity.liberty.ws.common.j"
+"axb.xmlenc.CipherDataElementq\u0000~\u0000(sq\u0000~\u0000\u000epp\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u000epp\u0000s"
+"q\u0000~\u0000\fppsq\u0000~\u0000\u0017q\u0000~\u0000\u0013psq\u0000~\u0000\u001aq\u0000~\u0000\u0013pq\u0000~\u0000\u001dq\u0000~\u0000!q\u0000~\u0000#sq\u0000~\u0000$t\u0000=com.s"
+"un.identity.liberty.ws.common.jaxb.xmlenc.CipherDataTypeq\u0000~\u0000"
+"(sq\u0000~\u0000\fppsq\u0000~\u0000\u001aq\u0000~\u0000\u0013pq\u0000~\u0000.q\u0000~\u0000>q\u0000~\u0000#sq\u0000~\u0000$t\u0000\nCipherDataq\u0000~\u0000C"
+"sq\u0000~\u0000\fppsq\u0000~\u0000\fq\u0000~\u0000\u0013psq\u0000~\u0000\u000eq\u0000~\u0000\u0013p\u0000sq\u0000~\u0000\fppsq\u0000~\u0000\u0017q\u0000~\u0000\u0013psq\u0000~\u0000\u001aq"
+"\u0000~\u0000\u0013pq\u0000~\u0000\u001dq\u0000~\u0000!q\u0000~\u0000#sq\u0000~\u0000$t\u0000Jcom.sun.identity.liberty.ws.com"
+"mon.jaxb.xmlenc.EncryptionPropertiesElementq\u0000~\u0000(sq\u0000~\u0000\u000eq\u0000~\u0000\u0013p"
+"\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u000epp\u0000sq\u0000~\u0000\fppsq\u0000~\u0000\u0017q\u0000~\u0000\u0013psq\u0000~\u0000\u001aq\u0000~\u0000\u0013pq\u0000~\u0000\u001dq\u0000~\u0000!"
+"q\u0000~\u0000#sq\u0000~\u0000$t\u0000Gcom.sun.identity.liberty.ws.common.jaxb.xmlenc"
+".EncryptionPropertiesTypeq\u0000~\u0000(sq\u0000~\u0000\fppsq\u0000~\u0000\u001aq\u0000~\u0000\u0013pq\u0000~\u0000.q\u0000~\u0000>"
+"q\u0000~\u0000#sq\u0000~\u0000$t\u0000\u0014EncryptionPropertiesq\u0000~\u0000Cq\u0000~\u0000#sq\u0000~\u0000\fppsq\u0000~\u0000\u001aq\u0000"
+"~\u0000\u0013psq\u0000~\u0000+q\u0000~\u0000\u0013psr\u0000#com.sun.msv.datatype.xsd.AnyURIType\u0000\u0000\u0000\u0000\u0000"
+"\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u00000q\u0000~\u00005t\u0000\u0006anyURIq\u0000~\u00009q\u0000~\u0000;sq\u0000~\u0000<q\u0000~\u0000\u0085q\u0000~\u00005sq\u0000~\u0000$t\u0000"
+"\bEncodingt\u0000\u0000q\u0000~\u0000#sq\u0000~\u0000\fppsq\u0000~\u0000\u001aq\u0000~\u0000\u0013psq\u0000~\u0000+ppsr\u0000\u001fcom.sun.msv"
+".datatype.xsd.IDType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000#com.sun.msv.datatype.xsd."
+"NcnameType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\"com.sun.msv.datatype.xsd.TokenType\u0000"
+"\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000#com.sun.msv.datatype.xsd.StringType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001"
+"Z\u0000\risAlwaysValidxq\u0000~\u00000q\u0000~\u00005t\u0000\u0002IDq\u0000~\u00009\u0000q\u0000~\u0000;sq\u0000~\u0000<q\u0000~\u0000\u0092q\u0000~\u00005s"
+"q\u0000~\u0000$t\u0000\u0002Idq\u0000~\u0000\u0089q\u0000~\u0000#sq\u0000~\u0000\fppsq\u0000~\u0000\u001aq\u0000~\u0000\u0013psq\u0000~\u0000+q\u0000~\u0000\u0013psq\u0000~\u0000\u0090q\u0000"
+"~\u00005t\u0000\u0006stringsr\u00005com.sun.msv.datatype.xsd.WhiteSpaceProcessor"
+"$Preserve\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u00008\u0001q\u0000~\u0000;sq\u0000~\u0000<q\u0000~\u0000\u009aq\u0000~\u00005sq\u0000~\u0000$t\u0000\bMim"
+"eTypeq\u0000~\u0000\u0089q\u0000~\u0000#sq\u0000~\u0000\fppsq\u0000~\u0000\u001aq\u0000~\u0000\u0013pq\u0000~\u0000\u0082sq\u0000~\u0000$t\u0000\u0004Typeq\u0000~\u0000\u0089q\u0000"
+"~\u0000#sr\u0000\"com.sun.msv.grammar.ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTa"
+"blet\u0000/Lcom/sun/msv/grammar/ExpressionPool$ClosedHash;xpsr\u0000-c"
+"om.sun.msv.grammar.ExpressionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0003\u0000\u0003I\u0000\u0005co"
+"untB\u0000\rstreamVersionL\u0000\u0006parentt\u0000$Lcom/sun/msv/grammar/Expressi"
+"onPool;xp\u0000\u0000\u0000\'\u0001pq\u0000~\u0000Yq\u0000~\u0000mq\u0000~\u0000\nq\u0000~\u0000\u00a0q\u0000~\u0000\bq\u0000~\u0000\u0019q\u0000~\u0000Hq\u0000~\u0000Pq\u0000~\u0000\\"
+"q\u0000~\u0000dq\u0000~\u0000pq\u0000~\u0000xq\u0000~\u0000\u0006q\u0000~\u0000\u0005q\u0000~\u0000\u008aq\u0000~\u0000\u000bq\u0000~\u0000\u0016q\u0000~\u0000Gq\u0000~\u0000Oq\u0000~\u0000[q\u0000~\u0000c"
+"q\u0000~\u0000oq\u0000~\u0000wq\u0000~\u0000\u0014q\u0000~\u0000Mq\u0000~\u0000aq\u0000~\u0000uq\u0000~\u0000\u0007q\u0000~\u0000\u0096q\u0000~\u0000\rq\u0000~\u0000Dq\u0000~\u0000lq\u0000~\u0000\t"
+"q\u0000~\u0000)q\u0000~\u0000Tq\u0000~\u0000hq\u0000~\u0000|q\u0000~\u0000\u0080q\u0000~\u0000Ex"));
        }
        return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
    }

    public class Unmarshaller
        extends com.sun.identity.federation.jaxb.entityconfig.impl.runtime.AbstractUnmarshallingEventHandlerImpl
    {


        public Unmarshaller(com.sun.identity.federation.jaxb.entityconfig.impl.runtime.UnmarshallingContext context) {
            super(context, "-------------------------");
        }

        protected Unmarshaller(com.sun.identity.federation.jaxb.entityconfig.impl.runtime.UnmarshallingContext context, int startState) {
            this(context);
            state = startState;
        }

        public java.lang.Object owner() {
            return com.sun.identity.liberty.ws.common.jaxb.xmlenc.impl.EncryptedTypeImpl.this;
        }

        public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  0 :
                        attIdx = context.getAttribute("", "Encoding");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 3;
                            eatText1(v);
                            continue outer;
                        }
                        state = 3;
                        continue outer;
                    case  13 :
                        attIdx = context.getAttribute("", "Algorithm");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        break;
                    case  21 :
                        if (("CipherValue" == ___local)&&("http://www.w3.org/2001/04/xmlenc#" == ___uri)) {
                            _CipherData = ((com.sun.identity.liberty.ws.common.jaxb.xmlenc.impl.CipherDataTypeImpl) spawnChildFromEnterElement((com.sun.identity.liberty.ws.common.jaxb.xmlenc.impl.CipherDataTypeImpl.class), 22, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("CipherReference" == ___local)&&("http://www.w3.org/2001/04/xmlenc#" == ___uri)) {
                            _CipherData = ((com.sun.identity.liberty.ws.common.jaxb.xmlenc.impl.CipherDataTypeImpl) spawnChildFromEnterElement((com.sun.identity.liberty.ws.common.jaxb.xmlenc.impl.CipherDataTypeImpl.class), 22, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("CipherReference" == ___local)&&("http://www.w3.org/2001/04/xmlenc#" == ___uri)) {
                            _CipherData = ((com.sun.identity.liberty.ws.common.jaxb.xmlenc.impl.CipherDataTypeImpl) spawnChildFromEnterElement((com.sun.identity.liberty.ws.common.jaxb.xmlenc.impl.CipherDataTypeImpl.class), 22, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        break;
                    case  15 :
                        if (("KeyInfo" == ___local)&&("http://www.w3.org/2000/09/xmldsig#" == ___uri)) {
                            _KeyInfo = ((com.sun.identity.liberty.ws.common.jaxb.xmlsig.impl.KeyInfoElementImpl) spawnChildFromEnterElement((com.sun.identity.liberty.ws.common.jaxb.xmlsig.impl.KeyInfoElementImpl.class), 16, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("KeyInfo" == ___local)&&("http://www.w3.org/2000/09/xmldsig#" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 23;
                            return ;
                        }
                        state = 16;
                        continue outer;
                    case  3 :
                        attIdx = context.getAttribute("", "Id");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 6;
                            eatText2(v);
                            continue outer;
                        }
                        state = 6;
                        continue outer;
                    case  6 :
                        attIdx = context.getAttribute("", "MimeType");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 9;
                            eatText3(v);
                            continue outer;
                        }
                        state = 9;
                        continue outer;
                    case  23 :
                        attIdx = context.getAttribute("", "Id");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("KeyName" == ___local)&&("http://www.w3.org/2000/09/xmldsig#" == ___uri)) {
                            _KeyInfo = ((com.sun.identity.liberty.ws.common.jaxb.xmlsig.impl.KeyInfoTypeImpl) spawnChildFromEnterElement((com.sun.identity.liberty.ws.common.jaxb.xmlsig.impl.KeyInfoTypeImpl.class), 24, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("KeyValue" == ___local)&&("http://www.w3.org/2000/09/xmldsig#" == ___uri)) {
                            _KeyInfo = ((com.sun.identity.liberty.ws.common.jaxb.xmlsig.impl.KeyInfoTypeImpl) spawnChildFromEnterElement((com.sun.identity.liberty.ws.common.jaxb.xmlsig.impl.KeyInfoTypeImpl.class), 24, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("RetrievalMethod" == ___local)&&("http://www.w3.org/2000/09/xmldsig#" == ___uri)) {
                            _KeyInfo = ((com.sun.identity.liberty.ws.common.jaxb.xmlsig.impl.KeyInfoTypeImpl) spawnChildFromEnterElement((com.sun.identity.liberty.ws.common.jaxb.xmlsig.impl.KeyInfoTypeImpl.class), 24, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("X509Data" == ___local)&&("http://www.w3.org/2000/09/xmldsig#" == ___uri)) {
                            _KeyInfo = ((com.sun.identity.liberty.ws.common.jaxb.xmlsig.impl.KeyInfoTypeImpl) spawnChildFromEnterElement((com.sun.identity.liberty.ws.common.jaxb.xmlsig.impl.KeyInfoTypeImpl.class), 24, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("PGPData" == ___local)&&("http://www.w3.org/2000/09/xmldsig#" == ___uri)) {
                            _KeyInfo = ((com.sun.identity.liberty.ws.common.jaxb.xmlsig.impl.KeyInfoTypeImpl) spawnChildFromEnterElement((com.sun.identity.liberty.ws.common.jaxb.xmlsig.impl.KeyInfoTypeImpl.class), 24, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("SPKIData" == ___local)&&("http://www.w3.org/2000/09/xmldsig#" == ___uri)) {
                            _KeyInfo = ((com.sun.identity.liberty.ws.common.jaxb.xmlsig.impl.KeyInfoTypeImpl) spawnChildFromEnterElement((com.sun.identity.liberty.ws.common.jaxb.xmlsig.impl.KeyInfoTypeImpl.class), 24, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("MgmtData" == ___local)&&("http://www.w3.org/2000/09/xmldsig#" == ___uri)) {
                            _KeyInfo = ((com.sun.identity.liberty.ws.common.jaxb.xmlsig.impl.KeyInfoTypeImpl) spawnChildFromEnterElement((com.sun.identity.liberty.ws.common.jaxb.xmlsig.impl.KeyInfoTypeImpl.class), 24, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (!(("" == ___uri)||("http://www.w3.org/2000/09/xmldsig#" == ___uri))) {
                            _KeyInfo = ((com.sun.identity.liberty.ws.common.jaxb.xmlsig.impl.KeyInfoTypeImpl) spawnChildFromEnterElement((com.sun.identity.liberty.ws.common.jaxb.xmlsig.impl.KeyInfoTypeImpl.class), 24, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        _KeyInfo = ((com.sun.identity.liberty.ws.common.jaxb.xmlsig.impl.KeyInfoTypeImpl) spawnChildFromEnterElement((com.sun.identity.liberty.ws.common.jaxb.xmlsig.impl.KeyInfoTypeImpl.class), 24, ___uri, ___local, ___qname, __atts));
                        return ;
                    case  17 :
                        if (("EncryptionProperties" == ___local)&&("http://www.w3.org/2001/04/xmlenc#" == ___uri)) {
                            _EncryptionProperties = ((com.sun.identity.liberty.ws.common.jaxb.xmlenc.impl.EncryptionPropertiesElementImpl) spawnChildFromEnterElement((com.sun.identity.liberty.ws.common.jaxb.xmlenc.impl.EncryptionPropertiesElementImpl.class), 18, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("EncryptionProperties" == ___local)&&("http://www.w3.org/2001/04/xmlenc#" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 19;
                            return ;
                        }
                        state = 18;
                        continue outer;
                    case  19 :
                        attIdx = context.getAttribute("", "Id");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("EncryptionProperty" == ___local)&&("http://www.w3.org/2001/04/xmlenc#" == ___uri)) {
                            _EncryptionProperties = ((com.sun.identity.liberty.ws.common.jaxb.xmlenc.impl.EncryptionPropertiesTypeImpl) spawnChildFromEnterElement((com.sun.identity.liberty.ws.common.jaxb.xmlenc.impl.EncryptionPropertiesTypeImpl.class), 20, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("EncryptionProperty" == ___local)&&("http://www.w3.org/2001/04/xmlenc#" == ___uri)) {
                            _EncryptionProperties = ((com.sun.identity.liberty.ws.common.jaxb.xmlenc.impl.EncryptionPropertiesTypeImpl) spawnChildFromEnterElement((com.sun.identity.liberty.ws.common.jaxb.xmlenc.impl.EncryptionPropertiesTypeImpl.class), 20, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        break;
                    case  12 :
                        if (("EncryptionMethod" == ___local)&&("http://www.w3.org/2001/04/xmlenc#" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 13;
                            return ;
                        }
                        state = 15;
                        continue outer;
                    case  16 :
                        if (("CipherData" == ___local)&&("http://www.w3.org/2001/04/xmlenc#" == ___uri)) {
                            _CipherData = ((com.sun.identity.liberty.ws.common.jaxb.xmlenc.impl.CipherDataElementImpl) spawnChildFromEnterElement((com.sun.identity.liberty.ws.common.jaxb.xmlenc.impl.CipherDataElementImpl.class), 17, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("CipherData" == ___local)&&("http://www.w3.org/2001/04/xmlenc#" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 21;
                            return ;
                        }
                        break;
                    case  18 :
                        revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                        return ;
                    case  9 :
                        attIdx = context.getAttribute("", "Type");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 12;
                            eatText4(v);
                            continue outer;
                        }
                        state = 12;
                        continue outer;
                }
                super.enterElement(___uri, ___local, ___qname, __atts);
                break;
            }
        }

        private void eatText1(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Encoding = com.sun.xml.bind.WhiteSpaceProcessor.collapse(value);
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText2(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Id = context.addToIdTable(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText3(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _MimeType = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText4(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Type = com.sun.xml.bind.WhiteSpaceProcessor.collapse(value);
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  24 :
                        if (("KeyInfo" == ___local)&&("http://www.w3.org/2000/09/xmldsig#" == ___uri)) {
                            context.popAttributes();
                            state = 16;
                            return ;
                        }
                        break;
                    case  0 :
                        attIdx = context.getAttribute("", "Encoding");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 3;
                            eatText1(v);
                            continue outer;
                        }
                        state = 3;
                        continue outer;
                    case  13 :
                        attIdx = context.getAttribute("", "Algorithm");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                    case  15 :
                        state = 16;
                        continue outer;
                    case  3 :
                        attIdx = context.getAttribute("", "Id");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 6;
                            eatText2(v);
                            continue outer;
                        }
                        state = 6;
                        continue outer;
                    case  22 :
                        if (("CipherData" == ___local)&&("http://www.w3.org/2001/04/xmlenc#" == ___uri)) {
                            context.popAttributes();
                            state = 17;
                            return ;
                        }
                        break;
                    case  14 :
                        if (("EncryptionMethod" == ___local)&&("http://www.w3.org/2001/04/xmlenc#" == ___uri)) {
                            context.popAttributes();
                            state = 15;
                            return ;
                        }
                        break;
                    case  6 :
                        attIdx = context.getAttribute("", "MimeType");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 9;
                            eatText3(v);
                            continue outer;
                        }
                        state = 9;
                        continue outer;
                    case  23 :
                        attIdx = context.getAttribute("", "Id");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        _KeyInfo = ((com.sun.identity.liberty.ws.common.jaxb.xmlsig.impl.KeyInfoTypeImpl) spawnChildFromLeaveElement((com.sun.identity.liberty.ws.common.jaxb.xmlsig.impl.KeyInfoTypeImpl.class), 24, ___uri, ___local, ___qname));
                        return ;
                    case  17 :
                        state = 18;
                        continue outer;
                    case  19 :
                        attIdx = context.getAttribute("", "Id");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                    case  12 :
                        state = 15;
                        continue outer;
                    case  18 :
                        revertToParentFromLeaveElement(___uri, ___local, ___qname);
                        return ;
                    case  9 :
                        attIdx = context.getAttribute("", "Type");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 12;
                            eatText4(v);
                            continue outer;
                        }
                        state = 12;
                        continue outer;
                    case  20 :
                        if (("EncryptionProperties" == ___local)&&("http://www.w3.org/2001/04/xmlenc#" == ___uri)) {
                            context.popAttributes();
                            state = 18;
                            return ;
                        }
                        break;
                }
                super.leaveElement(___uri, ___local, ___qname);
                break;
            }
        }

        public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  0 :
                        if (("Encoding" == ___local)&&("" == ___uri)) {
                            state = 1;
                            return ;
                        }
                        state = 3;
                        continue outer;
                    case  13 :
                        if (("Algorithm" == ___local)&&("" == ___uri)) {
                            _EncryptionMethod = ((com.sun.identity.liberty.ws.common.jaxb.xmlenc.impl.EncryptionMethodTypeImpl) spawnChildFromEnterAttribute((com.sun.identity.liberty.ws.common.jaxb.xmlenc.impl.EncryptionMethodTypeImpl.class), 14, ___uri, ___local, ___qname));
                            return ;
                        }
                        break;
                    case  15 :
                        state = 16;
                        continue outer;
                    case  3 :
                        if (("Id" == ___local)&&("" == ___uri)) {
                            state = 4;
                            return ;
                        }
                        state = 6;
                        continue outer;
                    case  6 :
                        if (("MimeType" == ___local)&&("" == ___uri)) {
                            state = 7;
                            return ;
                        }
                        state = 9;
                        continue outer;
                    case  23 :
                        if (("Id" == ___local)&&("" == ___uri)) {
                            _KeyInfo = ((com.sun.identity.liberty.ws.common.jaxb.xmlsig.impl.KeyInfoTypeImpl) spawnChildFromEnterAttribute((com.sun.identity.liberty.ws.common.jaxb.xmlsig.impl.KeyInfoTypeImpl.class), 24, ___uri, ___local, ___qname));
                            return ;
                        }
                        _KeyInfo = ((com.sun.identity.liberty.ws.common.jaxb.xmlsig.impl.KeyInfoTypeImpl) spawnChildFromEnterAttribute((com.sun.identity.liberty.ws.common.jaxb.xmlsig.impl.KeyInfoTypeImpl.class), 24, ___uri, ___local, ___qname));
                        return ;
                    case  17 :
                        state = 18;
                        continue outer;
                    case  19 :
                        if (("Id" == ___local)&&("" == ___uri)) {
                            _EncryptionProperties = ((com.sun.identity.liberty.ws.common.jaxb.xmlenc.impl.EncryptionPropertiesTypeImpl) spawnChildFromEnterAttribute((com.sun.identity.liberty.ws.common.jaxb.xmlenc.impl.EncryptionPropertiesTypeImpl.class), 20, ___uri, ___local, ___qname));
                            return ;
                        }
                        break;
                    case  12 :
                        state = 15;
                        continue outer;
                    case  18 :
                        revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                        return ;
                    case  9 :
                        if (("Type" == ___local)&&("" == ___uri)) {
                            state = 10;
                            return ;
                        }
                        state = 12;
                        continue outer;
                }
                super.enterAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  5 :
                        if (("Id" == ___local)&&("" == ___uri)) {
                            state = 6;
                            return ;
                        }
                        break;
                    case  0 :
                        attIdx = context.getAttribute("", "Encoding");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 3;
                            eatText1(v);
                            continue outer;
                        }
                        state = 3;
                        continue outer;
                    case  13 :
                        attIdx = context.getAttribute("", "Algorithm");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                    case  15 :
                        state = 16;
                        continue outer;
                    case  3 :
                        attIdx = context.getAttribute("", "Id");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 6;
                            eatText2(v);
                            continue outer;
                        }
                        state = 6;
                        continue outer;
                    case  6 :
                        attIdx = context.getAttribute("", "MimeType");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 9;
                            eatText3(v);
                            continue outer;
                        }
                        state = 9;
                        continue outer;
                    case  23 :
                        attIdx = context.getAttribute("", "Id");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        _KeyInfo = ((com.sun.identity.liberty.ws.common.jaxb.xmlsig.impl.KeyInfoTypeImpl) spawnChildFromLeaveAttribute((com.sun.identity.liberty.ws.common.jaxb.xmlsig.impl.KeyInfoTypeImpl.class), 24, ___uri, ___local, ___qname));
                        return ;
                    case  17 :
                        state = 18;
                        continue outer;
                    case  19 :
                        attIdx = context.getAttribute("", "Id");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                    case  8 :
                        if (("MimeType" == ___local)&&("" == ___uri)) {
                            state = 9;
                            return ;
                        }
                        break;
                    case  11 :
                        if (("Type" == ___local)&&("" == ___uri)) {
                            state = 12;
                            return ;
                        }
                        break;
                    case  12 :
                        state = 15;
                        continue outer;
                    case  18 :
                        revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                        return ;
                    case  9 :
                        attIdx = context.getAttribute("", "Type");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 12;
                            eatText4(v);
                            continue outer;
                        }
                        state = 12;
                        continue outer;
                    case  2 :
                        if (("Encoding" == ___local)&&("" == ___uri)) {
                            state = 3;
                            return ;
                        }
                        break;
                }
                super.leaveAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void handleText(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                try {
                    switch (state) {
                        case  1 :
                            state = 2;
                            eatText1(value);
                            return ;
                        case  0 :
                            attIdx = context.getAttribute("", "Encoding");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 3;
                                eatText1(v);
                                continue outer;
                            }
                            state = 3;
                            continue outer;
                        case  13 :
                            attIdx = context.getAttribute("", "Algorithm");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            break;
                        case  15 :
                            state = 16;
                            continue outer;
                        case  3 :
                            attIdx = context.getAttribute("", "Id");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 6;
                                eatText2(v);
                                continue outer;
                            }
                            state = 6;
                            continue outer;
                        case  4 :
                            state = 5;
                            eatText2(value);
                            return ;
                        case  6 :
                            attIdx = context.getAttribute("", "MimeType");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 9;
                                eatText3(v);
                                continue outer;
                            }
                            state = 9;
                            continue outer;
                        case  23 :
                            attIdx = context.getAttribute("", "Id");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            _KeyInfo = ((com.sun.identity.liberty.ws.common.jaxb.xmlsig.impl.KeyInfoTypeImpl) spawnChildFromText((com.sun.identity.liberty.ws.common.jaxb.xmlsig.impl.KeyInfoTypeImpl.class), 24, value));
                            return ;
                        case  17 :
                            state = 18;
                            continue outer;
                        case  19 :
                            attIdx = context.getAttribute("", "Id");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            break;
                        case  7 :
                            state = 8;
                            eatText3(value);
                            return ;
                        case  12 :
                            state = 15;
                            continue outer;
                        case  10 :
                            state = 11;
                            eatText4(value);
                            return ;
                        case  18 :
                            revertToParentFromText(value);
                            return ;
                        case  9 :
                            attIdx = context.getAttribute("", "Type");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 12;
                                eatText4(v);
                                continue outer;
                            }
                            state = 12;
                            continue outer;
                    }
                } catch (java.lang.RuntimeException e) {
                    handleUnexpectedTextException(value, e);
                }
                break;
            }
        }

    }

}
