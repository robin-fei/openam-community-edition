//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v1.0.6-b27-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2012.06.11 at 10:33:54 AM PDT 
//


package com.sun.identity.federation.jaxb.entityconfig.impl;

public class EntityConfigTypeImpl implements com.sun.identity.federation.jaxb.entityconfig.EntityConfigType, com.sun.xml.bind.JAXBObject, com.sun.identity.federation.jaxb.entityconfig.impl.runtime.UnmarshallableObject, com.sun.identity.federation.jaxb.entityconfig.impl.runtime.XMLSerializable, com.sun.xml.bind.marshaller.IdentifiableObject, com.sun.identity.federation.jaxb.entityconfig.impl.runtime.ValidatableObject
{

    protected boolean has_Hosted;
    protected boolean _Hosted;
    protected com.sun.identity.federation.jaxb.entityconfig.BaseConfigType _AffiliationDescriptorConfig;
    protected java.lang.String _ID;
    protected com.sun.xml.bind.util.ListImpl _Attribute;
    protected com.sun.xml.bind.util.ListImpl _IDPDescriptorConfig;
    protected java.lang.String _EntityID;
    protected com.sun.identity.liberty.ws.common.jaxb.xmlsig.SignatureType _Signature;
    protected com.sun.xml.bind.util.ListImpl _SPDescriptorConfig;
    public final static java.lang.Class version = (com.sun.identity.federation.jaxb.entityconfig.impl.JAXBVersion.class);
    private static com.sun.msv.grammar.Grammar schemaFragment;

    private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
        return (com.sun.identity.federation.jaxb.entityconfig.EntityConfigType.class);
    }

    public boolean isHosted() {
        return _Hosted;
    }

    public void setHosted(boolean value) {
        _Hosted = value;
        has_Hosted = true;
    }

    public com.sun.identity.federation.jaxb.entityconfig.BaseConfigType getAffiliationDescriptorConfig() {
        return _AffiliationDescriptorConfig;
    }

    public void setAffiliationDescriptorConfig(com.sun.identity.federation.jaxb.entityconfig.BaseConfigType value) {
        _AffiliationDescriptorConfig = value;
    }

    public java.lang.String getID() {
        return _ID;
    }

    public void setID(java.lang.String value) {
        _ID = value;
    }

    protected com.sun.xml.bind.util.ListImpl _getAttribute() {
        if (_Attribute == null) {
            _Attribute = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
        }
        return _Attribute;
    }

    public java.util.List getAttribute() {
        return _getAttribute();
    }

    protected com.sun.xml.bind.util.ListImpl _getIDPDescriptorConfig() {
        if (_IDPDescriptorConfig == null) {
            _IDPDescriptorConfig = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
        }
        return _IDPDescriptorConfig;
    }

    public java.util.List getIDPDescriptorConfig() {
        return _getIDPDescriptorConfig();
    }

    public java.lang.String getEntityID() {
        return _EntityID;
    }

    public void setEntityID(java.lang.String value) {
        _EntityID = value;
    }

    public com.sun.identity.liberty.ws.common.jaxb.xmlsig.SignatureType getSignature() {
        return _Signature;
    }

    public void setSignature(com.sun.identity.liberty.ws.common.jaxb.xmlsig.SignatureType value) {
        _Signature = value;
    }

    protected com.sun.xml.bind.util.ListImpl _getSPDescriptorConfig() {
        if (_SPDescriptorConfig == null) {
            _SPDescriptorConfig = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
        }
        return _SPDescriptorConfig;
    }

    public java.util.List getSPDescriptorConfig() {
        return _getSPDescriptorConfig();
    }

    public com.sun.identity.federation.jaxb.entityconfig.impl.runtime.UnmarshallingEventHandler createUnmarshaller(com.sun.identity.federation.jaxb.entityconfig.impl.runtime.UnmarshallingContext context) {
        return new com.sun.identity.federation.jaxb.entityconfig.impl.EntityConfigTypeImpl.Unmarshaller(context);
    }

    public void serializeBody(com.sun.identity.federation.jaxb.entityconfig.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        int idx4 = 0;
        final int len4 = ((_Attribute == null)? 0 :_Attribute.size());
        int idx5 = 0;
        final int len5 = ((_IDPDescriptorConfig == null)? 0 :_IDPDescriptorConfig.size());
        int idx8 = 0;
        final int len8 = ((_SPDescriptorConfig == null)? 0 :_SPDescriptorConfig.size());
        if (_Signature!= null) {
            if (_Signature instanceof javax.xml.bind.Element) {
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _Signature), "Signature");
            } else {
                context.startElement("http://www.w3.org/2000/09/xmldsig#", "Signature");
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Signature), "Signature");
                context.endNamespaceDecls();
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Signature), "Signature");
                context.endAttributes();
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _Signature), "Signature");
                context.endElement();
            }
        }
        while (idx4 != len4) {
            if (_Attribute.get(idx4) instanceof javax.xml.bind.Element) {
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _Attribute.get(idx4 ++)), "Attribute");
            } else {
                context.startElement("urn:sun:fm:ID-FF:entityconfig", "Attribute");
                int idx_2 = idx4;
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Attribute.get(idx_2 ++)), "Attribute");
                context.endNamespaceDecls();
                int idx_3 = idx4;
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Attribute.get(idx_3 ++)), "Attribute");
                context.endAttributes();
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _Attribute.get(idx4 ++)), "Attribute");
                context.endElement();
            }
        }
        if (_AffiliationDescriptorConfig == null) {
            while (idx5 != len5) {
                if (_IDPDescriptorConfig.get(idx5) instanceof javax.xml.bind.Element) {
                    context.childAsBody(((com.sun.xml.bind.JAXBObject) _IDPDescriptorConfig.get(idx5 ++)), "IDPDescriptorConfig");
                } else {
                    context.startElement("urn:sun:fm:ID-FF:entityconfig", "IDPDescriptorConfig");
                    int idx_4 = idx5;
                    context.childAsURIs(((com.sun.xml.bind.JAXBObject) _IDPDescriptorConfig.get(idx_4 ++)), "IDPDescriptorConfig");
                    context.endNamespaceDecls();
                    int idx_5 = idx5;
                    context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _IDPDescriptorConfig.get(idx_5 ++)), "IDPDescriptorConfig");
                    context.endAttributes();
                    context.childAsBody(((com.sun.xml.bind.JAXBObject) _IDPDescriptorConfig.get(idx5 ++)), "IDPDescriptorConfig");
                    context.endElement();
                }
            }
            while (idx8 != len8) {
                if (_SPDescriptorConfig.get(idx8) instanceof javax.xml.bind.Element) {
                    context.childAsBody(((com.sun.xml.bind.JAXBObject) _SPDescriptorConfig.get(idx8 ++)), "SPDescriptorConfig");
                } else {
                    context.startElement("urn:sun:fm:ID-FF:entityconfig", "SPDescriptorConfig");
                    int idx_6 = idx8;
                    context.childAsURIs(((com.sun.xml.bind.JAXBObject) _SPDescriptorConfig.get(idx_6 ++)), "SPDescriptorConfig");
                    context.endNamespaceDecls();
                    int idx_7 = idx8;
                    context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _SPDescriptorConfig.get(idx_7 ++)), "SPDescriptorConfig");
                    context.endAttributes();
                    context.childAsBody(((com.sun.xml.bind.JAXBObject) _SPDescriptorConfig.get(idx8 ++)), "SPDescriptorConfig");
                    context.endElement();
                }
            }
        } else {
            if (((((_IDPDescriptorConfig == null)? 0 :_IDPDescriptorConfig.size()) == 0)&&(((_SPDescriptorConfig == null)? 0 :_SPDescriptorConfig.size()) == 0))&&(_AffiliationDescriptorConfig!= null)) {
                if (_AffiliationDescriptorConfig instanceof javax.xml.bind.Element) {
                    context.childAsBody(((com.sun.xml.bind.JAXBObject) _AffiliationDescriptorConfig), "AffiliationDescriptorConfig");
                } else {
                    context.startElement("urn:sun:fm:ID-FF:entityconfig", "AffiliationDescriptorConfig");
                    context.childAsURIs(((com.sun.xml.bind.JAXBObject) _AffiliationDescriptorConfig), "AffiliationDescriptorConfig");
                    context.endNamespaceDecls();
                    context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _AffiliationDescriptorConfig), "AffiliationDescriptorConfig");
                    context.endAttributes();
                    context.childAsBody(((com.sun.xml.bind.JAXBObject) _AffiliationDescriptorConfig), "AffiliationDescriptorConfig");
                    context.endElement();
                }
            }
        }
    }

    public void serializeAttributes(com.sun.identity.federation.jaxb.entityconfig.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        int idx4 = 0;
        final int len4 = ((_Attribute == null)? 0 :_Attribute.size());
        int idx5 = 0;
        final int len5 = ((_IDPDescriptorConfig == null)? 0 :_IDPDescriptorConfig.size());
        int idx8 = 0;
        final int len8 = ((_SPDescriptorConfig == null)? 0 :_SPDescriptorConfig.size());
        if (_ID!= null) {
            context.startAttribute("", "ID");
            try {
                context.text(context.onID(this, ((java.lang.String) _ID)), "ID");
            } catch (java.lang.Exception e) {
                com.sun.identity.federation.jaxb.entityconfig.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
        }
        context.startAttribute("", "entityID");
        try {
            context.text(((java.lang.String) _EntityID), "EntityID");
        } catch (java.lang.Exception e) {
            com.sun.identity.federation.jaxb.entityconfig.impl.runtime.Util.handlePrintConversionException(this, e, context);
        }
        context.endAttribute();
        if (has_Hosted) {
            context.startAttribute("", "hosted");
            try {
                context.text(javax.xml.bind.DatatypeConverter.printBoolean(((boolean) _Hosted)), "Hosted");
            } catch (java.lang.Exception e) {
                com.sun.identity.federation.jaxb.entityconfig.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
        }
        if (_Signature!= null) {
            if (_Signature instanceof javax.xml.bind.Element) {
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Signature), "Signature");
            }
        }
        while (idx4 != len4) {
            if (_Attribute.get(idx4) instanceof javax.xml.bind.Element) {
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Attribute.get(idx4 ++)), "Attribute");
            } else {
                idx4 += 1;
            }
        }
        if (_AffiliationDescriptorConfig == null) {
            while (idx5 != len5) {
                if (_IDPDescriptorConfig.get(idx5) instanceof javax.xml.bind.Element) {
                    context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _IDPDescriptorConfig.get(idx5 ++)), "IDPDescriptorConfig");
                } else {
                    idx5 += 1;
                }
            }
            while (idx8 != len8) {
                if (_SPDescriptorConfig.get(idx8) instanceof javax.xml.bind.Element) {
                    context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _SPDescriptorConfig.get(idx8 ++)), "SPDescriptorConfig");
                } else {
                    idx8 += 1;
                }
            }
        } else {
            if (((((_IDPDescriptorConfig == null)? 0 :_IDPDescriptorConfig.size()) == 0)&&(((_SPDescriptorConfig == null)? 0 :_SPDescriptorConfig.size()) == 0))&&(_AffiliationDescriptorConfig!= null)) {
                if (_AffiliationDescriptorConfig instanceof javax.xml.bind.Element) {
                    context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _AffiliationDescriptorConfig), "AffiliationDescriptorConfig");
                }
            }
        }
    }

    public void serializeURIs(com.sun.identity.federation.jaxb.entityconfig.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        int idx4 = 0;
        final int len4 = ((_Attribute == null)? 0 :_Attribute.size());
        int idx5 = 0;
        final int len5 = ((_IDPDescriptorConfig == null)? 0 :_IDPDescriptorConfig.size());
        int idx8 = 0;
        final int len8 = ((_SPDescriptorConfig == null)? 0 :_SPDescriptorConfig.size());
        if (_Signature!= null) {
            if (_Signature instanceof javax.xml.bind.Element) {
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Signature), "Signature");
            }
        }
        while (idx4 != len4) {
            if (_Attribute.get(idx4) instanceof javax.xml.bind.Element) {
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Attribute.get(idx4 ++)), "Attribute");
            } else {
                idx4 += 1;
            }
        }
        if (_AffiliationDescriptorConfig == null) {
            while (idx5 != len5) {
                if (_IDPDescriptorConfig.get(idx5) instanceof javax.xml.bind.Element) {
                    context.childAsURIs(((com.sun.xml.bind.JAXBObject) _IDPDescriptorConfig.get(idx5 ++)), "IDPDescriptorConfig");
                } else {
                    idx5 += 1;
                }
            }
            while (idx8 != len8) {
                if (_SPDescriptorConfig.get(idx8) instanceof javax.xml.bind.Element) {
                    context.childAsURIs(((com.sun.xml.bind.JAXBObject) _SPDescriptorConfig.get(idx8 ++)), "SPDescriptorConfig");
                } else {
                    idx8 += 1;
                }
            }
        } else {
            if (((((_IDPDescriptorConfig == null)? 0 :_IDPDescriptorConfig.size()) == 0)&&(((_SPDescriptorConfig == null)? 0 :_SPDescriptorConfig.size()) == 0))&&(_AffiliationDescriptorConfig!= null)) {
                if (_AffiliationDescriptorConfig instanceof javax.xml.bind.Element) {
                    context.childAsURIs(((com.sun.xml.bind.JAXBObject) _AffiliationDescriptorConfig), "AffiliationDescriptorConfig");
                }
            }
        }
    }

    public java.lang.String ____jaxb____getId() {
        return ((java.lang.String) _ID);
    }

    public java.lang.Class getPrimaryInterface() {
        return (com.sun.identity.federation.jaxb.entityconfig.EntityConfigType.class);
    }

    public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
        if (schemaFragment == null) {
            schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.su"
+"n.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gra"
+"mmar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expressi"
+"on\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0002L\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000b"
+"expandedExpq\u0000~\u0000\u0002xpppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsr\u0000\u001dcom."
+"sun.msv.grammar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0001ppsq\u0000~\u0000\nsr\u0000\u0011java.l"
+"ang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000psr\u0000\'com.sun.msv.grammar.tr"
+"ex.ElementPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\tnameClasst\u0000\u001fLcom/sun/msv/gram"
+"mar/NameClass;xr\u0000\u001ecom.sun.msv.grammar.ElementExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z"
+"\u0000\u001aignoreUndeclaredAttributesL\u0000\fcontentModelq\u0000~\u0000\u0002xq\u0000~\u0000\u0003q\u0000~\u0000\u000ep"
+"\u0000sq\u0000~\u0000\nppsr\u0000 com.sun.msv.grammar.OneOrMoreExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001c"
+"com.sun.msv.grammar.UnaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0003expq\u0000~\u0000\u0002xq\u0000~\u0000\u0003q\u0000~\u0000"
+"\u000epsr\u0000 com.sun.msv.grammar.AttributeExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002"
+"L\u0000\tnameClassq\u0000~\u0000\u0010xq\u0000~\u0000\u0003q\u0000~\u0000\u000epsr\u00002com.sun.msv.grammar.Express"
+"ion$AnyStringExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003sq\u0000~\u0000\r\u0001q\u0000~\u0000\u001asr\u0000 com."
+"sun.msv.grammar.AnyNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.sun.msv.gramm"
+"ar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.sun.msv.grammar.Expression$"
+"EpsilonExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003q\u0000~\u0000\u001bq\u0000~\u0000 sr\u0000#com.sun.msv."
+"grammar.SimpleNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNamet\u0000\u0012Ljava/lang/"
+"String;L\u0000\fnamespaceURIq\u0000~\u0000\"xq\u0000~\u0000\u001dt\u0000?com.sun.identity.liberty"
+".ws.common.jaxb.xmlsig.SignatureElementt\u0000+http://java.sun.co"
+"m/jaxb/xjc/dummy-elementssq\u0000~\u0000\u000fq\u0000~\u0000\u000ep\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u000fpp\u0000sq\u0000~\u0000"
+"\nppsq\u0000~\u0000\u0014q\u0000~\u0000\u000epsq\u0000~\u0000\u0017q\u0000~\u0000\u000epq\u0000~\u0000\u001aq\u0000~\u0000\u001eq\u0000~\u0000 sq\u0000~\u0000!t\u0000<com.sun.i"
+"dentity.liberty.ws.common.jaxb.xmlsig.SignatureTypeq\u0000~\u0000%sq\u0000~"
+"\u0000\nppsq\u0000~\u0000\u0017q\u0000~\u0000\u000epsr\u0000\u001bcom.sun.msv.grammar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000"
+"\u0002dtt\u0000\u001fLorg/relaxng/datatype/Datatype;L\u0000\u0006exceptq\u0000~\u0000\u0002L\u0000\u0004namet\u0000"
+"\u001dLcom/sun/msv/util/StringPair;xq\u0000~\u0000\u0003q\u0000~\u0000\u000epsr\u0000\"com.sun.msv.da"
+"tatype.xsd.QnameType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000*com.sun.msv.datatype.xsd."
+"BuiltinAtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.datatype.xsd.Con"
+"creteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com.sun.msv.datatype.xsd.XSDatatypeI"
+"mpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUriq\u0000~\u0000\"L\u0000\btypeNameq\u0000~\u0000\"L\u0000\nwhiteSp"
+"acet\u0000.Lcom/sun/msv/datatype/xsd/WhiteSpaceProcessor;xpt\u0000 htt"
+"p://www.w3.org/2001/XMLSchemat\u0000\u0005QNamesr\u00005com.sun.msv.datatyp"
+"e.xsd.WhiteSpaceProcessor$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun.msv"
+".datatype.xsd.WhiteSpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.sun.ms"
+"v.grammar.Expression$NullSetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003q\u0000~\u0000\u000e"
+"psr\u0000\u001bcom.sun.msv.util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\""
+"L\u0000\fnamespaceURIq\u0000~\u0000\"xpq\u0000~\u0000;q\u0000~\u0000:sq\u0000~\u0000!t\u0000\u0004typet\u0000)http://www.w"
+"3.org/2001/XMLSchema-instanceq\u0000~\u0000 sq\u0000~\u0000!t\u0000\tSignaturet\u0000\"http:"
+"//www.w3.org/2000/09/xmldsig#q\u0000~\u0000 sq\u0000~\u0000\nppsq\u0000~\u0000\u0014q\u0000~\u0000\u000epsq\u0000~\u0000\n"
+"q\u0000~\u0000\u000epsq\u0000~\u0000\u000fq\u0000~\u0000\u000ep\u0000sq\u0000~\u0000\nppsq\u0000~\u0000\u0014q\u0000~\u0000\u000epsq\u0000~\u0000\u0017q\u0000~\u0000\u000epq\u0000~\u0000\u001aq\u0000~\u0000"
+"\u001eq\u0000~\u0000 sq\u0000~\u0000!t\u0000>com.sun.identity.federation.jaxb.entityconfig"
+".AttributeElementq\u0000~\u0000%sq\u0000~\u0000\u000fq\u0000~\u0000\u000ep\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u000fpp\u0000sq\u0000~\u0000\npp"
+"sq\u0000~\u0000\u0014q\u0000~\u0000\u000epsq\u0000~\u0000\u0017q\u0000~\u0000\u000epq\u0000~\u0000\u001aq\u0000~\u0000\u001eq\u0000~\u0000 sq\u0000~\u0000!t\u0000;com.sun.iden"
+"tity.federation.jaxb.entityconfig.AttributeTypeq\u0000~\u0000%sq\u0000~\u0000\npp"
+"sq\u0000~\u0000\u0017q\u0000~\u0000\u000epq\u0000~\u00003q\u0000~\u0000Cq\u0000~\u0000 sq\u0000~\u0000!t\u0000\tAttributet\u0000\u001durn:sun:fm:I"
+"D-FF:entityconfigq\u0000~\u0000 sq\u0000~\u0000\nppsq\u0000~\u0000\nppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\nppsq\u0000~\u0000\u0014"
+"q\u0000~\u0000\u000epsq\u0000~\u0000\nq\u0000~\u0000\u000epsq\u0000~\u0000\u000fq\u0000~\u0000\u000ep\u0000sq\u0000~\u0000\nppsq\u0000~\u0000\u0014q\u0000~\u0000\u000epsq\u0000~\u0000\u0017q\u0000~"
+"\u0000\u000epq\u0000~\u0000\u001aq\u0000~\u0000\u001eq\u0000~\u0000 sq\u0000~\u0000!t\u0000Hcom.sun.identity.federation.jaxb."
+"entityconfig.IDPDescriptorConfigElementq\u0000~\u0000%sq\u0000~\u0000\u000fq\u0000~\u0000\u000ep\u0000sq\u0000"
+"~\u0000\u0000ppsq\u0000~\u0000\u000fpp\u0000sq\u0000~\u0000\nppsq\u0000~\u0000\u0014q\u0000~\u0000\u000epsq\u0000~\u0000\u0017q\u0000~\u0000\u000epq\u0000~\u0000\u001aq\u0000~\u0000\u001eq\u0000~\u0000"
+" sq\u0000~\u0000!t\u0000<com.sun.identity.federation.jaxb.entityconfig.Base"
+"ConfigTypeq\u0000~\u0000%sq\u0000~\u0000\nppsq\u0000~\u0000\u0017q\u0000~\u0000\u000epq\u0000~\u00003q\u0000~\u0000Cq\u0000~\u0000 sq\u0000~\u0000!t\u0000\u0013I"
+"DPDescriptorConfigq\u0000~\u0000^q\u0000~\u0000 sq\u0000~\u0000\nppsq\u0000~\u0000\u0014q\u0000~\u0000\u000epsq\u0000~\u0000\nq\u0000~\u0000\u000ep"
+"sq\u0000~\u0000\u000fq\u0000~\u0000\u000ep\u0000sq\u0000~\u0000\nppsq\u0000~\u0000\u0014q\u0000~\u0000\u000epsq\u0000~\u0000\u0017q\u0000~\u0000\u000epq\u0000~\u0000\u001aq\u0000~\u0000\u001eq\u0000~\u0000 "
+"sq\u0000~\u0000!t\u0000Gcom.sun.identity.federation.jaxb.entityconfig.SPDes"
+"criptorConfigElementq\u0000~\u0000%sq\u0000~\u0000\u000fq\u0000~\u0000\u000ep\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u000fpp\u0000sq\u0000~\u0000"
+"\nppsq\u0000~\u0000\u0014q\u0000~\u0000\u000epsq\u0000~\u0000\u0017q\u0000~\u0000\u000epq\u0000~\u0000\u001aq\u0000~\u0000\u001eq\u0000~\u0000 sq\u0000~\u0000!q\u0000~\u0000rq\u0000~\u0000%sq"
+"\u0000~\u0000\nppsq\u0000~\u0000\u0017q\u0000~\u0000\u000epq\u0000~\u00003q\u0000~\u0000Cq\u0000~\u0000 sq\u0000~\u0000!t\u0000\u0012SPDescriptorConfig"
+"q\u0000~\u0000^q\u0000~\u0000 sq\u0000~\u0000\u000fpp\u0000sq\u0000~\u0000\nppsq\u0000~\u0000\u0014q\u0000~\u0000\u000epsq\u0000~\u0000\u0017q\u0000~\u0000\u000epq\u0000~\u0000\u001aq\u0000~\u0000"
+"\u001eq\u0000~\u0000 sq\u0000~\u0000!t\u0000Pcom.sun.identity.federation.jaxb.entityconfig"
+".AffiliationDescriptorConfigElementq\u0000~\u0000%sq\u0000~\u0000\u000fpp\u0000sq\u0000~\u0000\u0000ppsq\u0000"
+"~\u0000\u000fpp\u0000sq\u0000~\u0000\nppsq\u0000~\u0000\u0014q\u0000~\u0000\u000epsq\u0000~\u0000\u0017q\u0000~\u0000\u000epq\u0000~\u0000\u001aq\u0000~\u0000\u001eq\u0000~\u0000 sq\u0000~\u0000!q"
+"\u0000~\u0000rq\u0000~\u0000%sq\u0000~\u0000\nppsq\u0000~\u0000\u0017q\u0000~\u0000\u000epq\u0000~\u00003q\u0000~\u0000Cq\u0000~\u0000 sq\u0000~\u0000!t\u0000\u001bAffilia"
+"tionDescriptorConfigq\u0000~\u0000^sq\u0000~\u0000\nppsq\u0000~\u0000\u0017q\u0000~\u0000\u000epsq\u0000~\u00000ppsr\u0000\u001fcom"
+".sun.msv.datatype.xsd.IDType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000#com.sun.msv.datat"
+"ype.xsd.NcnameType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\"com.sun.msv.datatype.xsd.To"
+"kenType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000#com.sun.msv.datatype.xsd.StringType\u0000\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001Z\u0000\risAlwaysValidxq\u0000~\u00005q\u0000~\u0000:t\u0000\u0002IDq\u0000~\u0000>\u0000q\u0000~\u0000@sq\u0000~\u0000Aq\u0000~"
+"\u0000\u00a4q\u0000~\u0000:sq\u0000~\u0000!t\u0000\u0002IDt\u0000\u0000q\u0000~\u0000 sq\u0000~\u0000\u0017ppsq\u0000~\u00000q\u0000~\u0000\u000epsr\u0000#com.sun.ms"
+"v.datatype.xsd.AnyURIType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u00005q\u0000~\u0000:t\u0000\u0006anyURIq\u0000~\u0000"
+">q\u0000~\u0000@sq\u0000~\u0000Aq\u0000~\u0000\u00adq\u0000~\u0000:sq\u0000~\u0000!t\u0000\bentityIDq\u0000~\u0000\u00a8sq\u0000~\u0000\nppsq\u0000~\u0000\u0017q\u0000"
+"~\u0000\u000epsq\u0000~\u00000ppsr\u0000$com.sun.msv.datatype.xsd.BooleanType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001"
+"\u0002\u0000\u0000xq\u0000~\u00005q\u0000~\u0000:t\u0000\u0007booleanq\u0000~\u0000>q\u0000~\u0000@sq\u0000~\u0000Aq\u0000~\u0000\u00b6q\u0000~\u0000:sq\u0000~\u0000!t\u0000\u0006h"
+"ostedq\u0000~\u0000\u00a8q\u0000~\u0000 sr\u0000\"com.sun.msv.grammar.ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun/msv/grammar/ExpressionPool$Closed"
+"Hash;xpsr\u0000-com.sun.msv.grammar.ExpressionPool$ClosedHash\u00d7j\u00d0N"
+"\u00ef\u00e8\u00ed\u001c\u0003\u0000\u0003I\u0000\u0005countB\u0000\rstreamVersionL\u0000\u0006parentt\u0000$Lcom/sun/msv/gram"
+"mar/ExpressionPool;xp\u0000\u0000\u00003\u0001pq\u0000~\u0000Kq\u0000~\u0000dq\u0000~\u0000yq\u0000~\u0000aq\u0000~\u0000\u0006q\u0000~\u0000Iq\u0000~"
+"\u0000bq\u0000~\u0000wq\u0000~\u0000\u0007q\u0000~\u0000Jq\u0000~\u0000cq\u0000~\u0000\u0016q\u0000~\u0000*q\u0000~\u0000Nq\u0000~\u0000Vq\u0000~\u0000gq\u0000~\u0000oq\u0000~\u0000|q\u0000~"
+"\u0000\u0084q\u0000~\u0000xq\u0000~\u0000\u008dq\u0000~\u0000\u0095q\u0000~\u0000`q\u0000~\u0000\u0013q\u0000~\u0000)q\u0000~\u0000Mq\u0000~\u0000Uq\u0000~\u0000fq\u0000~\u0000nq\u0000~\u0000{q\u0000~"
+"\u0000\u0083q\u0000~\u0000\u008cq\u0000~\u0000\u0094q\u0000~\u0000\'q\u0000~\u0000Sq\u0000~\u0000\tq\u0000~\u0000lq\u0000~\u0000\u0081q\u0000~\u0000\u0092q\u0000~\u0000_q\u0000~\u0000\bq\u0000~\u0000\u000bq\u0000~"
+"\u0000\u009cq\u0000~\u0000\u00b1q\u0000~\u0000.q\u0000~\u0000Zq\u0000~\u0000sq\u0000~\u0000\u0087q\u0000~\u0000\u0098q\u0000~\u0000\u0005q\u0000~\u0000\fx"));
        }
        return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
    }

    public class Unmarshaller
        extends com.sun.identity.federation.jaxb.entityconfig.impl.runtime.AbstractUnmarshallingEventHandlerImpl
    {


        public Unmarshaller(com.sun.identity.federation.jaxb.entityconfig.impl.runtime.UnmarshallingContext context) {
            super(context, "------------------------");
        }

        protected Unmarshaller(com.sun.identity.federation.jaxb.entityconfig.impl.runtime.UnmarshallingContext context, int startState) {
            this(context);
            state = startState;
        }

        public java.lang.Object owner() {
            return com.sun.identity.federation.jaxb.entityconfig.impl.EntityConfigTypeImpl.this;
        }

        public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  22 :
                        attIdx = context.getAttribute("", "Id");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("SignedInfo" == ___local)&&("http://www.w3.org/2000/09/xmldsig#" == ___uri)) {
                            _Signature = ((com.sun.identity.liberty.ws.common.jaxb.xmlsig.impl.SignatureTypeImpl) spawnChildFromEnterElement((com.sun.identity.liberty.ws.common.jaxb.xmlsig.impl.SignatureTypeImpl.class), 23, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("SignedInfo" == ___local)&&("http://www.w3.org/2000/09/xmldsig#" == ___uri)) {
                            _Signature = ((com.sun.identity.liberty.ws.common.jaxb.xmlsig.impl.SignatureTypeImpl) spawnChildFromEnterElement((com.sun.identity.liberty.ws.common.jaxb.xmlsig.impl.SignatureTypeImpl.class), 23, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        break;
                    case  10 :
                        if (("Attribute" == ___local)&&("urn:sun:fm:ID-FF:entityconfig" == ___uri)) {
                            _getAttribute().add(((com.sun.identity.federation.jaxb.entityconfig.impl.AttributeElementImpl) spawnChildFromEnterElement((com.sun.identity.federation.jaxb.entityconfig.impl.AttributeElementImpl.class), 13, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("Attribute" == ___local)&&("urn:sun:fm:ID-FF:entityconfig" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 11;
                            return ;
                        }
                        state = 13;
                        continue outer;
                    case  14 :
                        attIdx = context.getAttribute("", "metaAlias");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("Attribute" == ___local)&&("urn:sun:fm:ID-FF:entityconfig" == ___uri)) {
                            _getSPDescriptorConfig().add(((com.sun.identity.federation.jaxb.entityconfig.impl.BaseConfigTypeImpl) spawnChildFromEnterElement((com.sun.identity.federation.jaxb.entityconfig.impl.BaseConfigTypeImpl.class), 15, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("Attribute" == ___local)&&("urn:sun:fm:ID-FF:entityconfig" == ___uri)) {
                            _getSPDescriptorConfig().add(((com.sun.identity.federation.jaxb.entityconfig.impl.BaseConfigTypeImpl) spawnChildFromEnterElement((com.sun.identity.federation.jaxb.entityconfig.impl.BaseConfigTypeImpl.class), 15, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        _getSPDescriptorConfig().add(((com.sun.identity.federation.jaxb.entityconfig.impl.BaseConfigTypeImpl) spawnChildFromEnterElement((com.sun.identity.federation.jaxb.entityconfig.impl.BaseConfigTypeImpl.class), 15, ___uri, ___local, ___qname, __atts)));
                        return ;
                    case  11 :
                        attIdx = context.getAttribute("", "name");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        break;
                    case  13 :
                        if (("Attribute" == ___local)&&("urn:sun:fm:ID-FF:entityconfig" == ___uri)) {
                            _getAttribute().add(((com.sun.identity.federation.jaxb.entityconfig.impl.AttributeElementImpl) spawnChildFromEnterElement((com.sun.identity.federation.jaxb.entityconfig.impl.AttributeElementImpl.class), 13, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("Attribute" == ___local)&&("urn:sun:fm:ID-FF:entityconfig" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 11;
                            return ;
                        }
                        if (("IDPDescriptorConfig" == ___local)&&("urn:sun:fm:ID-FF:entityconfig" == ___uri)) {
                            _getIDPDescriptorConfig().add(((com.sun.identity.federation.jaxb.entityconfig.impl.IDPDescriptorConfigElementImpl) spawnChildFromEnterElement((com.sun.identity.federation.jaxb.entityconfig.impl.IDPDescriptorConfigElementImpl.class), 19, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("IDPDescriptorConfig" == ___local)&&("urn:sun:fm:ID-FF:entityconfig" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 17;
                            return ;
                        }
                        if (("SPDescriptorConfig" == ___local)&&("urn:sun:fm:ID-FF:entityconfig" == ___uri)) {
                            _getSPDescriptorConfig().add(((com.sun.identity.federation.jaxb.entityconfig.impl.SPDescriptorConfigElementImpl) spawnChildFromEnterElement((com.sun.identity.federation.jaxb.entityconfig.impl.SPDescriptorConfigElementImpl.class), 16, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("SPDescriptorConfig" == ___local)&&("urn:sun:fm:ID-FF:entityconfig" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 14;
                            return ;
                        }
                        if (("AffiliationDescriptorConfig" == ___local)&&("urn:sun:fm:ID-FF:entityconfig" == ___uri)) {
                            _AffiliationDescriptorConfig = ((com.sun.identity.federation.jaxb.entityconfig.impl.AffiliationDescriptorConfigElementImpl) spawnChildFromEnterElement((com.sun.identity.federation.jaxb.entityconfig.impl.AffiliationDescriptorConfigElementImpl.class), 16, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("AffiliationDescriptorConfig" == ___local)&&("urn:sun:fm:ID-FF:entityconfig" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 20;
                            return ;
                        }
                        revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                        return ;
                    case  9 :
                        if (("Signature" == ___local)&&("http://www.w3.org/2000/09/xmldsig#" == ___uri)) {
                            _Signature = ((com.sun.identity.liberty.ws.common.jaxb.xmlsig.impl.SignatureElementImpl) spawnChildFromEnterElement((com.sun.identity.liberty.ws.common.jaxb.xmlsig.impl.SignatureElementImpl.class), 10, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("Signature" == ___local)&&("http://www.w3.org/2000/09/xmldsig#" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 22;
                            return ;
                        }
                        state = 10;
                        continue outer;
                    case  17 :
                        attIdx = context.getAttribute("", "metaAlias");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("Attribute" == ___local)&&("urn:sun:fm:ID-FF:entityconfig" == ___uri)) {
                            _getIDPDescriptorConfig().add(((com.sun.identity.federation.jaxb.entityconfig.impl.BaseConfigTypeImpl) spawnChildFromEnterElement((com.sun.identity.federation.jaxb.entityconfig.impl.BaseConfigTypeImpl.class), 18, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("Attribute" == ___local)&&("urn:sun:fm:ID-FF:entityconfig" == ___uri)) {
                            _getIDPDescriptorConfig().add(((com.sun.identity.federation.jaxb.entityconfig.impl.BaseConfigTypeImpl) spawnChildFromEnterElement((com.sun.identity.federation.jaxb.entityconfig.impl.BaseConfigTypeImpl.class), 18, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        _getIDPDescriptorConfig().add(((com.sun.identity.federation.jaxb.entityconfig.impl.BaseConfigTypeImpl) spawnChildFromEnterElement((com.sun.identity.federation.jaxb.entityconfig.impl.BaseConfigTypeImpl.class), 18, ___uri, ___local, ___qname, __atts)));
                        return ;
                    case  20 :
                        attIdx = context.getAttribute("", "metaAlias");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("Attribute" == ___local)&&("urn:sun:fm:ID-FF:entityconfig" == ___uri)) {
                            _AffiliationDescriptorConfig = ((com.sun.identity.federation.jaxb.entityconfig.impl.BaseConfigTypeImpl) spawnChildFromEnterElement((com.sun.identity.federation.jaxb.entityconfig.impl.BaseConfigTypeImpl.class), 21, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("Attribute" == ___local)&&("urn:sun:fm:ID-FF:entityconfig" == ___uri)) {
                            _AffiliationDescriptorConfig = ((com.sun.identity.federation.jaxb.entityconfig.impl.BaseConfigTypeImpl) spawnChildFromEnterElement((com.sun.identity.federation.jaxb.entityconfig.impl.BaseConfigTypeImpl.class), 21, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        _AffiliationDescriptorConfig = ((com.sun.identity.federation.jaxb.entityconfig.impl.BaseConfigTypeImpl) spawnChildFromEnterElement((com.sun.identity.federation.jaxb.entityconfig.impl.BaseConfigTypeImpl.class), 21, ___uri, ___local, ___qname, __atts));
                        return ;
                    case  3 :
                        attIdx = context.getAttribute("", "entityID");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 6;
                            eatText1(v);
                            continue outer;
                        }
                        break;
                    case  16 :
                        if (("SPDescriptorConfig" == ___local)&&("urn:sun:fm:ID-FF:entityconfig" == ___uri)) {
                            _getSPDescriptorConfig().add(((com.sun.identity.federation.jaxb.entityconfig.impl.SPDescriptorConfigElementImpl) spawnChildFromEnterElement((com.sun.identity.federation.jaxb.entityconfig.impl.SPDescriptorConfigElementImpl.class), 16, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("SPDescriptorConfig" == ___local)&&("urn:sun:fm:ID-FF:entityconfig" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 14;
                            return ;
                        }
                        revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                        return ;
                    case  0 :
                        attIdx = context.getAttribute("", "ID");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 3;
                            eatText2(v);
                            continue outer;
                        }
                        state = 3;
                        continue outer;
                    case  19 :
                        if (("IDPDescriptorConfig" == ___local)&&("urn:sun:fm:ID-FF:entityconfig" == ___uri)) {
                            _getIDPDescriptorConfig().add(((com.sun.identity.federation.jaxb.entityconfig.impl.IDPDescriptorConfigElementImpl) spawnChildFromEnterElement((com.sun.identity.federation.jaxb.entityconfig.impl.IDPDescriptorConfigElementImpl.class), 19, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("IDPDescriptorConfig" == ___local)&&("urn:sun:fm:ID-FF:entityconfig" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 17;
                            return ;
                        }
                        if (("SPDescriptorConfig" == ___local)&&("urn:sun:fm:ID-FF:entityconfig" == ___uri)) {
                            _getSPDescriptorConfig().add(((com.sun.identity.federation.jaxb.entityconfig.impl.SPDescriptorConfigElementImpl) spawnChildFromEnterElement((com.sun.identity.federation.jaxb.entityconfig.impl.SPDescriptorConfigElementImpl.class), 16, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("SPDescriptorConfig" == ___local)&&("urn:sun:fm:ID-FF:entityconfig" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 14;
                            return ;
                        }
                        state = 16;
                        continue outer;
                    case  6 :
                        attIdx = context.getAttribute("", "hosted");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 9;
                            eatText3(v);
                            continue outer;
                        }
                        state = 9;
                        continue outer;
                }
                super.enterElement(___uri, ___local, ___qname, __atts);
                break;
            }
        }

        private void eatText1(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _EntityID = com.sun.xml.bind.WhiteSpaceProcessor.collapse(value);
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText2(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _ID = context.addToIdTable(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText3(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Hosted = javax.xml.bind.DatatypeConverter.parseBoolean(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                has_Hosted = true;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  22 :
                        attIdx = context.getAttribute("", "Id");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                    case  10 :
                        state = 13;
                        continue outer;
                    case  14 :
                        attIdx = context.getAttribute("", "metaAlias");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        _getSPDescriptorConfig().add(((com.sun.identity.federation.jaxb.entityconfig.impl.BaseConfigTypeImpl) spawnChildFromLeaveElement((com.sun.identity.federation.jaxb.entityconfig.impl.BaseConfigTypeImpl.class), 15, ___uri, ___local, ___qname)));
                        return ;
                    case  12 :
                        if (("Attribute" == ___local)&&("urn:sun:fm:ID-FF:entityconfig" == ___uri)) {
                            context.popAttributes();
                            state = 13;
                            return ;
                        }
                        break;
                    case  15 :
                        if (("SPDescriptorConfig" == ___local)&&("urn:sun:fm:ID-FF:entityconfig" == ___uri)) {
                            context.popAttributes();
                            state = 16;
                            return ;
                        }
                        break;
                    case  11 :
                        attIdx = context.getAttribute("", "name");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                    case  18 :
                        if (("IDPDescriptorConfig" == ___local)&&("urn:sun:fm:ID-FF:entityconfig" == ___uri)) {
                            context.popAttributes();
                            state = 19;
                            return ;
                        }
                        break;
                    case  13 :
                        revertToParentFromLeaveElement(___uri, ___local, ___qname);
                        return ;
                    case  9 :
                        state = 10;
                        continue outer;
                    case  23 :
                        if (("Signature" == ___local)&&("http://www.w3.org/2000/09/xmldsig#" == ___uri)) {
                            context.popAttributes();
                            state = 10;
                            return ;
                        }
                        break;
                    case  17 :
                        attIdx = context.getAttribute("", "metaAlias");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        _getIDPDescriptorConfig().add(((com.sun.identity.federation.jaxb.entityconfig.impl.BaseConfigTypeImpl) spawnChildFromLeaveElement((com.sun.identity.federation.jaxb.entityconfig.impl.BaseConfigTypeImpl.class), 18, ___uri, ___local, ___qname)));
                        return ;
                    case  20 :
                        attIdx = context.getAttribute("", "metaAlias");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        _AffiliationDescriptorConfig = ((com.sun.identity.federation.jaxb.entityconfig.impl.BaseConfigTypeImpl) spawnChildFromLeaveElement((com.sun.identity.federation.jaxb.entityconfig.impl.BaseConfigTypeImpl.class), 21, ___uri, ___local, ___qname));
                        return ;
                    case  21 :
                        if (("AffiliationDescriptorConfig" == ___local)&&("urn:sun:fm:ID-FF:entityconfig" == ___uri)) {
                            context.popAttributes();
                            state = 16;
                            return ;
                        }
                        break;
                    case  3 :
                        attIdx = context.getAttribute("", "entityID");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 6;
                            eatText1(v);
                            continue outer;
                        }
                        break;
                    case  16 :
                        revertToParentFromLeaveElement(___uri, ___local, ___qname);
                        return ;
                    case  0 :
                        attIdx = context.getAttribute("", "ID");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 3;
                            eatText2(v);
                            continue outer;
                        }
                        state = 3;
                        continue outer;
                    case  19 :
                        state = 16;
                        continue outer;
                    case  6 :
                        attIdx = context.getAttribute("", "hosted");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 9;
                            eatText3(v);
                            continue outer;
                        }
                        state = 9;
                        continue outer;
                }
                super.leaveElement(___uri, ___local, ___qname);
                break;
            }
        }

        public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  22 :
                        if (("Id" == ___local)&&("" == ___uri)) {
                            _Signature = ((com.sun.identity.liberty.ws.common.jaxb.xmlsig.impl.SignatureTypeImpl) spawnChildFromEnterAttribute((com.sun.identity.liberty.ws.common.jaxb.xmlsig.impl.SignatureTypeImpl.class), 23, ___uri, ___local, ___qname));
                            return ;
                        }
                        break;
                    case  10 :
                        state = 13;
                        continue outer;
                    case  14 :
                        if (("metaAlias" == ___local)&&("" == ___uri)) {
                            _getSPDescriptorConfig().add(((com.sun.identity.federation.jaxb.entityconfig.impl.BaseConfigTypeImpl) spawnChildFromEnterAttribute((com.sun.identity.federation.jaxb.entityconfig.impl.BaseConfigTypeImpl.class), 15, ___uri, ___local, ___qname)));
                            return ;
                        }
                        _getSPDescriptorConfig().add(((com.sun.identity.federation.jaxb.entityconfig.impl.BaseConfigTypeImpl) spawnChildFromEnterAttribute((com.sun.identity.federation.jaxb.entityconfig.impl.BaseConfigTypeImpl.class), 15, ___uri, ___local, ___qname)));
                        return ;
                    case  11 :
                        if (("name" == ___local)&&("" == ___uri)) {
                            _getAttribute().add(((com.sun.identity.federation.jaxb.entityconfig.impl.AttributeTypeImpl) spawnChildFromEnterAttribute((com.sun.identity.federation.jaxb.entityconfig.impl.AttributeTypeImpl.class), 12, ___uri, ___local, ___qname)));
                            return ;
                        }
                        break;
                    case  13 :
                        revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                        return ;
                    case  9 :
                        state = 10;
                        continue outer;
                    case  17 :
                        if (("metaAlias" == ___local)&&("" == ___uri)) {
                            _getIDPDescriptorConfig().add(((com.sun.identity.federation.jaxb.entityconfig.impl.BaseConfigTypeImpl) spawnChildFromEnterAttribute((com.sun.identity.federation.jaxb.entityconfig.impl.BaseConfigTypeImpl.class), 18, ___uri, ___local, ___qname)));
                            return ;
                        }
                        _getIDPDescriptorConfig().add(((com.sun.identity.federation.jaxb.entityconfig.impl.BaseConfigTypeImpl) spawnChildFromEnterAttribute((com.sun.identity.federation.jaxb.entityconfig.impl.BaseConfigTypeImpl.class), 18, ___uri, ___local, ___qname)));
                        return ;
                    case  20 :
                        if (("metaAlias" == ___local)&&("" == ___uri)) {
                            _AffiliationDescriptorConfig = ((com.sun.identity.federation.jaxb.entityconfig.impl.BaseConfigTypeImpl) spawnChildFromEnterAttribute((com.sun.identity.federation.jaxb.entityconfig.impl.BaseConfigTypeImpl.class), 21, ___uri, ___local, ___qname));
                            return ;
                        }
                        _AffiliationDescriptorConfig = ((com.sun.identity.federation.jaxb.entityconfig.impl.BaseConfigTypeImpl) spawnChildFromEnterAttribute((com.sun.identity.federation.jaxb.entityconfig.impl.BaseConfigTypeImpl.class), 21, ___uri, ___local, ___qname));
                        return ;
                    case  3 :
                        if (("entityID" == ___local)&&("" == ___uri)) {
                            state = 4;
                            return ;
                        }
                        break;
                    case  16 :
                        revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                        return ;
                    case  0 :
                        if (("ID" == ___local)&&("" == ___uri)) {
                            state = 1;
                            return ;
                        }
                        state = 3;
                        continue outer;
                    case  19 :
                        state = 16;
                        continue outer;
                    case  6 :
                        if (("hosted" == ___local)&&("" == ___uri)) {
                            state = 7;
                            return ;
                        }
                        state = 9;
                        continue outer;
                }
                super.enterAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  22 :
                        attIdx = context.getAttribute("", "Id");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                    case  10 :
                        state = 13;
                        continue outer;
                    case  14 :
                        attIdx = context.getAttribute("", "metaAlias");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        _getSPDescriptorConfig().add(((com.sun.identity.federation.jaxb.entityconfig.impl.BaseConfigTypeImpl) spawnChildFromLeaveAttribute((com.sun.identity.federation.jaxb.entityconfig.impl.BaseConfigTypeImpl.class), 15, ___uri, ___local, ___qname)));
                        return ;
                    case  5 :
                        if (("entityID" == ___local)&&("" == ___uri)) {
                            state = 6;
                            return ;
                        }
                        break;
                    case  11 :
                        attIdx = context.getAttribute("", "name");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                    case  8 :
                        if (("hosted" == ___local)&&("" == ___uri)) {
                            state = 9;
                            return ;
                        }
                        break;
                    case  13 :
                        revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                        return ;
                    case  2 :
                        if (("ID" == ___local)&&("" == ___uri)) {
                            state = 3;
                            return ;
                        }
                        break;
                    case  9 :
                        state = 10;
                        continue outer;
                    case  17 :
                        attIdx = context.getAttribute("", "metaAlias");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        _getIDPDescriptorConfig().add(((com.sun.identity.federation.jaxb.entityconfig.impl.BaseConfigTypeImpl) spawnChildFromLeaveAttribute((com.sun.identity.federation.jaxb.entityconfig.impl.BaseConfigTypeImpl.class), 18, ___uri, ___local, ___qname)));
                        return ;
                    case  20 :
                        attIdx = context.getAttribute("", "metaAlias");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        _AffiliationDescriptorConfig = ((com.sun.identity.federation.jaxb.entityconfig.impl.BaseConfigTypeImpl) spawnChildFromLeaveAttribute((com.sun.identity.federation.jaxb.entityconfig.impl.BaseConfigTypeImpl.class), 21, ___uri, ___local, ___qname));
                        return ;
                    case  3 :
                        attIdx = context.getAttribute("", "entityID");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 6;
                            eatText1(v);
                            continue outer;
                        }
                        break;
                    case  16 :
                        revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                        return ;
                    case  0 :
                        attIdx = context.getAttribute("", "ID");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 3;
                            eatText2(v);
                            continue outer;
                        }
                        state = 3;
                        continue outer;
                    case  19 :
                        state = 16;
                        continue outer;
                    case  6 :
                        attIdx = context.getAttribute("", "hosted");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 9;
                            eatText3(v);
                            continue outer;
                        }
                        state = 9;
                        continue outer;
                }
                super.leaveAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void handleText(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                try {
                    switch (state) {
                        case  1 :
                            state = 2;
                            eatText2(value);
                            return ;
                        case  22 :
                            attIdx = context.getAttribute("", "Id");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            break;
                        case  10 :
                            state = 13;
                            continue outer;
                        case  14 :
                            attIdx = context.getAttribute("", "metaAlias");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            _getSPDescriptorConfig().add(((com.sun.identity.federation.jaxb.entityconfig.impl.BaseConfigTypeImpl) spawnChildFromText((com.sun.identity.federation.jaxb.entityconfig.impl.BaseConfigTypeImpl.class), 15, value)));
                            return ;
                        case  11 :
                            attIdx = context.getAttribute("", "name");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            break;
                        case  4 :
                            state = 5;
                            eatText1(value);
                            return ;
                        case  13 :
                            revertToParentFromText(value);
                            return ;
                        case  9 :
                            state = 10;
                            continue outer;
                        case  7 :
                            state = 8;
                            eatText3(value);
                            return ;
                        case  17 :
                            attIdx = context.getAttribute("", "metaAlias");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            _getIDPDescriptorConfig().add(((com.sun.identity.federation.jaxb.entityconfig.impl.BaseConfigTypeImpl) spawnChildFromText((com.sun.identity.federation.jaxb.entityconfig.impl.BaseConfigTypeImpl.class), 18, value)));
                            return ;
                        case  20 :
                            attIdx = context.getAttribute("", "metaAlias");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            _AffiliationDescriptorConfig = ((com.sun.identity.federation.jaxb.entityconfig.impl.BaseConfigTypeImpl) spawnChildFromText((com.sun.identity.federation.jaxb.entityconfig.impl.BaseConfigTypeImpl.class), 21, value));
                            return ;
                        case  3 :
                            attIdx = context.getAttribute("", "entityID");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 6;
                                eatText1(v);
                                continue outer;
                            }
                            break;
                        case  16 :
                            revertToParentFromText(value);
                            return ;
                        case  0 :
                            attIdx = context.getAttribute("", "ID");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 3;
                                eatText2(v);
                                continue outer;
                            }
                            state = 3;
                            continue outer;
                        case  19 :
                            state = 16;
                            continue outer;
                        case  6 :
                            attIdx = context.getAttribute("", "hosted");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 9;
                                eatText3(v);
                                continue outer;
                            }
                            state = 9;
                            continue outer;
                    }
                } catch (java.lang.RuntimeException e) {
                    handleUnexpectedTextException(value, e);
                }
                break;
            }
        }

    }

}
