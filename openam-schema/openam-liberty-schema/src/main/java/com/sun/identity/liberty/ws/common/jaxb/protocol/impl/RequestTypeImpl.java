//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v1.0.6-b27-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2012.06.11 at 10:33:54 AM PDT 
//


package com.sun.identity.liberty.ws.common.jaxb.protocol.impl;

public class RequestTypeImpl
    extends com.sun.identity.liberty.ws.common.jaxb.protocol.impl.RequestAbstractTypeImpl
    implements com.sun.identity.liberty.ws.common.jaxb.protocol.RequestType, com.sun.xml.bind.JAXBObject, com.sun.identity.federation.jaxb.entityconfig.impl.runtime.UnmarshallableObject, com.sun.identity.federation.jaxb.entityconfig.impl.runtime.XMLSerializable, com.sun.identity.federation.jaxb.entityconfig.impl.runtime.ValidatableObject
{

    protected com.sun.identity.liberty.ws.common.jaxb.protocol.AuthorizationDecisionQueryType _AuthorizationDecisionQuery;
    protected com.sun.xml.bind.util.ListImpl _AssertionIDReference;
    protected com.sun.xml.bind.util.ListImpl _AssertionArtifact;
    protected com.sun.identity.liberty.ws.common.jaxb.protocol.QueryAbstractType _Query;
    protected com.sun.identity.liberty.ws.common.jaxb.protocol.SubjectQueryAbstractType _SubjectQuery;
    protected com.sun.identity.liberty.ws.common.jaxb.protocol.AttributeQueryType _AttributeQuery;
    protected com.sun.identity.liberty.ws.common.jaxb.protocol.AuthenticationQueryType _AuthenticationQuery;
    public final static java.lang.Class version = (com.sun.identity.liberty.ws.common.jaxb.protocol.impl.JAXBVersion.class);
    private static com.sun.msv.grammar.Grammar schemaFragment;

    private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
        return (com.sun.identity.liberty.ws.common.jaxb.protocol.RequestType.class);
    }

    public com.sun.identity.liberty.ws.common.jaxb.protocol.AuthorizationDecisionQueryType getAuthorizationDecisionQuery() {
        return _AuthorizationDecisionQuery;
    }

    public void setAuthorizationDecisionQuery(com.sun.identity.liberty.ws.common.jaxb.protocol.AuthorizationDecisionQueryType value) {
        _AuthorizationDecisionQuery = value;
    }

    protected com.sun.xml.bind.util.ListImpl _getAssertionIDReference() {
        if (_AssertionIDReference == null) {
            _AssertionIDReference = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
        }
        return _AssertionIDReference;
    }

    public java.util.List getAssertionIDReference() {
        return _getAssertionIDReference();
    }

    protected com.sun.xml.bind.util.ListImpl _getAssertionArtifact() {
        if (_AssertionArtifact == null) {
            _AssertionArtifact = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
        }
        return _AssertionArtifact;
    }

    public java.util.List getAssertionArtifact() {
        return _getAssertionArtifact();
    }

    public com.sun.identity.liberty.ws.common.jaxb.protocol.QueryAbstractType getQuery() {
        return _Query;
    }

    public void setQuery(com.sun.identity.liberty.ws.common.jaxb.protocol.QueryAbstractType value) {
        _Query = value;
    }

    public com.sun.identity.liberty.ws.common.jaxb.protocol.SubjectQueryAbstractType getSubjectQuery() {
        return _SubjectQuery;
    }

    public void setSubjectQuery(com.sun.identity.liberty.ws.common.jaxb.protocol.SubjectQueryAbstractType value) {
        _SubjectQuery = value;
    }

    public com.sun.identity.liberty.ws.common.jaxb.protocol.AttributeQueryType getAttributeQuery() {
        return _AttributeQuery;
    }

    public void setAttributeQuery(com.sun.identity.liberty.ws.common.jaxb.protocol.AttributeQueryType value) {
        _AttributeQuery = value;
    }

    public com.sun.identity.liberty.ws.common.jaxb.protocol.AuthenticationQueryType getAuthenticationQuery() {
        return _AuthenticationQuery;
    }

    public void setAuthenticationQuery(com.sun.identity.liberty.ws.common.jaxb.protocol.AuthenticationQueryType value) {
        _AuthenticationQuery = value;
    }

    public com.sun.identity.federation.jaxb.entityconfig.impl.runtime.UnmarshallingEventHandler createUnmarshaller(com.sun.identity.federation.jaxb.entityconfig.impl.runtime.UnmarshallingContext context) {
        return new com.sun.identity.liberty.ws.common.jaxb.protocol.impl.RequestTypeImpl.Unmarshaller(context);
    }

    public void serializeBody(com.sun.identity.federation.jaxb.entityconfig.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        int idx2 = 0;
        final int len2 = ((_AssertionIDReference == null)? 0 :_AssertionIDReference.size());
        int idx3 = 0;
        final int len3 = ((_AssertionArtifact == null)? 0 :_AssertionArtifact.size());
        super.serializeBody(context);
        if (((((((((_AssertionIDReference == null)? 0 :_AssertionIDReference.size()) == 0)&&(_SubjectQuery == null))&&(_AuthenticationQuery == null))&&(_Query!= null))&&(_AuthorizationDecisionQuery == null))&&(_AttributeQuery == null))&&(((_AssertionArtifact == null)? 0 :_AssertionArtifact.size()) == 0)) {
            if (_Query instanceof javax.xml.bind.Element) {
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _Query), "Query");
            } else {
                context.startElement("urn:oasis:names:tc:SAML:1.0:protocol", "Query");
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Query), "Query");
                context.endNamespaceDecls();
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Query), "Query");
                context.endAttributes();
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _Query), "Query");
                context.endElement();
            }
        } else {
            if (((((((((_AssertionIDReference == null)? 0 :_AssertionIDReference.size()) == 0)&&(_SubjectQuery!= null))&&(_AuthenticationQuery == null))&&(_Query == null))&&(_AuthorizationDecisionQuery == null))&&(_AttributeQuery == null))&&(((_AssertionArtifact == null)? 0 :_AssertionArtifact.size()) == 0)) {
                if (_SubjectQuery instanceof javax.xml.bind.Element) {
                    context.childAsBody(((com.sun.xml.bind.JAXBObject) _SubjectQuery), "SubjectQuery");
                } else {
                    context.startElement("urn:oasis:names:tc:SAML:1.0:protocol", "SubjectQuery");
                    context.childAsURIs(((com.sun.xml.bind.JAXBObject) _SubjectQuery), "SubjectQuery");
                    context.endNamespaceDecls();
                    context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _SubjectQuery), "SubjectQuery");
                    context.endAttributes();
                    context.childAsBody(((com.sun.xml.bind.JAXBObject) _SubjectQuery), "SubjectQuery");
                    context.endElement();
                }
            } else {
                if (((((((((_AssertionIDReference == null)? 0 :_AssertionIDReference.size()) == 0)&&(_SubjectQuery == null))&&(_AuthenticationQuery!= null))&&(_Query == null))&&(_AuthorizationDecisionQuery == null))&&(_AttributeQuery == null))&&(((_AssertionArtifact == null)? 0 :_AssertionArtifact.size()) == 0)) {
                    if (_AuthenticationQuery instanceof javax.xml.bind.Element) {
                        context.childAsBody(((com.sun.xml.bind.JAXBObject) _AuthenticationQuery), "AuthenticationQuery");
                    } else {
                        context.startElement("urn:oasis:names:tc:SAML:1.0:protocol", "AuthenticationQuery");
                        context.childAsURIs(((com.sun.xml.bind.JAXBObject) _AuthenticationQuery), "AuthenticationQuery");
                        context.endNamespaceDecls();
                        context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _AuthenticationQuery), "AuthenticationQuery");
                        context.endAttributes();
                        context.childAsBody(((com.sun.xml.bind.JAXBObject) _AuthenticationQuery), "AuthenticationQuery");
                        context.endElement();
                    }
                } else {
                    if (((((((((_AssertionIDReference == null)? 0 :_AssertionIDReference.size()) == 0)&&(_SubjectQuery == null))&&(_AuthenticationQuery == null))&&(_Query == null))&&(_AuthorizationDecisionQuery == null))&&(_AttributeQuery!= null))&&(((_AssertionArtifact == null)? 0 :_AssertionArtifact.size()) == 0)) {
                        if (_AttributeQuery instanceof javax.xml.bind.Element) {
                            context.childAsBody(((com.sun.xml.bind.JAXBObject) _AttributeQuery), "AttributeQuery");
                        } else {
                            context.startElement("urn:oasis:names:tc:SAML:1.0:protocol", "AttributeQuery");
                            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _AttributeQuery), "AttributeQuery");
                            context.endNamespaceDecls();
                            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _AttributeQuery), "AttributeQuery");
                            context.endAttributes();
                            context.childAsBody(((com.sun.xml.bind.JAXBObject) _AttributeQuery), "AttributeQuery");
                            context.endElement();
                        }
                    } else {
                        if (((((((((_AssertionIDReference == null)? 0 :_AssertionIDReference.size()) == 0)&&(_SubjectQuery == null))&&(_AuthenticationQuery == null))&&(_Query == null))&&(_AuthorizationDecisionQuery!= null))&&(_AttributeQuery == null))&&(((_AssertionArtifact == null)? 0 :_AssertionArtifact.size()) == 0)) {
                            if (_AuthorizationDecisionQuery instanceof javax.xml.bind.Element) {
                                context.childAsBody(((com.sun.xml.bind.JAXBObject) _AuthorizationDecisionQuery), "AuthorizationDecisionQuery");
                            } else {
                                context.startElement("urn:oasis:names:tc:SAML:1.0:protocol", "AuthorizationDecisionQuery");
                                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _AuthorizationDecisionQuery), "AuthorizationDecisionQuery");
                                context.endNamespaceDecls();
                                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _AuthorizationDecisionQuery), "AuthorizationDecisionQuery");
                                context.endAttributes();
                                context.childAsBody(((com.sun.xml.bind.JAXBObject) _AuthorizationDecisionQuery), "AuthorizationDecisionQuery");
                                context.endElement();
                            }
                        } else {
                            if (((((((((_AssertionIDReference == null)? 0 :_AssertionIDReference.size())>= 1)&&(_SubjectQuery == null))&&(_AuthenticationQuery == null))&&(_Query == null))&&(_AuthorizationDecisionQuery == null))&&(_AttributeQuery == null))&&(((_AssertionArtifact == null)? 0 :_AssertionArtifact.size()) == 0)) {
                                while (idx2 != len2) {
                                    context.startElement("urn:oasis:names:tc:SAML:1.0:assertion", "AssertionIDReference");
                                    int idx_10 = idx2;
                                    try {
                                        idx_10 += 1;
                                    } catch (java.lang.Exception e) {
                                        com.sun.identity.federation.jaxb.entityconfig.impl.runtime.Util.handlePrintConversionException(this, e, context);
                                    }
                                    context.endNamespaceDecls();
                                    int idx_11 = idx2;
                                    try {
                                        idx_11 += 1;
                                    } catch (java.lang.Exception e) {
                                        com.sun.identity.federation.jaxb.entityconfig.impl.runtime.Util.handlePrintConversionException(this, e, context);
                                    }
                                    context.endAttributes();
                                    try {
                                        context.text(((java.lang.String) _AssertionIDReference.get(idx2 ++)), "AssertionIDReference");
                                    } catch (java.lang.Exception e) {
                                        com.sun.identity.federation.jaxb.entityconfig.impl.runtime.Util.handlePrintConversionException(this, e, context);
                                    }
                                    context.endElement();
                                }
                            } else {
                                if (((((((((_AssertionIDReference == null)? 0 :_AssertionIDReference.size()) == 0)&&(_SubjectQuery == null))&&(_AuthenticationQuery == null))&&(_Query == null))&&(_AuthorizationDecisionQuery == null))&&(_AttributeQuery == null))&&(((_AssertionArtifact == null)? 0 :_AssertionArtifact.size())>= 1)) {
                                    while (idx3 != len3) {
                                        context.startElement("urn:oasis:names:tc:SAML:1.0:protocol", "AssertionArtifact");
                                        int idx_12 = idx3;
                                        try {
                                            idx_12 += 1;
                                        } catch (java.lang.Exception e) {
                                            com.sun.identity.federation.jaxb.entityconfig.impl.runtime.Util.handlePrintConversionException(this, e, context);
                                        }
                                        context.endNamespaceDecls();
                                        int idx_13 = idx3;
                                        try {
                                            idx_13 += 1;
                                        } catch (java.lang.Exception e) {
                                            com.sun.identity.federation.jaxb.entityconfig.impl.runtime.Util.handlePrintConversionException(this, e, context);
                                        }
                                        context.endAttributes();
                                        try {
                                            context.text(((java.lang.String) _AssertionArtifact.get(idx3 ++)), "AssertionArtifact");
                                        } catch (java.lang.Exception e) {
                                            com.sun.identity.federation.jaxb.entityconfig.impl.runtime.Util.handlePrintConversionException(this, e, context);
                                        }
                                        context.endElement();
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }

    public void serializeAttributes(com.sun.identity.federation.jaxb.entityconfig.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        int idx2 = 0;
        final int len2 = ((_AssertionIDReference == null)? 0 :_AssertionIDReference.size());
        int idx3 = 0;
        final int len3 = ((_AssertionArtifact == null)? 0 :_AssertionArtifact.size());
        super.serializeAttributes(context);
        if (((((((((_AssertionIDReference == null)? 0 :_AssertionIDReference.size()) == 0)&&(_SubjectQuery == null))&&(_AuthenticationQuery == null))&&(_Query!= null))&&(_AuthorizationDecisionQuery == null))&&(_AttributeQuery == null))&&(((_AssertionArtifact == null)? 0 :_AssertionArtifact.size()) == 0)) {
            if (_Query instanceof javax.xml.bind.Element) {
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Query), "Query");
            }
        } else {
            if (((((((((_AssertionIDReference == null)? 0 :_AssertionIDReference.size()) == 0)&&(_SubjectQuery!= null))&&(_AuthenticationQuery == null))&&(_Query == null))&&(_AuthorizationDecisionQuery == null))&&(_AttributeQuery == null))&&(((_AssertionArtifact == null)? 0 :_AssertionArtifact.size()) == 0)) {
                if (_SubjectQuery instanceof javax.xml.bind.Element) {
                    context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _SubjectQuery), "SubjectQuery");
                }
            } else {
                if (((((((((_AssertionIDReference == null)? 0 :_AssertionIDReference.size()) == 0)&&(_SubjectQuery == null))&&(_AuthenticationQuery!= null))&&(_Query == null))&&(_AuthorizationDecisionQuery == null))&&(_AttributeQuery == null))&&(((_AssertionArtifact == null)? 0 :_AssertionArtifact.size()) == 0)) {
                    if (_AuthenticationQuery instanceof javax.xml.bind.Element) {
                        context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _AuthenticationQuery), "AuthenticationQuery");
                    }
                } else {
                    if (((((((((_AssertionIDReference == null)? 0 :_AssertionIDReference.size()) == 0)&&(_SubjectQuery == null))&&(_AuthenticationQuery == null))&&(_Query == null))&&(_AuthorizationDecisionQuery == null))&&(_AttributeQuery!= null))&&(((_AssertionArtifact == null)? 0 :_AssertionArtifact.size()) == 0)) {
                        if (_AttributeQuery instanceof javax.xml.bind.Element) {
                            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _AttributeQuery), "AttributeQuery");
                        }
                    } else {
                        if (((((((((_AssertionIDReference == null)? 0 :_AssertionIDReference.size()) == 0)&&(_SubjectQuery == null))&&(_AuthenticationQuery == null))&&(_Query == null))&&(_AuthorizationDecisionQuery!= null))&&(_AttributeQuery == null))&&(((_AssertionArtifact == null)? 0 :_AssertionArtifact.size()) == 0)) {
                            if (_AuthorizationDecisionQuery instanceof javax.xml.bind.Element) {
                                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _AuthorizationDecisionQuery), "AuthorizationDecisionQuery");
                            }
                        } else {
                            if (((((((((_AssertionIDReference == null)? 0 :_AssertionIDReference.size())>= 1)&&(_SubjectQuery == null))&&(_AuthenticationQuery == null))&&(_Query == null))&&(_AuthorizationDecisionQuery == null))&&(_AttributeQuery == null))&&(((_AssertionArtifact == null)? 0 :_AssertionArtifact.size()) == 0)) {
                                while (idx2 != len2) {
                                    try {
                                        idx2 += 1;
                                    } catch (java.lang.Exception e) {
                                        com.sun.identity.federation.jaxb.entityconfig.impl.runtime.Util.handlePrintConversionException(this, e, context);
                                    }
                                }
                            } else {
                                if (((((((((_AssertionIDReference == null)? 0 :_AssertionIDReference.size()) == 0)&&(_SubjectQuery == null))&&(_AuthenticationQuery == null))&&(_Query == null))&&(_AuthorizationDecisionQuery == null))&&(_AttributeQuery == null))&&(((_AssertionArtifact == null)? 0 :_AssertionArtifact.size())>= 1)) {
                                    while (idx3 != len3) {
                                        try {
                                            idx3 += 1;
                                        } catch (java.lang.Exception e) {
                                            com.sun.identity.federation.jaxb.entityconfig.impl.runtime.Util.handlePrintConversionException(this, e, context);
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }

    public void serializeURIs(com.sun.identity.federation.jaxb.entityconfig.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        int idx2 = 0;
        final int len2 = ((_AssertionIDReference == null)? 0 :_AssertionIDReference.size());
        int idx3 = 0;
        final int len3 = ((_AssertionArtifact == null)? 0 :_AssertionArtifact.size());
        super.serializeURIs(context);
        if (((((((((_AssertionIDReference == null)? 0 :_AssertionIDReference.size()) == 0)&&(_SubjectQuery == null))&&(_AuthenticationQuery == null))&&(_Query!= null))&&(_AuthorizationDecisionQuery == null))&&(_AttributeQuery == null))&&(((_AssertionArtifact == null)? 0 :_AssertionArtifact.size()) == 0)) {
            if (_Query instanceof javax.xml.bind.Element) {
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Query), "Query");
            }
        } else {
            if (((((((((_AssertionIDReference == null)? 0 :_AssertionIDReference.size()) == 0)&&(_SubjectQuery!= null))&&(_AuthenticationQuery == null))&&(_Query == null))&&(_AuthorizationDecisionQuery == null))&&(_AttributeQuery == null))&&(((_AssertionArtifact == null)? 0 :_AssertionArtifact.size()) == 0)) {
                if (_SubjectQuery instanceof javax.xml.bind.Element) {
                    context.childAsURIs(((com.sun.xml.bind.JAXBObject) _SubjectQuery), "SubjectQuery");
                }
            } else {
                if (((((((((_AssertionIDReference == null)? 0 :_AssertionIDReference.size()) == 0)&&(_SubjectQuery == null))&&(_AuthenticationQuery!= null))&&(_Query == null))&&(_AuthorizationDecisionQuery == null))&&(_AttributeQuery == null))&&(((_AssertionArtifact == null)? 0 :_AssertionArtifact.size()) == 0)) {
                    if (_AuthenticationQuery instanceof javax.xml.bind.Element) {
                        context.childAsURIs(((com.sun.xml.bind.JAXBObject) _AuthenticationQuery), "AuthenticationQuery");
                    }
                } else {
                    if (((((((((_AssertionIDReference == null)? 0 :_AssertionIDReference.size()) == 0)&&(_SubjectQuery == null))&&(_AuthenticationQuery == null))&&(_Query == null))&&(_AuthorizationDecisionQuery == null))&&(_AttributeQuery!= null))&&(((_AssertionArtifact == null)? 0 :_AssertionArtifact.size()) == 0)) {
                        if (_AttributeQuery instanceof javax.xml.bind.Element) {
                            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _AttributeQuery), "AttributeQuery");
                        }
                    } else {
                        if (((((((((_AssertionIDReference == null)? 0 :_AssertionIDReference.size()) == 0)&&(_SubjectQuery == null))&&(_AuthenticationQuery == null))&&(_Query == null))&&(_AuthorizationDecisionQuery!= null))&&(_AttributeQuery == null))&&(((_AssertionArtifact == null)? 0 :_AssertionArtifact.size()) == 0)) {
                            if (_AuthorizationDecisionQuery instanceof javax.xml.bind.Element) {
                                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _AuthorizationDecisionQuery), "AuthorizationDecisionQuery");
                            }
                        } else {
                            if (((((((((_AssertionIDReference == null)? 0 :_AssertionIDReference.size())>= 1)&&(_SubjectQuery == null))&&(_AuthenticationQuery == null))&&(_Query == null))&&(_AuthorizationDecisionQuery == null))&&(_AttributeQuery == null))&&(((_AssertionArtifact == null)? 0 :_AssertionArtifact.size()) == 0)) {
                                while (idx2 != len2) {
                                    try {
                                        idx2 += 1;
                                    } catch (java.lang.Exception e) {
                                        com.sun.identity.federation.jaxb.entityconfig.impl.runtime.Util.handlePrintConversionException(this, e, context);
                                    }
                                }
                            } else {
                                if (((((((((_AssertionIDReference == null)? 0 :_AssertionIDReference.size()) == 0)&&(_SubjectQuery == null))&&(_AuthenticationQuery == null))&&(_Query == null))&&(_AuthorizationDecisionQuery == null))&&(_AttributeQuery == null))&&(((_AssertionArtifact == null)? 0 :_AssertionArtifact.size())>= 1)) {
                                    while (idx3 != len3) {
                                        try {
                                            idx3 += 1;
                                        } catch (java.lang.Exception e) {
                                            com.sun.identity.federation.jaxb.entityconfig.impl.runtime.Util.handlePrintConversionException(this, e, context);
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }

    public java.lang.Class getPrimaryInterface() {
        return (com.sun.identity.liberty.ws.common.jaxb.protocol.RequestType.class);
    }

    public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
        if (schemaFragment == null) {
            schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.su"
+"n.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gra"
+"mmar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expressi"
+"on\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0002L\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000b"
+"expandedExpq\u0000~\u0000\u0002xpppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000pp"
+"sr\u0000\u001dcom.sun.msv.grammar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0001ppsr\u0000 com."
+"sun.msv.grammar.OneOrMoreExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001ccom.sun.msv.gramm"
+"ar.UnaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0003expq\u0000~\u0000\u0002xq\u0000~\u0000\u0003sr\u0000\u0011java.lang.Boolean"
+"\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000psr\u0000\'com.sun.msv.grammar.trex.ElementP"
+"attern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\tnameClasst\u0000\u001fLcom/sun/msv/grammar/NameCla"
+"ss;xr\u0000\u001ecom.sun.msv.grammar.ElementExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUnd"
+"eclaredAttributesL\u0000\fcontentModelq\u0000~\u0000\u0002xq\u0000~\u0000\u0003q\u0000~\u0000\u0011p\u0000sq\u0000~\u0000\u0000ppsr"
+"\u0000\u001bcom.sun.msv.grammar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/relaxng"
+"/datatype/Datatype;L\u0000\u0006exceptq\u0000~\u0000\u0002L\u0000\u0004namet\u0000\u001dLcom/sun/msv/util"
+"/StringPair;xq\u0000~\u0000\u0003q\u0000~\u0000\u0011psr\u0000\"com.sun.msv.datatype.xsd.QnameTy"
+"pe\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000*com.sun.msv.datatype.xsd.BuiltinAtomicType\u0000"
+"\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.datatype.xsd.ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002"
+"\u0000\u0000xr\u0000\'com.sun.msv.datatype.xsd.XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fn"
+"amespaceUrit\u0000\u0012Ljava/lang/String;L\u0000\btypeNameq\u0000~\u0000\u001fL\u0000\nwhiteSpac"
+"et\u0000.Lcom/sun/msv/datatype/xsd/WhiteSpaceProcessor;xpt\u0000 http:"
+"//www.w3.org/2001/XMLSchemat\u0000\u0005QNamesr\u00005com.sun.msv.datatype."
+"xsd.WhiteSpaceProcessor$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun.msv.d"
+"atatype.xsd.WhiteSpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.sun.msv."
+"grammar.Expression$NullSetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003q\u0000~\u0000\u0011ps"
+"r\u0000\u001bcom.sun.msv.util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u001fL\u0000"
+"\fnamespaceURIq\u0000~\u0000\u001fxpq\u0000~\u0000#q\u0000~\u0000\"sq\u0000~\u0000\u000bppsr\u0000 com.sun.msv.gramma"
+"r.AttributeExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnameClassq\u0000~\u0000\u0013xq\u0000~\u0000\u0003q"
+"\u0000~\u0000\u0011pq\u0000~\u0000\u001asr\u0000#com.sun.msv.grammar.SimpleNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002"
+"L\u0000\tlocalNameq\u0000~\u0000\u001fL\u0000\fnamespaceURIq\u0000~\u0000\u001fxr\u0000\u001dcom.sun.msv.grammar"
+".NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpt\u0000\u0004typet\u0000)http://www.w3.org/2001/XMLS"
+"chema-instancesr\u00000com.sun.msv.grammar.Expression$EpsilonExpr"
+"ession\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003sq\u0000~\u0000\u0010\u0001q\u0000~\u00004sq\u0000~\u0000.t\u0000\u000bRespondWitht\u0000$ur"
+"n:oasis:names:tc:SAML:1.0:protocolq\u0000~\u00004sq\u0000~\u0000\u000bppsq\u0000~\u0000\u000bq\u0000~\u0000\u0011ps"
+"q\u0000~\u0000\u0012q\u0000~\u0000\u0011p\u0000sq\u0000~\u0000\u000bppsq\u0000~\u0000\rq\u0000~\u0000\u0011psq\u0000~\u0000,q\u0000~\u0000\u0011psr\u00002com.sun.msv."
+"grammar.Expression$AnyStringExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003q\u0000~\u00005"
+"q\u0000~\u0000@sr\u0000 com.sun.msv.grammar.AnyNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000/q\u0000"
+"~\u00004sq\u0000~\u0000.t\u0000?com.sun.identity.liberty.ws.common.jaxb.xmlsig.S"
+"ignatureElementt\u0000+http://java.sun.com/jaxb/xjc/dummy-element"
+"ssq\u0000~\u0000\u0012q\u0000~\u0000\u0011p\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0012pp\u0000sq\u0000~\u0000\u000bppsq\u0000~\u0000\rq\u0000~\u0000\u0011psq\u0000~\u0000,q\u0000~"
+"\u0000\u0011pq\u0000~\u0000@q\u0000~\u0000Bq\u0000~\u00004sq\u0000~\u0000.t\u0000<com.sun.identity.liberty.ws.commo"
+"n.jaxb.xmlsig.SignatureTypeq\u0000~\u0000Esq\u0000~\u0000\u000bppsq\u0000~\u0000,q\u0000~\u0000\u0011pq\u0000~\u0000\u001aq\u0000~"
+"\u00000q\u0000~\u00004sq\u0000~\u0000.t\u0000\tSignaturet\u0000\"http://www.w3.org/2000/09/xmldsi"
+"g#q\u0000~\u00004sq\u0000~\u0000\u000bppsq\u0000~\u0000\u000bppsq\u0000~\u0000\u000bppsq\u0000~\u0000\u000bppsq\u0000~\u0000\u000bppsq\u0000~\u0000\u000bppsq\u0000~\u0000"
+"\u000bppsq\u0000~\u0000\u000bppsq\u0000~\u0000\u000bppsq\u0000~\u0000\u000bppsq\u0000~\u0000\u000bppsq\u0000~\u0000\u0012pp\u0000sq\u0000~\u0000\u000bppsq\u0000~\u0000\rq\u0000"
+"~\u0000\u0011psq\u0000~\u0000,q\u0000~\u0000\u0011pq\u0000~\u0000@q\u0000~\u0000Bq\u0000~\u00004sq\u0000~\u0000.t\u0000=com.sun.identity.lib"
+"erty.ws.common.jaxb.protocol.QueryElementq\u0000~\u0000Esq\u0000~\u0000\u0012pp\u0000sq\u0000~\u0000"
+"\u0000ppsq\u0000~\u0000\u0012pp\u0000sq\u0000~\u0000\u000bppsq\u0000~\u0000\rq\u0000~\u0000\u0011psq\u0000~\u0000,q\u0000~\u0000\u0011pq\u0000~\u0000@q\u0000~\u0000Bq\u0000~\u00004s"
+"q\u0000~\u0000.t\u0000Bcom.sun.identity.liberty.ws.common.jaxb.protocol.Que"
+"ryAbstractTypeq\u0000~\u0000Esq\u0000~\u0000\u000bppsq\u0000~\u0000,q\u0000~\u0000\u0011pq\u0000~\u0000\u001aq\u0000~\u00000q\u0000~\u00004sq\u0000~\u0000."
+"t\u0000\u0005Queryq\u0000~\u00008sq\u0000~\u0000\u0012pp\u0000sq\u0000~\u0000\u000bppsq\u0000~\u0000\rq\u0000~\u0000\u0011psq\u0000~\u0000,q\u0000~\u0000\u0011pq\u0000~\u0000@q"
+"\u0000~\u0000Bq\u0000~\u00004sq\u0000~\u0000.t\u0000Dcom.sun.identity.liberty.ws.common.jaxb.pr"
+"otocol.SubjectQueryElementq\u0000~\u0000Esq\u0000~\u0000\u0012pp\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0012pp\u0000sq\u0000"
+"~\u0000\u000bppsq\u0000~\u0000\rq\u0000~\u0000\u0011psq\u0000~\u0000,q\u0000~\u0000\u0011pq\u0000~\u0000@q\u0000~\u0000Bq\u0000~\u00004sq\u0000~\u0000.t\u0000Icom.sun"
+".identity.liberty.ws.common.jaxb.protocol.SubjectQueryAbstra"
+"ctTypeq\u0000~\u0000Esq\u0000~\u0000\u000bppsq\u0000~\u0000,q\u0000~\u0000\u0011pq\u0000~\u0000\u001aq\u0000~\u00000q\u0000~\u00004sq\u0000~\u0000.t\u0000\fSubje"
+"ctQueryq\u0000~\u00008sq\u0000~\u0000\u0012pp\u0000sq\u0000~\u0000\u000bppsq\u0000~\u0000\rq\u0000~\u0000\u0011psq\u0000~\u0000,q\u0000~\u0000\u0011pq\u0000~\u0000@q\u0000"
+"~\u0000Bq\u0000~\u00004sq\u0000~\u0000.t\u0000Kcom.sun.identity.liberty.ws.common.jaxb.pro"
+"tocol.AuthenticationQueryElementq\u0000~\u0000Esq\u0000~\u0000\u0012pp\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0012"
+"pp\u0000sq\u0000~\u0000\u000bppsq\u0000~\u0000\rq\u0000~\u0000\u0011psq\u0000~\u0000,q\u0000~\u0000\u0011pq\u0000~\u0000@q\u0000~\u0000Bq\u0000~\u00004sq\u0000~\u0000.t\u0000Hc"
+"om.sun.identity.liberty.ws.common.jaxb.protocol.Authenticati"
+"onQueryTypeq\u0000~\u0000Esq\u0000~\u0000\u000bppsq\u0000~\u0000,q\u0000~\u0000\u0011pq\u0000~\u0000\u001aq\u0000~\u00000q\u0000~\u00004sq\u0000~\u0000.t\u0000\u0013"
+"AuthenticationQueryq\u0000~\u00008sq\u0000~\u0000\u0012pp\u0000sq\u0000~\u0000\u000bppsq\u0000~\u0000\rq\u0000~\u0000\u0011psq\u0000~\u0000,q"
+"\u0000~\u0000\u0011pq\u0000~\u0000@q\u0000~\u0000Bq\u0000~\u00004sq\u0000~\u0000.t\u0000Fcom.sun.identity.liberty.ws.com"
+"mon.jaxb.protocol.AttributeQueryElementq\u0000~\u0000Esq\u0000~\u0000\u0012pp\u0000sq\u0000~\u0000\u0000p"
+"psq\u0000~\u0000\u0012pp\u0000sq\u0000~\u0000\u000bppsq\u0000~\u0000\rq\u0000~\u0000\u0011psq\u0000~\u0000,q\u0000~\u0000\u0011pq\u0000~\u0000@q\u0000~\u0000Bq\u0000~\u00004sq\u0000"
+"~\u0000.t\u0000Ccom.sun.identity.liberty.ws.common.jaxb.protocol.Attri"
+"buteQueryTypeq\u0000~\u0000Esq\u0000~\u0000\u000bppsq\u0000~\u0000,q\u0000~\u0000\u0011pq\u0000~\u0000\u001aq\u0000~\u00000q\u0000~\u00004sq\u0000~\u0000.t"
+"\u0000\u000eAttributeQueryq\u0000~\u00008sq\u0000~\u0000\u0012pp\u0000sq\u0000~\u0000\u000bppsq\u0000~\u0000\rq\u0000~\u0000\u0011psq\u0000~\u0000,q\u0000~\u0000"
+"\u0011pq\u0000~\u0000@q\u0000~\u0000Bq\u0000~\u00004sq\u0000~\u0000.t\u0000Rcom.sun.identity.liberty.ws.common"
+".jaxb.protocol.AuthorizationDecisionQueryElementq\u0000~\u0000Esq\u0000~\u0000\u0012p"
+"p\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0012pp\u0000sq\u0000~\u0000\u000bppsq\u0000~\u0000\rq\u0000~\u0000\u0011psq\u0000~\u0000,q\u0000~\u0000\u0011pq\u0000~\u0000@q\u0000~\u0000"
+"Bq\u0000~\u00004sq\u0000~\u0000.t\u0000Ocom.sun.identity.liberty.ws.common.jaxb.proto"
+"col.AuthorizationDecisionQueryTypeq\u0000~\u0000Esq\u0000~\u0000\u000bppsq\u0000~\u0000,q\u0000~\u0000\u0011pq"
+"\u0000~\u0000\u001aq\u0000~\u00000q\u0000~\u00004sq\u0000~\u0000.t\u0000\u001aAuthorizationDecisionQueryq\u0000~\u00008sq\u0000~\u0000\r"
+"ppsq\u0000~\u0000\u0012pp\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0017ppsr\u0000#com.sun.msv.datatype.xsd.Ncna"
+"meType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\"com.sun.msv.datatype.xsd.TokenType\u0000\u0000\u0000\u0000\u0000"
+"\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000#com.sun.msv.datatype.xsd.StringType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001Z\u0000\ri"
+"sAlwaysValidxq\u0000~\u0000\u001cq\u0000~\u0000\"t\u0000\u0006NCNameq\u0000~\u0000&\u0000q\u0000~\u0000(sq\u0000~\u0000)q\u0000~\u0000\u00c0q\u0000~\u0000\"s"
+"q\u0000~\u0000\u000bppsq\u0000~\u0000,q\u0000~\u0000\u0011pq\u0000~\u0000\u001aq\u0000~\u00000q\u0000~\u00004sq\u0000~\u0000.t\u0000\u0014AssertionIDRefere"
+"ncet\u0000%urn:oasis:names:tc:SAML:1.0:assertionsq\u0000~\u0000\rppsq\u0000~\u0000\u0012pp\u0000"
+"sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0017q\u0000~\u0000\u0011psq\u0000~\u0000\u00beq\u0000~\u0000\"t\u0000\u0006stringsr\u00005com.sun.msv.data"
+"type.xsd.WhiteSpaceProcessor$Preserve\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000%\u0001q\u0000~\u0000("
+"sq\u0000~\u0000)q\u0000~\u0000\u00ccq\u0000~\u0000\"sq\u0000~\u0000\u000bppsq\u0000~\u0000,q\u0000~\u0000\u0011pq\u0000~\u0000\u001aq\u0000~\u00000q\u0000~\u00004sq\u0000~\u0000.t\u0000\u0011"
+"AssertionArtifactq\u0000~\u00008sq\u0000~\u0000,ppsq\u0000~\u0000\u0017ppsr\u0000%com.sun.msv.dataty"
+"pe.xsd.DateTimeType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000)com.sun.msv.datatype.xsd.D"
+"ateTimeBaseType\u0014W\u001a@3\u00a5\u00b4\u00e5\u0002\u0000\u0000xq\u0000~\u0000\u001cq\u0000~\u0000\"t\u0000\bdateTimeq\u0000~\u0000&q\u0000~\u0000(sq"
+"\u0000~\u0000)q\u0000~\u0000\u00d9q\u0000~\u0000\"sq\u0000~\u0000.t\u0000\fIssueInstantt\u0000\u0000sq\u0000~\u0000,ppsq\u0000~\u0000\u0017ppsr\u0000$co"
+"m.sun.msv.datatype.xsd.IntegerType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000+com.sun.msv"
+".datatype.xsd.IntegerDerivedType\u0099\u00f1]\u0090&6k\u00be\u0002\u0000\u0001L\u0000\nbaseFacetst\u0000)L"
+"com/sun/msv/datatype/xsd/XSDatatypeImpl;xq\u0000~\u0000\u001cq\u0000~\u0000\"t\u0000\u0007intege"
+"rq\u0000~\u0000&sr\u0000,com.sun.msv.datatype.xsd.FractionDigitsFacet\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0000\u0001\u0002\u0000\u0001I\u0000\u0005scalexr\u0000;com.sun.msv.datatype.xsd.DataTypeWithLexica"
+"lConstraintFacetT\u0090\u001c>\u001azb\u00ea\u0002\u0000\u0000xr\u0000*com.sun.msv.datatype.xsd.Data"
+"TypeWithFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0005Z\u0000\fisFacetFixedZ\u0000\u0012needValueCheckFlag"
+"L\u0000\bbaseTypeq\u0000~\u0000\u00e2L\u0000\fconcreteTypet\u0000\'Lcom/sun/msv/datatype/xsd/"
+"ConcreteType;L\u0000\tfacetNameq\u0000~\u0000\u001fxq\u0000~\u0000\u001eppq\u0000~\u0000&\u0001\u0000sr\u0000#com.sun.msv"
+".datatype.xsd.NumberType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u001cq\u0000~\u0000\"t\u0000\u0007decimalq\u0000~\u0000"
+"&q\u0000~\u0000\u00ebt\u0000\u000efractionDigits\u0000\u0000\u0000\u0000q\u0000~\u0000(sq\u0000~\u0000)q\u0000~\u0000\u00e4q\u0000~\u0000\"sq\u0000~\u0000.t\u0000\fMaj"
+"orVersionq\u0000~\u0000\u00ddsq\u0000~\u0000,ppq\u0000~\u0000\u00dfsq\u0000~\u0000.t\u0000\fMinorVersionq\u0000~\u0000\u00ddsq\u0000~\u0000,p"
+"psq\u0000~\u0000\u0017ppsr\u0000\u001fcom.sun.msv.datatype.xsd.IDType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000"
+"\u00bcq\u0000~\u0000\"t\u0000\u0002IDq\u0000~\u0000&\u0000q\u0000~\u0000(sq\u0000~\u0000)q\u0000~\u0000\u00f8q\u0000~\u0000\"sq\u0000~\u0000.t\u0000\tRequestIDq\u0000~\u0000"
+"\u00ddsr\u0000\"com.sun.msv.grammar.ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTabl"
+"et\u0000/Lcom/sun/msv/grammar/ExpressionPool$ClosedHash;xpsr\u0000-com"
+".sun.msv.grammar.ExpressionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0003\u0000\u0003I\u0000\u0005coun"
+"tB\u0000\rstreamVersionL\u0000\u0006parentt\u0000$Lcom/sun/msv/grammar/Expression"
+"Pool;xp\u0000\u0000\u0000A\u0001pq\u0000~\u0000=q\u0000~\u0000\u00c9q\u0000~\u0000Zq\u0000~\u0000\nq\u0000~\u0000\u00baq\u0000~\u0000\\q\u0000~\u0000Sq\u0000~\u0000Tq\u0000~\u0000\u0016q\u0000"
+"~\u0000\u00c7q\u0000~\u0000\u0007q\u0000~\u0000\u0006q\u0000~\u00009q\u0000~\u0000\u0005q\u0000~\u0000[q\u0000~\u0000\u00afq\u0000~\u0000\u00a7q\u0000~\u0000\u009dq\u0000~\u0000\u0095q\u0000~\u0000\u008bq\u0000~\u0000\u0083q\u0000"
+"~\u0000yq\u0000~\u0000qq\u0000~\u0000gq\u0000~\u0000_q\u0000~\u0000Iq\u0000~\u0000<q\u0000~\u0000:q\u0000~\u0000]q\u0000~\u0000Yq\u0000~\u0000\u00d0q\u0000~\u0000\u00c2q\u0000~\u0000\u00b4q\u0000"
+"~\u0000\u00a2q\u0000~\u0000\u0090q\u0000~\u0000~q\u0000~\u0000lq\u0000~\u0000Nq\u0000~\u0000+q\u0000~\u0000\u00b8q\u0000~\u0000\u000fq\u0000~\u0000\fq\u0000~\u0000\tq\u0000~\u0000Uq\u0000~\u0000\u00adq\u0000"
+"~\u0000\u009bq\u0000~\u0000\u0089q\u0000~\u0000wq\u0000~\u0000eq\u0000~\u0000Gq\u0000~\u0000Xq\u0000~\u0000Vq\u0000~\u0000Wq\u0000~\u0000\bq\u0000~\u0000\u00b0q\u0000~\u0000\u00a8q\u0000~\u0000\u009eq\u0000"
+"~\u0000\u0096q\u0000~\u0000\u008cq\u0000~\u0000\u0084q\u0000~\u0000zq\u0000~\u0000rq\u0000~\u0000hq\u0000~\u0000`q\u0000~\u0000Jx"));
        }
        return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
    }

    public class Unmarshaller
        extends com.sun.identity.federation.jaxb.entityconfig.impl.runtime.AbstractUnmarshallingEventHandlerImpl
    {


        public Unmarshaller(com.sun.identity.federation.jaxb.entityconfig.impl.runtime.UnmarshallingContext context) {
            super(context, "-----------------");
        }

        protected Unmarshaller(com.sun.identity.federation.jaxb.entityconfig.impl.runtime.UnmarshallingContext context, int startState) {
            this(context);
            state = startState;
        }

        public java.lang.Object owner() {
            return com.sun.identity.liberty.ws.common.jaxb.protocol.impl.RequestTypeImpl.this;
        }

        public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  13 :
                        attIdx = context.getAttribute("", "Resource");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("Subject" == ___local)&&("urn:liberty:iff:2003-08" == ___uri)) {
                            _AttributeQuery = ((com.sun.identity.liberty.ws.common.jaxb.protocol.impl.AttributeQueryTypeImpl) spawnChildFromEnterElement((com.sun.identity.liberty.ws.common.jaxb.protocol.impl.AttributeQueryTypeImpl.class), 14, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("ProxySubject" == ___local)&&("urn:liberty:sec:2003-08" == ___uri)) {
                            _AttributeQuery = ((com.sun.identity.liberty.ws.common.jaxb.protocol.impl.AttributeQueryTypeImpl) spawnChildFromEnterElement((com.sun.identity.liberty.ws.common.jaxb.protocol.impl.AttributeQueryTypeImpl.class), 14, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("Subject" == ___local)&&("urn:oasis:names:tc:SAML:1.0:assertion" == ___uri)) {
                            _AttributeQuery = ((com.sun.identity.liberty.ws.common.jaxb.protocol.impl.AttributeQueryTypeImpl) spawnChildFromEnterElement((com.sun.identity.liberty.ws.common.jaxb.protocol.impl.AttributeQueryTypeImpl.class), 14, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("Subject" == ___local)&&("urn:oasis:names:tc:SAML:1.0:assertion" == ___uri)) {
                            _AttributeQuery = ((com.sun.identity.liberty.ws.common.jaxb.protocol.impl.AttributeQueryTypeImpl) spawnChildFromEnterElement((com.sun.identity.liberty.ws.common.jaxb.protocol.impl.AttributeQueryTypeImpl.class), 14, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        _AttributeQuery = ((com.sun.identity.liberty.ws.common.jaxb.protocol.impl.AttributeQueryTypeImpl) spawnChildFromEnterElement((com.sun.identity.liberty.ws.common.jaxb.protocol.impl.AttributeQueryTypeImpl.class), 14, ___uri, ___local, ___qname, __atts));
                        return ;
                    case  15 :
                        attIdx = context.getAttribute("", "Resource");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        break;
                    case  11 :
                        _Query = ((com.sun.identity.liberty.ws.common.jaxb.protocol.impl.QueryAbstractTypeImpl) spawnChildFromEnterElement((com.sun.identity.liberty.ws.common.jaxb.protocol.impl.QueryAbstractTypeImpl.class), 12, ___uri, ___local, ___qname, __atts));
                        return ;
                    case  1 :
                        if (("Query" == ___local)&&("urn:oasis:names:tc:SAML:1.0:protocol" == ___uri)) {
                            _Query = ((com.sun.identity.liberty.ws.common.jaxb.protocol.impl.QueryElementImpl) spawnChildFromEnterElement((com.sun.identity.liberty.ws.common.jaxb.protocol.impl.QueryElementImpl.class), 2, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("Query" == ___local)&&("urn:oasis:names:tc:SAML:1.0:protocol" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 11;
                            return ;
                        }
                        if (("SubjectQuery" == ___local)&&("urn:oasis:names:tc:SAML:1.0:protocol" == ___uri)) {
                            _SubjectQuery = ((com.sun.identity.liberty.ws.common.jaxb.protocol.impl.SubjectQueryElementImpl) spawnChildFromEnterElement((com.sun.identity.liberty.ws.common.jaxb.protocol.impl.SubjectQueryElementImpl.class), 2, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("SubjectQuery" == ___local)&&("urn:oasis:names:tc:SAML:1.0:protocol" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 7;
                            return ;
                        }
                        if (("AuthenticationQuery" == ___local)&&("urn:oasis:names:tc:SAML:1.0:protocol" == ___uri)) {
                            _AuthenticationQuery = ((com.sun.identity.liberty.ws.common.jaxb.protocol.impl.AuthenticationQueryElementImpl) spawnChildFromEnterElement((com.sun.identity.liberty.ws.common.jaxb.protocol.impl.AuthenticationQueryElementImpl.class), 2, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("AuthenticationQuery" == ___local)&&("urn:oasis:names:tc:SAML:1.0:protocol" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 9;
                            return ;
                        }
                        if (("AttributeQuery" == ___local)&&("urn:oasis:names:tc:SAML:1.0:protocol" == ___uri)) {
                            _AttributeQuery = ((com.sun.identity.liberty.ws.common.jaxb.protocol.impl.AttributeQueryElementImpl) spawnChildFromEnterElement((com.sun.identity.liberty.ws.common.jaxb.protocol.impl.AttributeQueryElementImpl.class), 2, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("AttributeQuery" == ___local)&&("urn:oasis:names:tc:SAML:1.0:protocol" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 13;
                            return ;
                        }
                        if (("AuthorizationDecisionQuery" == ___local)&&("urn:oasis:names:tc:SAML:1.0:protocol" == ___uri)) {
                            _AuthorizationDecisionQuery = ((com.sun.identity.liberty.ws.common.jaxb.protocol.impl.AuthorizationDecisionQueryElementImpl) spawnChildFromEnterElement((com.sun.identity.liberty.ws.common.jaxb.protocol.impl.AuthorizationDecisionQueryElementImpl.class), 2, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("AuthorizationDecisionQuery" == ___local)&&("urn:oasis:names:tc:SAML:1.0:protocol" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 15;
                            return ;
                        }
                        if (("AssertionIDReference" == ___local)&&("urn:oasis:names:tc:SAML:1.0:assertion" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 3;
                            return ;
                        }
                        if (("AssertionArtifact" == ___local)&&("urn:oasis:names:tc:SAML:1.0:protocol" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 5;
                            return ;
                        }
                        break;
                    case  2 :
                        if (("AssertionIDReference" == ___local)&&("urn:oasis:names:tc:SAML:1.0:assertion" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 3;
                            return ;
                        }
                        if (("AssertionArtifact" == ___local)&&("urn:oasis:names:tc:SAML:1.0:protocol" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 5;
                            return ;
                        }
                        revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                        return ;
                    case  0 :
                        attIdx = context.getAttribute("", "IssueInstant");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        break;
                    case  7 :
                        if (("Subject" == ___local)&&("urn:liberty:iff:2003-08" == ___uri)) {
                            _SubjectQuery = ((com.sun.identity.liberty.ws.common.jaxb.protocol.impl.SubjectQueryAbstractTypeImpl) spawnChildFromEnterElement((com.sun.identity.liberty.ws.common.jaxb.protocol.impl.SubjectQueryAbstractTypeImpl.class), 8, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("ProxySubject" == ___local)&&("urn:liberty:sec:2003-08" == ___uri)) {
                            _SubjectQuery = ((com.sun.identity.liberty.ws.common.jaxb.protocol.impl.SubjectQueryAbstractTypeImpl) spawnChildFromEnterElement((com.sun.identity.liberty.ws.common.jaxb.protocol.impl.SubjectQueryAbstractTypeImpl.class), 8, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("Subject" == ___local)&&("urn:oasis:names:tc:SAML:1.0:assertion" == ___uri)) {
                            _SubjectQuery = ((com.sun.identity.liberty.ws.common.jaxb.protocol.impl.SubjectQueryAbstractTypeImpl) spawnChildFromEnterElement((com.sun.identity.liberty.ws.common.jaxb.protocol.impl.SubjectQueryAbstractTypeImpl.class), 8, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("Subject" == ___local)&&("urn:oasis:names:tc:SAML:1.0:assertion" == ___uri)) {
                            _SubjectQuery = ((com.sun.identity.liberty.ws.common.jaxb.protocol.impl.SubjectQueryAbstractTypeImpl) spawnChildFromEnterElement((com.sun.identity.liberty.ws.common.jaxb.protocol.impl.SubjectQueryAbstractTypeImpl.class), 8, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        _SubjectQuery = ((com.sun.identity.liberty.ws.common.jaxb.protocol.impl.SubjectQueryAbstractTypeImpl) spawnChildFromEnterElement((com.sun.identity.liberty.ws.common.jaxb.protocol.impl.SubjectQueryAbstractTypeImpl.class), 8, ___uri, ___local, ___qname, __atts));
                        return ;
                    case  9 :
                        attIdx = context.getAttribute("", "AuthenticationMethod");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("Subject" == ___local)&&("urn:liberty:iff:2003-08" == ___uri)) {
                            _AuthenticationQuery = ((com.sun.identity.liberty.ws.common.jaxb.protocol.impl.AuthenticationQueryTypeImpl) spawnChildFromEnterElement((com.sun.identity.liberty.ws.common.jaxb.protocol.impl.AuthenticationQueryTypeImpl.class), 10, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("ProxySubject" == ___local)&&("urn:liberty:sec:2003-08" == ___uri)) {
                            _AuthenticationQuery = ((com.sun.identity.liberty.ws.common.jaxb.protocol.impl.AuthenticationQueryTypeImpl) spawnChildFromEnterElement((com.sun.identity.liberty.ws.common.jaxb.protocol.impl.AuthenticationQueryTypeImpl.class), 10, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("Subject" == ___local)&&("urn:oasis:names:tc:SAML:1.0:assertion" == ___uri)) {
                            _AuthenticationQuery = ((com.sun.identity.liberty.ws.common.jaxb.protocol.impl.AuthenticationQueryTypeImpl) spawnChildFromEnterElement((com.sun.identity.liberty.ws.common.jaxb.protocol.impl.AuthenticationQueryTypeImpl.class), 10, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("Subject" == ___local)&&("urn:oasis:names:tc:SAML:1.0:assertion" == ___uri)) {
                            _AuthenticationQuery = ((com.sun.identity.liberty.ws.common.jaxb.protocol.impl.AuthenticationQueryTypeImpl) spawnChildFromEnterElement((com.sun.identity.liberty.ws.common.jaxb.protocol.impl.AuthenticationQueryTypeImpl.class), 10, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        _AuthenticationQuery = ((com.sun.identity.liberty.ws.common.jaxb.protocol.impl.AuthenticationQueryTypeImpl) spawnChildFromEnterElement((com.sun.identity.liberty.ws.common.jaxb.protocol.impl.AuthenticationQueryTypeImpl.class), 10, ___uri, ___local, ___qname, __atts));
                        return ;
                }
                super.enterElement(___uri, ___local, ___qname, __atts);
                break;
            }
        }

        public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  8 :
                        if (("SubjectQuery" == ___local)&&("urn:oasis:names:tc:SAML:1.0:protocol" == ___uri)) {
                            context.popAttributes();
                            state = 2;
                            return ;
                        }
                        break;
                    case  13 :
                        attIdx = context.getAttribute("", "Resource");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        _AttributeQuery = ((com.sun.identity.liberty.ws.common.jaxb.protocol.impl.AttributeQueryTypeImpl) spawnChildFromLeaveElement((com.sun.identity.liberty.ws.common.jaxb.protocol.impl.AttributeQueryTypeImpl.class), 14, ___uri, ___local, ___qname));
                        return ;
                    case  15 :
                        attIdx = context.getAttribute("", "Resource");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                    case  11 :
                        _Query = ((com.sun.identity.liberty.ws.common.jaxb.protocol.impl.QueryAbstractTypeImpl) spawnChildFromLeaveElement((com.sun.identity.liberty.ws.common.jaxb.protocol.impl.QueryAbstractTypeImpl.class), 12, ___uri, ___local, ___qname));
                        return ;
                    case  16 :
                        if (("AuthorizationDecisionQuery" == ___local)&&("urn:oasis:names:tc:SAML:1.0:protocol" == ___uri)) {
                            context.popAttributes();
                            state = 2;
                            return ;
                        }
                        break;
                    case  6 :
                        if (("AssertionArtifact" == ___local)&&("urn:oasis:names:tc:SAML:1.0:protocol" == ___uri)) {
                            context.popAttributes();
                            state = 2;
                            return ;
                        }
                        break;
                    case  10 :
                        if (("AuthenticationQuery" == ___local)&&("urn:oasis:names:tc:SAML:1.0:protocol" == ___uri)) {
                            context.popAttributes();
                            state = 2;
                            return ;
                        }
                        break;
                    case  14 :
                        if (("AttributeQuery" == ___local)&&("urn:oasis:names:tc:SAML:1.0:protocol" == ___uri)) {
                            context.popAttributes();
                            state = 2;
                            return ;
                        }
                        break;
                    case  2 :
                        revertToParentFromLeaveElement(___uri, ___local, ___qname);
                        return ;
                    case  0 :
                        attIdx = context.getAttribute("", "IssueInstant");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                    case  7 :
                        _SubjectQuery = ((com.sun.identity.liberty.ws.common.jaxb.protocol.impl.SubjectQueryAbstractTypeImpl) spawnChildFromLeaveElement((com.sun.identity.liberty.ws.common.jaxb.protocol.impl.SubjectQueryAbstractTypeImpl.class), 8, ___uri, ___local, ___qname));
                        return ;
                    case  9 :
                        attIdx = context.getAttribute("", "AuthenticationMethod");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        _AuthenticationQuery = ((com.sun.identity.liberty.ws.common.jaxb.protocol.impl.AuthenticationQueryTypeImpl) spawnChildFromLeaveElement((com.sun.identity.liberty.ws.common.jaxb.protocol.impl.AuthenticationQueryTypeImpl.class), 10, ___uri, ___local, ___qname));
                        return ;
                    case  12 :
                        if (("Query" == ___local)&&("urn:oasis:names:tc:SAML:1.0:protocol" == ___uri)) {
                            context.popAttributes();
                            state = 2;
                            return ;
                        }
                        break;
                    case  4 :
                        if (("AssertionIDReference" == ___local)&&("urn:oasis:names:tc:SAML:1.0:assertion" == ___uri)) {
                            context.popAttributes();
                            state = 2;
                            return ;
                        }
                        break;
                }
                super.leaveElement(___uri, ___local, ___qname);
                break;
            }
        }

        public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  13 :
                        if (("Resource" == ___local)&&("" == ___uri)) {
                            _AttributeQuery = ((com.sun.identity.liberty.ws.common.jaxb.protocol.impl.AttributeQueryTypeImpl) spawnChildFromEnterAttribute((com.sun.identity.liberty.ws.common.jaxb.protocol.impl.AttributeQueryTypeImpl.class), 14, ___uri, ___local, ___qname));
                            return ;
                        }
                        _AttributeQuery = ((com.sun.identity.liberty.ws.common.jaxb.protocol.impl.AttributeQueryTypeImpl) spawnChildFromEnterAttribute((com.sun.identity.liberty.ws.common.jaxb.protocol.impl.AttributeQueryTypeImpl.class), 14, ___uri, ___local, ___qname));
                        return ;
                    case  15 :
                        if (("Resource" == ___local)&&("" == ___uri)) {
                            _AuthorizationDecisionQuery = ((com.sun.identity.liberty.ws.common.jaxb.protocol.impl.AuthorizationDecisionQueryTypeImpl) spawnChildFromEnterAttribute((com.sun.identity.liberty.ws.common.jaxb.protocol.impl.AuthorizationDecisionQueryTypeImpl.class), 16, ___uri, ___local, ___qname));
                            return ;
                        }
                        break;
                    case  11 :
                        _Query = ((com.sun.identity.liberty.ws.common.jaxb.protocol.impl.QueryAbstractTypeImpl) spawnChildFromEnterAttribute((com.sun.identity.liberty.ws.common.jaxb.protocol.impl.QueryAbstractTypeImpl.class), 12, ___uri, ___local, ___qname));
                        return ;
                    case  2 :
                        revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                        return ;
                    case  0 :
                        if (("IssueInstant" == ___local)&&("" == ___uri)) {
                            spawnHandlerFromEnterAttribute((((com.sun.identity.liberty.ws.common.jaxb.protocol.impl.RequestAbstractTypeImpl)com.sun.identity.liberty.ws.common.jaxb.protocol.impl.RequestTypeImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                    case  7 :
                        _SubjectQuery = ((com.sun.identity.liberty.ws.common.jaxb.protocol.impl.SubjectQueryAbstractTypeImpl) spawnChildFromEnterAttribute((com.sun.identity.liberty.ws.common.jaxb.protocol.impl.SubjectQueryAbstractTypeImpl.class), 8, ___uri, ___local, ___qname));
                        return ;
                    case  9 :
                        if (("AuthenticationMethod" == ___local)&&("" == ___uri)) {
                            _AuthenticationQuery = ((com.sun.identity.liberty.ws.common.jaxb.protocol.impl.AuthenticationQueryTypeImpl) spawnChildFromEnterAttribute((com.sun.identity.liberty.ws.common.jaxb.protocol.impl.AuthenticationQueryTypeImpl.class), 10, ___uri, ___local, ___qname));
                            return ;
                        }
                        _AuthenticationQuery = ((com.sun.identity.liberty.ws.common.jaxb.protocol.impl.AuthenticationQueryTypeImpl) spawnChildFromEnterAttribute((com.sun.identity.liberty.ws.common.jaxb.protocol.impl.AuthenticationQueryTypeImpl.class), 10, ___uri, ___local, ___qname));
                        return ;
                }
                super.enterAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  13 :
                        attIdx = context.getAttribute("", "Resource");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        _AttributeQuery = ((com.sun.identity.liberty.ws.common.jaxb.protocol.impl.AttributeQueryTypeImpl) spawnChildFromLeaveAttribute((com.sun.identity.liberty.ws.common.jaxb.protocol.impl.AttributeQueryTypeImpl.class), 14, ___uri, ___local, ___qname));
                        return ;
                    case  15 :
                        attIdx = context.getAttribute("", "Resource");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                    case  11 :
                        _Query = ((com.sun.identity.liberty.ws.common.jaxb.protocol.impl.QueryAbstractTypeImpl) spawnChildFromLeaveAttribute((com.sun.identity.liberty.ws.common.jaxb.protocol.impl.QueryAbstractTypeImpl.class), 12, ___uri, ___local, ___qname));
                        return ;
                    case  2 :
                        revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                        return ;
                    case  0 :
                        attIdx = context.getAttribute("", "IssueInstant");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                    case  7 :
                        _SubjectQuery = ((com.sun.identity.liberty.ws.common.jaxb.protocol.impl.SubjectQueryAbstractTypeImpl) spawnChildFromLeaveAttribute((com.sun.identity.liberty.ws.common.jaxb.protocol.impl.SubjectQueryAbstractTypeImpl.class), 8, ___uri, ___local, ___qname));
                        return ;
                    case  9 :
                        attIdx = context.getAttribute("", "AuthenticationMethod");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        _AuthenticationQuery = ((com.sun.identity.liberty.ws.common.jaxb.protocol.impl.AuthenticationQueryTypeImpl) spawnChildFromLeaveAttribute((com.sun.identity.liberty.ws.common.jaxb.protocol.impl.AuthenticationQueryTypeImpl.class), 10, ___uri, ___local, ___qname));
                        return ;
                }
                super.leaveAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void handleText(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                try {
                    switch (state) {
                        case  13 :
                            attIdx = context.getAttribute("", "Resource");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            _AttributeQuery = ((com.sun.identity.liberty.ws.common.jaxb.protocol.impl.AttributeQueryTypeImpl) spawnChildFromText((com.sun.identity.liberty.ws.common.jaxb.protocol.impl.AttributeQueryTypeImpl.class), 14, value));
                            return ;
                        case  15 :
                            attIdx = context.getAttribute("", "Resource");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            break;
                        case  11 :
                            _Query = ((com.sun.identity.liberty.ws.common.jaxb.protocol.impl.QueryAbstractTypeImpl) spawnChildFromText((com.sun.identity.liberty.ws.common.jaxb.protocol.impl.QueryAbstractTypeImpl.class), 12, value));
                            return ;
                        case  3 :
                            state = 4;
                            eatText1(value);
                            return ;
                        case  2 :
                            revertToParentFromText(value);
                            return ;
                        case  5 :
                            state = 6;
                            eatText2(value);
                            return ;
                        case  0 :
                            attIdx = context.getAttribute("", "IssueInstant");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            break;
                        case  7 :
                            _SubjectQuery = ((com.sun.identity.liberty.ws.common.jaxb.protocol.impl.SubjectQueryAbstractTypeImpl) spawnChildFromText((com.sun.identity.liberty.ws.common.jaxb.protocol.impl.SubjectQueryAbstractTypeImpl.class), 8, value));
                            return ;
                        case  9 :
                            attIdx = context.getAttribute("", "AuthenticationMethod");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            _AuthenticationQuery = ((com.sun.identity.liberty.ws.common.jaxb.protocol.impl.AuthenticationQueryTypeImpl) spawnChildFromText((com.sun.identity.liberty.ws.common.jaxb.protocol.impl.AuthenticationQueryTypeImpl.class), 10, value));
                            return ;
                    }
                } catch (java.lang.RuntimeException e) {
                    handleUnexpectedTextException(value, e);
                }
                break;
            }
        }

        private void eatText1(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _getAssertionIDReference().add(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText2(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _getAssertionArtifact().add(value);
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

    }

}
