//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v1.0.6-b27-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2012.06.11 at 10:33:54 AM PDT 
//


package com.sun.identity.liberty.ws.common.jaxb.ps.impl;

public class AuthnRequestElementImpl
    extends com.sun.identity.liberty.ws.common.jaxb.ps.impl.AuthnRequestTypeImpl
    implements com.sun.identity.liberty.ws.common.jaxb.ps.AuthnRequestElement, com.sun.xml.bind.RIElement, com.sun.xml.bind.JAXBObject, com.sun.identity.federation.jaxb.entityconfig.impl.runtime.UnmarshallableObject, com.sun.identity.federation.jaxb.entityconfig.impl.runtime.XMLSerializable, com.sun.identity.federation.jaxb.entityconfig.impl.runtime.ValidatableObject
{

    public final static java.lang.Class version = (com.sun.identity.liberty.ws.common.jaxb.ps.impl.JAXBVersion.class);
    private static com.sun.msv.grammar.Grammar schemaFragment;

    private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
        return (com.sun.identity.liberty.ws.common.jaxb.ps.AuthnRequestElement.class);
    }

    public java.lang.String ____jaxb_ri____getNamespaceURI() {
        return "urn:liberty:iff:2003-08";
    }

    public java.lang.String ____jaxb_ri____getLocalName() {
        return "AuthnRequest";
    }

    public com.sun.identity.federation.jaxb.entityconfig.impl.runtime.UnmarshallingEventHandler createUnmarshaller(com.sun.identity.federation.jaxb.entityconfig.impl.runtime.UnmarshallingContext context) {
        return new com.sun.identity.liberty.ws.common.jaxb.ps.impl.AuthnRequestElementImpl.Unmarshaller(context);
    }

    public void serializeBody(com.sun.identity.federation.jaxb.entityconfig.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        context.startElement("urn:liberty:iff:2003-08", "AuthnRequest");
        super.serializeURIs(context);
        context.endNamespaceDecls();
        super.serializeAttributes(context);
        context.endAttributes();
        super.serializeBody(context);
        context.endElement();
    }

    public void serializeAttributes(com.sun.identity.federation.jaxb.entityconfig.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
    }

    public void serializeURIs(com.sun.identity.federation.jaxb.entityconfig.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
    }

    public java.lang.Class getPrimaryInterface() {
        return (com.sun.identity.liberty.ws.common.jaxb.ps.AuthnRequestElement.class);
    }

    public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
        if (schemaFragment == null) {
            schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\'com.sun.msv.grammar.trex.ElementPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000"
+"\tnameClasst\u0000\u001fLcom/sun/msv/grammar/NameClass;xr\u0000\u001ecom.sun.msv."
+"grammar.ElementExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAttributesL\u0000"
+"\fcontentModelt\u0000 Lcom/sun/msv/grammar/Expression;xr\u0000\u001ecom.sun."
+"msv.grammar.Expression\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0002L\u0000\u0013epsilonReducibilityt\u0000\u0013Lj"
+"ava/lang/Boolean;L\u0000\u000bexpandedExpq\u0000~\u0000\u0003xppp\u0000sr\u0000\u001fcom.sun.msv.gra"
+"mmar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.sun.msv.grammar.BinaryExp"
+"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1q\u0000~\u0000\u0003L\u0000\u0004exp2q\u0000~\u0000\u0003xq\u0000~\u0000\u0004ppsq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0007pps"
+"q\u0000~\u0000\u0007ppsq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0007ppsq\u0000~\u0000"
+"\u0007ppsq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0007pps"
+"r\u0000\u001dcom.sun.msv.grammar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\bppsr\u0000 com.s"
+"un.msv.grammar.OneOrMoreExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001ccom.sun.msv.gramma"
+"r.UnaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0003expq\u0000~\u0000\u0003xq\u0000~\u0000\u0004sr\u0000\u0011java.lang.Boolean\u00cd"
+" r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000psq\u0000~\u0000\u0000q\u0000~\u0000!p\u0000sq\u0000~\u0000\u0007ppsr\u0000\u001bcom.sun.msv.g"
+"rammar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/relaxng/datatype/Datat"
+"ype;L\u0000\u0006exceptq\u0000~\u0000\u0003L\u0000\u0004namet\u0000\u001dLcom/sun/msv/util/StringPair;xq\u0000"
+"~\u0000\u0004q\u0000~\u0000!psr\u0000\"com.sun.msv.datatype.xsd.QnameType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr"
+"\u0000*com.sun.msv.datatype.xsd.BuiltinAtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%c"
+"om.sun.msv.datatype.xsd.ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com.sun.m"
+"sv.datatype.xsd.XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUrit\u0000\u0012L"
+"java/lang/String;L\u0000\btypeNameq\u0000~\u0000,L\u0000\nwhiteSpacet\u0000.Lcom/sun/ms"
+"v/datatype/xsd/WhiteSpaceProcessor;xpt\u0000 http://www.w3.org/20"
+"01/XMLSchemat\u0000\u0005QNamesr\u00005com.sun.msv.datatype.xsd.WhiteSpaceP"
+"rocessor$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun.msv.datatype.xsd.Whi"
+"teSpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.sun.msv.grammar.Express"
+"ion$NullSetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0004q\u0000~\u0000!psr\u0000\u001bcom.sun.msv."
+"util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000,L\u0000\fnamespaceURIq\u0000"
+"~\u0000,xpq\u0000~\u00000q\u0000~\u0000/sq\u0000~\u0000\u001bppsr\u0000 com.sun.msv.grammar.AttributeExp\u0000"
+"\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0003L\u0000\tnameClassq\u0000~\u0000\u0001xq\u0000~\u0000\u0004q\u0000~\u0000!pq\u0000~\u0000\'sr\u0000#c"
+"om.sun.msv.grammar.SimpleNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~"
+"\u0000,L\u0000\fnamespaceURIq\u0000~\u0000,xr\u0000\u001dcom.sun.msv.grammar.NameClass\u0000\u0000\u0000\u0000\u0000"
+"\u0000\u0000\u0001\u0002\u0000\u0000xpt\u0000\u0004typet\u0000)http://www.w3.org/2001/XMLSchema-instances"
+"r\u00000com.sun.msv.grammar.Expression$EpsilonExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002"
+"\u0000\u0000xq\u0000~\u0000\u0004sq\u0000~\u0000 \u0001q\u0000~\u0000Asq\u0000~\u0000;t\u0000\u000bRespondWitht\u0000$urn:oasis:names:t"
+"c:SAML:1.0:protocolq\u0000~\u0000Asq\u0000~\u0000\u001bppsq\u0000~\u0000\u001bq\u0000~\u0000!psq\u0000~\u0000\u0000q\u0000~\u0000!p\u0000sq\u0000"
+"~\u0000\u001bppsq\u0000~\u0000\u001dq\u0000~\u0000!psq\u0000~\u00009q\u0000~\u0000!psr\u00002com.sun.msv.grammar.Express"
+"ion$AnyStringExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0004q\u0000~\u0000Bq\u0000~\u0000Msr\u0000 com.su"
+"n.msv.grammar.AnyNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000<q\u0000~\u0000Asq\u0000~\u0000;t\u0000?com"
+".sun.identity.liberty.ws.common.jaxb.xmlsig.SignatureElement"
+"t\u0000+http://java.sun.com/jaxb/xjc/dummy-elementssq\u0000~\u0000\u0000q\u0000~\u0000!p\u0000s"
+"q\u0000~\u0000\u0007ppsq\u0000~\u0000\u0000pp\u0000sq\u0000~\u0000\u001bppsq\u0000~\u0000\u001dq\u0000~\u0000!psq\u0000~\u00009q\u0000~\u0000!pq\u0000~\u0000Mq\u0000~\u0000Oq\u0000"
+"~\u0000Asq\u0000~\u0000;t\u0000<com.sun.identity.liberty.ws.common.jaxb.xmlsig.S"
+"ignatureTypeq\u0000~\u0000Rsq\u0000~\u0000\u001bppsq\u0000~\u00009q\u0000~\u0000!pq\u0000~\u0000\'q\u0000~\u0000=q\u0000~\u0000Asq\u0000~\u0000;t\u0000"
+"\tSignaturet\u0000\"http://www.w3.org/2000/09/xmldsig#q\u0000~\u0000Asq\u0000~\u0000\u001bpp"
+"sq\u0000~\u0000\u001dq\u0000~\u0000!psq\u0000~\u0000\u001bq\u0000~\u0000!psq\u0000~\u0000\u0000q\u0000~\u0000!p\u0000sq\u0000~\u0000\u001bppsq\u0000~\u0000\u001dq\u0000~\u0000!psq\u0000"
+"~\u00009q\u0000~\u0000!pq\u0000~\u0000Mq\u0000~\u0000Oq\u0000~\u0000Asq\u0000~\u0000;t\u0000;com.sun.identity.liberty.ws"
+".common.jaxb.ps.ExtensionElementq\u0000~\u0000Rsq\u0000~\u0000\u0000q\u0000~\u0000!p\u0000sq\u0000~\u0000\u0007ppsq"
+"\u0000~\u0000\u0000pp\u0000sq\u0000~\u0000\u001bppsq\u0000~\u0000\u001dq\u0000~\u0000!psq\u0000~\u00009q\u0000~\u0000!pq\u0000~\u0000Mq\u0000~\u0000Oq\u0000~\u0000Asq\u0000~\u0000;"
+"t\u00008com.sun.identity.liberty.ws.common.jaxb.ps.ExtensionTypeq"
+"\u0000~\u0000Rsq\u0000~\u0000\u001bppsq\u0000~\u00009q\u0000~\u0000!pq\u0000~\u0000\'q\u0000~\u0000=q\u0000~\u0000Asq\u0000~\u0000;t\u0000\tExtensiont\u0000\u0017"
+"urn:liberty:iff:2003-08q\u0000~\u0000Asq\u0000~\u0000\u0000pp\u0000sq\u0000~\u0000\u0007ppsq\u0000~\u0000$ppsr\u0000\'com"
+".sun.msv.datatype.xsd.MaxLengthFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001I\u0000\tmaxLengthx"
+"r\u00009com.sun.msv.datatype.xsd.DataTypeWithValueConstraintFacet"
+"\"\u00a7Ro\u00ca\u00c7\u008aT\u0002\u0000\u0000xr\u0000*com.sun.msv.datatype.xsd.DataTypeWithFacet\u0000\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0005Z\u0000\fisFacetFixedZ\u0000\u0012needValueCheckFlagL\u0000\bbaseTypet\u0000)Lc"
+"om/sun/msv/datatype/xsd/XSDatatypeImpl;L\u0000\fconcreteTypet\u0000\'Lco"
+"m/sun/msv/datatype/xsd/ConcreteType;L\u0000\tfacetNameq\u0000~\u0000,xq\u0000~\u0000+t"
+"\u0000\u001curn:liberty:metadata:2003-08t\u0000\fentityIDTypeq\u0000~\u00003\u0000\u0000sr\u0000#com."
+"sun.msv.datatype.xsd.AnyURIType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000)q\u0000~\u0000/t\u0000\u0006anyU"
+"RIq\u0000~\u00003q\u0000~\u0000\u0082t\u0000\tmaxLength\u0000\u0000\u0004\u0000q\u0000~\u00005sq\u0000~\u00006q\u0000~\u0000\u0080q\u0000~\u0000\u007fsq\u0000~\u0000\u001bppsq\u0000"
+"~\u00009q\u0000~\u0000!pq\u0000~\u0000\'q\u0000~\u0000=q\u0000~\u0000Asq\u0000~\u0000;t\u0000\nProviderIDq\u0000~\u0000usq\u0000~\u0000\u001bppsq\u0000~"
+"\u0000\u0000q\u0000~\u0000!p\u0000sq\u0000~\u0000\u0007ppq\u0000~\u0000xsq\u0000~\u0000\u001bppsq\u0000~\u00009q\u0000~\u0000!pq\u0000~\u0000\'q\u0000~\u0000=q\u0000~\u0000Asq\u0000"
+"~\u0000;t\u0000\rAffiliationIDq\u0000~\u0000uq\u0000~\u0000Asq\u0000~\u0000\u001bppsq\u0000~\u0000\u0000q\u0000~\u0000!p\u0000sq\u0000~\u0000\u0007ppsq"
+"\u0000~\u0000$ppsr\u0000)com.sun.msv.datatype.xsd.EnumerationFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002"
+"\u0000\u0001L\u0000\u0006valuest\u0000\u000fLjava/util/Set;xq\u0000~\u0000zq\u0000~\u0000ut\u0000\u0010NameIDPolicyTypes"
+"r\u00005com.sun.msv.datatype.xsd.WhiteSpaceProcessor$Preserve\u0000\u0000\u0000\u0000"
+"\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u00002\u0000\u0000sr\u0000#com.sun.msv.datatype.xsd.StringType\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0000\u0001\u0002\u0000\u0001Z\u0000\risAlwaysValidxq\u0000~\u0000)q\u0000~\u0000/t\u0000\u0006stringq\u0000~\u0000\u009a\u0001q\u0000~\u0000\u009ct\u0000\u000benume"
+"rationsr\u0000\u0011java.util.HashSet\u00baD\u0085\u0095\u0096\u00b8\u00b74\u0003\u0000\u0000xpw\f\u0000\u0000\u0000\u0010?@\u0000\u0000\u0000\u0000\u0000\u0004t\u0000\u0003any"
+"t\u0000\u0004nonet\u0000\tfederatedt\u0000\u0007onetimexq\u0000~\u00005sq\u0000~\u00006q\u0000~\u0000\u0098q\u0000~\u0000usq\u0000~\u0000\u001bpps"
+"q\u0000~\u00009q\u0000~\u0000!pq\u0000~\u0000\'q\u0000~\u0000=q\u0000~\u0000Asq\u0000~\u0000;t\u0000\fNameIDPolicyq\u0000~\u0000uq\u0000~\u0000Asq\u0000"
+"~\u0000\u001bppsq\u0000~\u0000\u0000q\u0000~\u0000!p\u0000sq\u0000~\u0000\u0007ppsq\u0000~\u0000$ppsr\u0000$com.sun.msv.datatype.x"
+"sd.BooleanType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000)q\u0000~\u0000/t\u0000\u0007booleanq\u0000~\u00003q\u0000~\u00005sq\u0000~"
+"\u00006q\u0000~\u0000\u00b0q\u0000~\u0000/sq\u0000~\u0000\u001bppsq\u0000~\u00009q\u0000~\u0000!pq\u0000~\u0000\'q\u0000~\u0000=q\u0000~\u0000Asq\u0000~\u0000;t\u0000\nForc"
+"eAuthnq\u0000~\u0000uq\u0000~\u0000Asq\u0000~\u0000\u001bppsq\u0000~\u0000\u0000q\u0000~\u0000!p\u0000sq\u0000~\u0000\u0007ppq\u0000~\u0000\u00adsq\u0000~\u0000\u001bppsq"
+"\u0000~\u00009q\u0000~\u0000!pq\u0000~\u0000\'q\u0000~\u0000=q\u0000~\u0000Asq\u0000~\u0000;t\u0000\tIsPassiveq\u0000~\u0000uq\u0000~\u0000Asq\u0000~\u0000\u001bp"
+"psq\u0000~\u0000\u0000q\u0000~\u0000!p\u0000sq\u0000~\u0000\u0007ppsq\u0000~\u0000$q\u0000~\u0000!pq\u0000~\u0000\u0082q\u0000~\u00005sq\u0000~\u00006q\u0000~\u0000\u0083q\u0000~\u0000/"
+"sq\u0000~\u0000\u001bppsq\u0000~\u00009q\u0000~\u0000!pq\u0000~\u0000\'q\u0000~\u0000=q\u0000~\u0000Asq\u0000~\u0000;t\u0000\u000fProtocolProfileq"
+"\u0000~\u0000uq\u0000~\u0000Asq\u0000~\u0000\u001bppsq\u0000~\u0000\u0000q\u0000~\u0000!p\u0000sq\u0000~\u0000\u0007ppsq\u0000~\u0000$q\u0000~\u0000!pq\u0000~\u0000\u009cq\u0000~\u00005"
+"sq\u0000~\u00006q\u0000~\u0000\u009dq\u0000~\u0000/sq\u0000~\u0000\u001bppsq\u0000~\u00009q\u0000~\u0000!pq\u0000~\u0000\'q\u0000~\u0000=q\u0000~\u0000Asq\u0000~\u0000;t\u0000\u001a"
+"AssertionConsumerServiceIDq\u0000~\u0000uq\u0000~\u0000Asq\u0000~\u0000\u001bppsq\u0000~\u0000\u001bq\u0000~\u0000!psq\u0000~"
+"\u0000\u0000q\u0000~\u0000!p\u0000sq\u0000~\u0000\u001bppsq\u0000~\u0000\u001dq\u0000~\u0000!psq\u0000~\u00009q\u0000~\u0000!pq\u0000~\u0000Mq\u0000~\u0000Oq\u0000~\u0000Asq\u0000~"
+"\u0000;t\u0000Ecom.sun.identity.liberty.ws.common.jaxb.ps.RequestAuthn"
+"ContextElementq\u0000~\u0000Rsq\u0000~\u0000\u0000q\u0000~\u0000!p\u0000sq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0000pp\u0000sq\u0000~\u0000\u001bppsq\u0000"
+"~\u0000\u001dq\u0000~\u0000!psq\u0000~\u00009q\u0000~\u0000!pq\u0000~\u0000Mq\u0000~\u0000Oq\u0000~\u0000Asq\u0000~\u0000;t\u0000Bcom.sun.identit"
+"y.liberty.ws.common.jaxb.ps.RequestAuthnContextTypeq\u0000~\u0000Rsq\u0000~"
+"\u0000\u001bppsq\u0000~\u00009q\u0000~\u0000!pq\u0000~\u0000\'q\u0000~\u0000=q\u0000~\u0000Asq\u0000~\u0000;t\u0000\u0013RequestAuthnContextq"
+"\u0000~\u0000uq\u0000~\u0000Asq\u0000~\u0000\u001bppsq\u0000~\u0000\u0000q\u0000~\u0000!p\u0000sq\u0000~\u0000\u0007ppq\u0000~\u0000\u00c9sq\u0000~\u0000\u001bppsq\u0000~\u00009q\u0000~"
+"\u0000!pq\u0000~\u0000\'q\u0000~\u0000=q\u0000~\u0000Asq\u0000~\u0000;t\u0000\nRelayStateq\u0000~\u0000uq\u0000~\u0000Asq\u0000~\u0000\u001bppsq\u0000~\u0000"
+"\u001bq\u0000~\u0000!psq\u0000~\u0000\u0000q\u0000~\u0000!p\u0000sq\u0000~\u0000\u001bppsq\u0000~\u0000\u001dq\u0000~\u0000!psq\u0000~\u00009q\u0000~\u0000!pq\u0000~\u0000Mq\u0000~"
+"\u0000Oq\u0000~\u0000Asq\u0000~\u0000;t\u00009com.sun.identity.liberty.ws.common.jaxb.ps.S"
+"copingElementq\u0000~\u0000Rsq\u0000~\u0000\u0000q\u0000~\u0000!p\u0000sq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0000pp\u0000sq\u0000~\u0000\u001bppsq\u0000~"
+"\u0000\u001dq\u0000~\u0000!psq\u0000~\u00009q\u0000~\u0000!pq\u0000~\u0000Mq\u0000~\u0000Oq\u0000~\u0000Asq\u0000~\u0000;t\u00006com.sun.identity"
+".liberty.ws.common.jaxb.ps.ScopingTypeq\u0000~\u0000Rsq\u0000~\u0000\u001bppsq\u0000~\u00009q\u0000~"
+"\u0000!pq\u0000~\u0000\'q\u0000~\u0000=q\u0000~\u0000Asq\u0000~\u0000;t\u0000\u0007Scopingq\u0000~\u0000uq\u0000~\u0000Asq\u0000~\u00009ppsq\u0000~\u0000$pp"
+"sr\u0000%com.sun.msv.datatype.xsd.DateTimeType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000)com."
+"sun.msv.datatype.xsd.DateTimeBaseType\u0014W\u001a@3\u00a5\u00b4\u00e5\u0002\u0000\u0000xq\u0000~\u0000)q\u0000~\u0000/t"
+"\u0000\bdateTimeq\u0000~\u00003q\u0000~\u00005sq\u0000~\u00006q\u0000~\u0001\u0003q\u0000~\u0000/sq\u0000~\u0000;t\u0000\fIssueInstantt\u0000\u0000"
+"sq\u0000~\u00009ppsq\u0000~\u0000$ppsr\u0000$com.sun.msv.datatype.xsd.IntegerType\u0000\u0000\u0000\u0000"
+"\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000+com.sun.msv.datatype.xsd.IntegerDerivedType\u0099\u00f1]\u0090&6"
+"k\u00be\u0002\u0000\u0001L\u0000\nbaseFacetsq\u0000~\u0000|xq\u0000~\u0000)q\u0000~\u0000/t\u0000\u0007integerq\u0000~\u00003sr\u0000,com.sun"
+".msv.datatype.xsd.FractionDigitsFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001I\u0000\u0005scalexr\u0000;"
+"com.sun.msv.datatype.xsd.DataTypeWithLexicalConstraintFacetT"
+"\u0090\u001c>\u001azb\u00ea\u0002\u0000\u0000xq\u0000~\u0000{ppq\u0000~\u00003\u0001\u0000sr\u0000#com.sun.msv.datatype.xsd.Number"
+"Type\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000)q\u0000~\u0000/t\u0000\u0007decimalq\u0000~\u00003q\u0000~\u0001\u0012t\u0000\u000efractionDig"
+"its\u0000\u0000\u0000\u0000q\u0000~\u00005sq\u0000~\u00006q\u0000~\u0001\rq\u0000~\u0000/sq\u0000~\u0000;t\u0000\fMajorVersionq\u0000~\u0001\u0007sq\u0000~\u00009"
+"ppq\u0000~\u0001\tsq\u0000~\u0000;t\u0000\fMinorVersionq\u0000~\u0001\u0007sq\u0000~\u00009ppsq\u0000~\u0000$ppsr\u0000\u001fcom.sun"
+".msv.datatype.xsd.IDType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000#com.sun.msv.datatype."
+"xsd.NcnameType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\"com.sun.msv.datatype.xsd.TokenT"
+"ype\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u009bq\u0000~\u0000/t\u0000\u0002IDq\u0000~\u00003\u0000q\u0000~\u00005sq\u0000~\u00006q\u0000~\u0001!q\u0000~\u0000/sq\u0000"
+"~\u0000;t\u0000\tRequestIDq\u0000~\u0001\u0007sq\u0000~\u0000\u001bppsq\u0000~\u00009q\u0000~\u0000!pq\u0000~\u0000\u00c0sq\u0000~\u0000;t\u0000\u0007consen"
+"tq\u0000~\u0000uq\u0000~\u0000Asq\u0000~\u0000\u001bppsq\u0000~\u00009q\u0000~\u0000!pq\u0000~\u0000\'q\u0000~\u0000=q\u0000~\u0000Asq\u0000~\u0000;t\u0000\fAuthn"
+"Requestq\u0000~\u0000usr\u0000\"com.sun.msv.grammar.ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000"
+"\u0001L\u0000\bexpTablet\u0000/Lcom/sun/msv/grammar/ExpressionPool$ClosedHas"
+"h;xpsr\u0000-com.sun.msv.grammar.ExpressionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed"
+"\u001c\u0003\u0000\u0003I\u0000\u0005countB\u0000\rstreamVersionL\u0000\u0006parentt\u0000$Lcom/sun/msv/grammar"
+"/ExpressionPool;xp\u0000\u0000\u0000P\u0001pq\u0000~\u0000\u00c8q\u0000~\u0000\u00e5q\u0000~\u0000\u00c6q\u0000~\u0000\u00e3q\u0000~\u0000\fq\u0000~\u0000\u0017q\u0000~\u0001%q"
+"\u0000~\u0000\nq\u0000~\u0000\u001aq\u0000~\u0000\u00bdq\u0000~\u0000\u0018q\u0000~\u0000#q\u0000~\u0000\u000bq\u0000~\u0000Fq\u0000~\u0000\u00cfq\u0000~\u0000\u00eaq\u0000~\u0000\rq\u0000~\u0000\u008aq\u0000~\u0000`q"
+"\u0000~\u0000\u00daq\u0000~\u0000\u00d2q\u0000~\u0000lq\u0000~\u0000dq\u0000~\u0000Vq\u0000~\u0000Iq\u0000~\u0000\u00edq\u0000~\u0000\u00f5q\u0000~\u0000Gq\u0000~\u0000\u00d0q\u0000~\u0000bq\u0000~\u0000\u00ebq"
+"\u0000~\u0000\u00b8q\u0000~\u0000\u00acq\u0000~\u0000\u00dfq\u0000~\u0000\u00cbq\u0000~\u0000\u00c2q\u0000~\u0000\u00b9q\u0000~\u0000\u00b2q\u0000~\u0000\u00a6q\u0000~\u0000\u008dq\u0000~\u0000\u0086q\u0000~\u0000qq\u0000~\u0000[q"
+"\u0000~\u00008q\u0000~\u0000\u0093q\u0000~\u0000\u0013q\u0000~\u0000\u00e6q\u0000~\u0000\u00faq\u0000~\u0001)q\u0000~\u0000\u00bfq\u0000~\u0000\u001fq\u0000~\u0000\u0012q\u0000~\u0000\u0014q\u0000~\u0000\u0019q\u0000~\u0000\u008cq"
+"\u0000~\u0000wq\u0000~\u0000\u001cq\u0000~\u0000\u0091q\u0000~\u0000\u0015q\u0000~\u0000\u00b6q\u0000~\u0000\u00aaq\u0000~\u0000\u0010q\u0000~\u0000\u00d8q\u0000~\u0000jq\u0000~\u0000Tq\u0000~\u0000\u00f3q\u0000~\u0000\u0016q"
+"\u0000~\u0000aq\u0000~\u0000\tq\u0000~\u0000\u000eq\u0000~\u0000\u000fq\u0000~\u0000\u0011q\u0000~\u0000\u00dbq\u0000~\u0000\u00d3q\u0000~\u0000mq\u0000~\u0000eq\u0000~\u0000Wq\u0000~\u0000Jq\u0000~\u0000\u00eeq"
+"\u0000~\u0000\u00f6x"));
        }
        return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
    }

    public class Unmarshaller
        extends com.sun.identity.federation.jaxb.entityconfig.impl.runtime.AbstractUnmarshallingEventHandlerImpl
    {


        public Unmarshaller(com.sun.identity.federation.jaxb.entityconfig.impl.runtime.UnmarshallingContext context) {
            super(context, "----");
        }

        protected Unmarshaller(com.sun.identity.federation.jaxb.entityconfig.impl.runtime.UnmarshallingContext context, int startState) {
            this(context);
            state = startState;
        }

        public java.lang.Object owner() {
            return com.sun.identity.liberty.ws.common.jaxb.ps.impl.AuthnRequestElementImpl.this;
        }

        public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  0 :
                        if (("AuthnRequest" == ___local)&&("urn:liberty:iff:2003-08" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 1;
                            return ;
                        }
                        break;
                    case  1 :
                        attIdx = context.getAttribute("urn:liberty:iff:2003-08", "consent");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        attIdx = context.getAttribute("", "IssueInstant");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        break;
                    case  3 :
                        revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                        return ;
                }
                super.enterElement(___uri, ___local, ___qname, __atts);
                break;
            }
        }

        public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  2 :
                        if (("AuthnRequest" == ___local)&&("urn:liberty:iff:2003-08" == ___uri)) {
                            context.popAttributes();
                            state = 3;
                            return ;
                        }
                        break;
                    case  1 :
                        attIdx = context.getAttribute("urn:liberty:iff:2003-08", "consent");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "IssueInstant");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                    case  3 :
                        revertToParentFromLeaveElement(___uri, ___local, ___qname);
                        return ;
                }
                super.leaveElement(___uri, ___local, ___qname);
                break;
            }
        }

        public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  1 :
                        if (("consent" == ___local)&&("urn:liberty:iff:2003-08" == ___uri)) {
                            spawnHandlerFromEnterAttribute((((com.sun.identity.liberty.ws.common.jaxb.ps.impl.AuthnRequestTypeImpl)com.sun.identity.liberty.ws.common.jaxb.ps.impl.AuthnRequestElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname);
                            return ;
                        }
                        if (("IssueInstant" == ___local)&&("" == ___uri)) {
                            spawnHandlerFromEnterAttribute((((com.sun.identity.liberty.ws.common.jaxb.ps.impl.AuthnRequestTypeImpl)com.sun.identity.liberty.ws.common.jaxb.ps.impl.AuthnRequestElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                    case  3 :
                        revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                        return ;
                }
                super.enterAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  1 :
                        attIdx = context.getAttribute("urn:liberty:iff:2003-08", "consent");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "IssueInstant");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                    case  3 :
                        revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                        return ;
                }
                super.leaveAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void handleText(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                try {
                    switch (state) {
                        case  1 :
                            attIdx = context.getAttribute("urn:liberty:iff:2003-08", "consent");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            attIdx = context.getAttribute("", "IssueInstant");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            break;
                        case  3 :
                            revertToParentFromText(value);
                            return ;
                    }
                } catch (java.lang.RuntimeException e) {
                    handleUnexpectedTextException(value, e);
                }
                break;
            }
        }

    }

}
