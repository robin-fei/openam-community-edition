//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v1.0.6-b27-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2012.06.11 at 10:33:54 AM PDT 
//


package com.sun.identity.liberty.ws.common.jaxb.assertion.impl;

public class AssertionElementImpl
    extends com.sun.identity.liberty.ws.common.jaxb.assertion.impl.AssertionTypeImpl
    implements com.sun.identity.liberty.ws.common.jaxb.assertion.AssertionElement, com.sun.xml.bind.RIElement, com.sun.xml.bind.JAXBObject, com.sun.identity.federation.jaxb.entityconfig.impl.runtime.UnmarshallableObject, com.sun.identity.federation.jaxb.entityconfig.impl.runtime.XMLSerializable, com.sun.identity.federation.jaxb.entityconfig.impl.runtime.ValidatableObject
{

    public final static java.lang.Class version = (com.sun.identity.liberty.ws.common.jaxb.assertion.impl.JAXBVersion.class);
    private static com.sun.msv.grammar.Grammar schemaFragment;

    private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
        return (com.sun.identity.liberty.ws.common.jaxb.assertion.AssertionElement.class);
    }

    public java.lang.String ____jaxb_ri____getNamespaceURI() {
        return "urn:oasis:names:tc:SAML:1.0:assertion";
    }

    public java.lang.String ____jaxb_ri____getLocalName() {
        return "Assertion";
    }

    public com.sun.identity.federation.jaxb.entityconfig.impl.runtime.UnmarshallingEventHandler createUnmarshaller(com.sun.identity.federation.jaxb.entityconfig.impl.runtime.UnmarshallingContext context) {
        return new com.sun.identity.liberty.ws.common.jaxb.assertion.impl.AssertionElementImpl.Unmarshaller(context);
    }

    public void serializeBody(com.sun.identity.federation.jaxb.entityconfig.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        context.startElement("urn:oasis:names:tc:SAML:1.0:assertion", "Assertion");
        super.serializeURIs(context);
        context.endNamespaceDecls();
        super.serializeAttributes(context);
        context.endAttributes();
        super.serializeBody(context);
        context.endElement();
    }

    public void serializeAttributes(com.sun.identity.federation.jaxb.entityconfig.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
    }

    public void serializeURIs(com.sun.identity.federation.jaxb.entityconfig.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
    }

    public java.lang.Class getPrimaryInterface() {
        return (com.sun.identity.liberty.ws.common.jaxb.assertion.AssertionElement.class);
    }

    public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
        if (schemaFragment == null) {
            schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\'com.sun.msv.grammar.trex.ElementPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000"
+"\tnameClasst\u0000\u001fLcom/sun/msv/grammar/NameClass;xr\u0000\u001ecom.sun.msv."
+"grammar.ElementExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAttributesL\u0000"
+"\fcontentModelt\u0000 Lcom/sun/msv/grammar/Expression;xr\u0000\u001ecom.sun."
+"msv.grammar.Expression\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0002L\u0000\u0013epsilonReducibilityt\u0000\u0013Lj"
+"ava/lang/Boolean;L\u0000\u000bexpandedExpq\u0000~\u0000\u0003xppp\u0000sr\u0000\u001fcom.sun.msv.gra"
+"mmar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.sun.msv.grammar.BinaryExp"
+"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1q\u0000~\u0000\u0003L\u0000\u0004exp2q\u0000~\u0000\u0003xq\u0000~\u0000\u0004ppsq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0007pps"
+"q\u0000~\u0000\u0007ppsq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0007ppsr\u0000\u001dcom.sun.m"
+"sv.grammar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\bppsq\u0000~\u0000\u0012sr\u0000\u0011java.lang.B"
+"oolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000psq\u0000~\u0000\u0000q\u0000~\u0000\u0016p\u0000sq\u0000~\u0000\u0012ppsr\u0000 com.su"
+"n.msv.grammar.OneOrMoreExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001ccom.sun.msv.grammar"
+".UnaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0003expq\u0000~\u0000\u0003xq\u0000~\u0000\u0004q\u0000~\u0000\u0016psr\u0000 com.sun.msv.g"
+"rammar.AttributeExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0003L\u0000\tnameClassq\u0000~\u0000\u0001xq"
+"\u0000~\u0000\u0004q\u0000~\u0000\u0016psr\u00002com.sun.msv.grammar.Expression$AnyStringExpres"
+"sion\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0004sq\u0000~\u0000\u0015\u0001q\u0000~\u0000\u001fsr\u0000 com.sun.msv.grammar.Any"
+"NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.sun.msv.grammar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0001\u0002\u0000\u0000xpsr\u00000com.sun.msv.grammar.Expression$EpsilonExpression\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0004q\u0000~\u0000 q\u0000~\u0000%sr\u0000#com.sun.msv.grammar.SimpleNameC"
+"lass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNamet\u0000\u0012Ljava/lang/String;L\u0000\fnamespace"
+"URIq\u0000~\u0000\'xq\u0000~\u0000\"t\u0000Ccom.sun.identity.liberty.ws.common.jaxb.ass"
+"ertion.ConditionsElementt\u0000+http://java.sun.com/jaxb/xjc/dumm"
+"y-elementssq\u0000~\u0000\u0000q\u0000~\u0000\u0016p\u0000sq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0000pp\u0000sq\u0000~\u0000\u0012ppsq\u0000~\u0000\u0019q\u0000~\u0000\u0016p"
+"sq\u0000~\u0000\u001cq\u0000~\u0000\u0016pq\u0000~\u0000\u001fq\u0000~\u0000#q\u0000~\u0000%sq\u0000~\u0000&t\u0000@com.sun.identity.liberty"
+".ws.common.jaxb.assertion.ConditionsTypeq\u0000~\u0000*sq\u0000~\u0000\u0012ppsq\u0000~\u0000\u001cq"
+"\u0000~\u0000\u0016psr\u0000\u001bcom.sun.msv.grammar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/"
+"relaxng/datatype/Datatype;L\u0000\u0006exceptq\u0000~\u0000\u0003L\u0000\u0004namet\u0000\u001dLcom/sun/m"
+"sv/util/StringPair;xq\u0000~\u0000\u0004q\u0000~\u0000\u0016psr\u0000\"com.sun.msv.datatype.xsd."
+"QnameType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000*com.sun.msv.datatype.xsd.BuiltinAtom"
+"icType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.datatype.xsd.ConcreteType\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com.sun.msv.datatype.xsd.XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001"
+"\u0002\u0000\u0003L\u0000\fnamespaceUriq\u0000~\u0000\'L\u0000\btypeNameq\u0000~\u0000\'L\u0000\nwhiteSpacet\u0000.Lcom/"
+"sun/msv/datatype/xsd/WhiteSpaceProcessor;xpt\u0000 http://www.w3."
+"org/2001/XMLSchemat\u0000\u0005QNamesr\u00005com.sun.msv.datatype.xsd.White"
+"SpaceProcessor$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun.msv.datatype.x"
+"sd.WhiteSpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.sun.msv.grammar.E"
+"xpression$NullSetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0004q\u0000~\u0000\u0016psr\u0000\u001bcom.su"
+"n.msv.util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\'L\u0000\fnamespac"
+"eURIq\u0000~\u0000\'xpq\u0000~\u0000@q\u0000~\u0000?sq\u0000~\u0000&t\u0000\u0004typet\u0000)http://www.w3.org/2001/"
+"XMLSchema-instanceq\u0000~\u0000%sq\u0000~\u0000&t\u0000\nConditionst\u0000%urn:oasis:names"
+":tc:SAML:1.0:assertionq\u0000~\u0000%sq\u0000~\u0000\u0012ppsq\u0000~\u0000\u0012q\u0000~\u0000\u0016psq\u0000~\u0000\u0000q\u0000~\u0000\u0016p\u0000"
+"sq\u0000~\u0000\u0012ppsq\u0000~\u0000\u0019q\u0000~\u0000\u0016psq\u0000~\u0000\u001cq\u0000~\u0000\u0016pq\u0000~\u0000\u001fq\u0000~\u0000#q\u0000~\u0000%sq\u0000~\u0000&t\u0000?com."
+"sun.identity.liberty.ws.common.jaxb.assertion.AdviceElementq"
+"\u0000~\u0000*sq\u0000~\u0000\u0000q\u0000~\u0000\u0016p\u0000sq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0000pp\u0000sq\u0000~\u0000\u0012ppsq\u0000~\u0000\u0019q\u0000~\u0000\u0016psq\u0000~\u0000\u001c"
+"q\u0000~\u0000\u0016pq\u0000~\u0000\u001fq\u0000~\u0000#q\u0000~\u0000%sq\u0000~\u0000&t\u0000<com.sun.identity.liberty.ws.co"
+"mmon.jaxb.assertion.AdviceTypeq\u0000~\u0000*sq\u0000~\u0000\u0012ppsq\u0000~\u0000\u001cq\u0000~\u0000\u0016pq\u0000~\u00008"
+"q\u0000~\u0000Hq\u0000~\u0000%sq\u0000~\u0000&t\u0000\u0006Adviceq\u0000~\u0000Mq\u0000~\u0000%sq\u0000~\u0000\u0019ppsq\u0000~\u0000\u0012ppsq\u0000~\u0000\u0012pps"
+"q\u0000~\u0000\u0012ppsq\u0000~\u0000\u0012ppsq\u0000~\u0000\u0012ppsq\u0000~\u0000\u0012ppsq\u0000~\u0000\u0012ppsq\u0000~\u0000\u0000pp\u0000sq\u0000~\u0000\u0012ppsq\u0000~"
+"\u0000\u0019q\u0000~\u0000\u0016psq\u0000~\u0000\u001cq\u0000~\u0000\u0016pq\u0000~\u0000\u001fq\u0000~\u0000#q\u0000~\u0000%sq\u0000~\u0000&t\u0000Bcom.sun.identity"
+".liberty.ws.common.jaxb.assertion.StatementElementq\u0000~\u0000*sq\u0000~\u0000"
+"\u0000pp\u0000sq\u0000~\u0000\u0012ppsq\u0000~\u0000\u0019q\u0000~\u0000\u0016psq\u0000~\u0000\u001cq\u0000~\u0000\u0016pq\u0000~\u0000\u001fq\u0000~\u0000#q\u0000~\u0000%sq\u0000~\u0000&t\u0000I"
+"com.sun.identity.liberty.ws.common.jaxb.ps.AuthenticationSta"
+"tementElementq\u0000~\u0000*sq\u0000~\u0000\u0000pp\u0000sq\u0000~\u0000\u0012ppsq\u0000~\u0000\u0019q\u0000~\u0000\u0016psq\u0000~\u0000\u001cq\u0000~\u0000\u0016pq"
+"\u0000~\u0000\u001fq\u0000~\u0000#q\u0000~\u0000%sq\u0000~\u0000&t\u0000Icom.sun.identity.liberty.ws.common.ja"
+"xb.assertion.SubjectStatementElementq\u0000~\u0000*sq\u0000~\u0000\u0000pp\u0000sq\u0000~\u0000\u0012ppsq"
+"\u0000~\u0000\u0019q\u0000~\u0000\u0016psq\u0000~\u0000\u001cq\u0000~\u0000\u0016pq\u0000~\u0000\u001fq\u0000~\u0000#q\u0000~\u0000%sq\u0000~\u0000&t\u0000Ocom.sun.identi"
+"ty.liberty.ws.common.jaxb.security.ResourceAccessStatementEl"
+"ementq\u0000~\u0000*sq\u0000~\u0000\u0000pp\u0000sq\u0000~\u0000\u0012ppsq\u0000~\u0000\u0019q\u0000~\u0000\u0016psq\u0000~\u0000\u001cq\u0000~\u0000\u0016pq\u0000~\u0000\u001fq\u0000~\u0000"
+"#q\u0000~\u0000%sq\u0000~\u0000&t\u0000Ocom.sun.identity.liberty.ws.common.jaxb.secur"
+"ity.SessionContextStatementElementq\u0000~\u0000*sq\u0000~\u0000\u0000pp\u0000sq\u0000~\u0000\u0012ppsq\u0000~"
+"\u0000\u0019q\u0000~\u0000\u0016psq\u0000~\u0000\u001cq\u0000~\u0000\u0016pq\u0000~\u0000\u001fq\u0000~\u0000#q\u0000~\u0000%sq\u0000~\u0000&t\u0000Pcom.sun.identity"
+".liberty.ws.common.jaxb.assertion.AuthenticationStatementEle"
+"mentq\u0000~\u0000*sq\u0000~\u0000\u0000pp\u0000sq\u0000~\u0000\u0012ppsq\u0000~\u0000\u0019q\u0000~\u0000\u0016psq\u0000~\u0000\u001cq\u0000~\u0000\u0016pq\u0000~\u0000\u001fq\u0000~\u0000#"
+"q\u0000~\u0000%sq\u0000~\u0000&t\u0000Wcom.sun.identity.liberty.ws.common.jaxb.assert"
+"ion.AuthorizationDecisionStatementElementq\u0000~\u0000*sq\u0000~\u0000\u0000pp\u0000sq\u0000~\u0000"
+"\u0012ppsq\u0000~\u0000\u0019q\u0000~\u0000\u0016psq\u0000~\u0000\u001cq\u0000~\u0000\u0016pq\u0000~\u0000\u001fq\u0000~\u0000#q\u0000~\u0000%sq\u0000~\u0000&t\u0000Kcom.sun.i"
+"dentity.liberty.ws.common.jaxb.assertion.AttributeStatementE"
+"lementq\u0000~\u0000*sq\u0000~\u0000\u0012ppsq\u0000~\u0000\u0012q\u0000~\u0000\u0016psq\u0000~\u0000\u0000q\u0000~\u0000\u0016p\u0000sq\u0000~\u0000\u0012ppsq\u0000~\u0000\u0019q\u0000"
+"~\u0000\u0016psq\u0000~\u0000\u001cq\u0000~\u0000\u0016pq\u0000~\u0000\u001fq\u0000~\u0000#q\u0000~\u0000%sq\u0000~\u0000&t\u0000?com.sun.identity.lib"
+"erty.ws.common.jaxb.xmlsig.SignatureElementq\u0000~\u0000*sq\u0000~\u0000\u0000q\u0000~\u0000\u0016p"
+"\u0000sq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0000pp\u0000sq\u0000~\u0000\u0012ppsq\u0000~\u0000\u0019q\u0000~\u0000\u0016psq\u0000~\u0000\u001cq\u0000~\u0000\u0016pq\u0000~\u0000\u001fq\u0000~\u0000#"
+"q\u0000~\u0000%sq\u0000~\u0000&t\u0000<com.sun.identity.liberty.ws.common.jaxb.xmlsig"
+".SignatureTypeq\u0000~\u0000*sq\u0000~\u0000\u0012ppsq\u0000~\u0000\u001cq\u0000~\u0000\u0016pq\u0000~\u00008q\u0000~\u0000Hq\u0000~\u0000%sq\u0000~\u0000&"
+"t\u0000\tSignaturet\u0000\"http://www.w3.org/2000/09/xmldsig#q\u0000~\u0000%sq\u0000~\u0000\u001c"
+"ppsq\u0000~\u00005ppsr\u0000\u001fcom.sun.msv.datatype.xsd.IDType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000#"
+"com.sun.msv.datatype.xsd.NcnameType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\"com.sun.ms"
+"v.datatype.xsd.TokenType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000#com.sun.msv.datatype."
+"xsd.StringType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001Z\u0000\risAlwaysValidxq\u0000~\u0000:q\u0000~\u0000?t\u0000\u0002IDq\u0000~"
+"\u0000C\u0000q\u0000~\u0000Esq\u0000~\u0000Fq\u0000~\u0000\u00b6q\u0000~\u0000?sq\u0000~\u0000&t\u0000\u000bAssertionIDt\u0000\u0000sq\u0000~\u0000\u001cppsq\u0000~\u0000"
+"5ppsr\u0000%com.sun.msv.datatype.xsd.DateTimeType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000)c"
+"om.sun.msv.datatype.xsd.DateTimeBaseType\u0014W\u001a@3\u00a5\u00b4\u00e5\u0002\u0000\u0000xq\u0000~\u0000:q\u0000~"
+"\u0000?t\u0000\bdateTimeq\u0000~\u0000Cq\u0000~\u0000Esq\u0000~\u0000Fq\u0000~\u0000\u00c0q\u0000~\u0000?sq\u0000~\u0000&t\u0000\fIssueInstant"
+"q\u0000~\u0000\u00basq\u0000~\u0000\u001cppsq\u0000~\u00005q\u0000~\u0000\u0016psq\u0000~\u0000\u00b4q\u0000~\u0000?t\u0000\u0006stringsr\u00005com.sun.msv"
+".datatype.xsd.WhiteSpaceProcessor$Preserve\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000B\u0001"
+"q\u0000~\u0000Esq\u0000~\u0000Fq\u0000~\u0000\u00c7q\u0000~\u0000?sq\u0000~\u0000&t\u0000\u0006Issuerq\u0000~\u0000\u00basq\u0000~\u0000\u001cppsq\u0000~\u00005ppsr\u0000"
+"$com.sun.msv.datatype.xsd.IntegerType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000+com.sun."
+"msv.datatype.xsd.IntegerDerivedType\u0099\u00f1]\u0090&6k\u00be\u0002\u0000\u0001L\u0000\nbaseFacetst"
+"\u0000)Lcom/sun/msv/datatype/xsd/XSDatatypeImpl;xq\u0000~\u0000:q\u0000~\u0000?t\u0000\u0007int"
+"egerq\u0000~\u0000Csr\u0000,com.sun.msv.datatype.xsd.FractionDigitsFacet\u0000\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001I\u0000\u0005scalexr\u0000;com.sun.msv.datatype.xsd.DataTypeWithLex"
+"icalConstraintFacetT\u0090\u001c>\u001azb\u00ea\u0002\u0000\u0000xr\u0000*com.sun.msv.datatype.xsd.D"
+"ataTypeWithFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0005Z\u0000\fisFacetFixedZ\u0000\u0012needValueCheckF"
+"lagL\u0000\bbaseTypeq\u0000~\u0000\u00d1L\u0000\fconcreteTypet\u0000\'Lcom/sun/msv/datatype/x"
+"sd/ConcreteType;L\u0000\tfacetNameq\u0000~\u0000\'xq\u0000~\u0000<ppq\u0000~\u0000C\u0001\u0000sr\u0000#com.sun."
+"msv.datatype.xsd.NumberType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000:q\u0000~\u0000?t\u0000\u0007decimalq"
+"\u0000~\u0000Cq\u0000~\u0000\u00dat\u0000\u000efractionDigits\u0000\u0000\u0000\u0000q\u0000~\u0000Esq\u0000~\u0000Fq\u0000~\u0000\u00d3q\u0000~\u0000?sq\u0000~\u0000&t\u0000\f"
+"MajorVersionq\u0000~\u0000\u00basq\u0000~\u0000\u001cppq\u0000~\u0000\u00cesq\u0000~\u0000&t\u0000\fMinorVersionq\u0000~\u0000\u00basq\u0000~"
+"\u0000\u0012ppsq\u0000~\u0000\u001cq\u0000~\u0000\u0016pq\u0000~\u00008q\u0000~\u0000Hq\u0000~\u0000%sq\u0000~\u0000&t\u0000\tAssertionq\u0000~\u0000Msr\u0000\"co"
+"m.sun.msv.grammar.ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lco"
+"m/sun/msv/grammar/ExpressionPool$ClosedHash;xpsr\u0000-com.sun.ms"
+"v.grammar.ExpressionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0003\u0000\u0003I\u0000\u0005countB\u0000\rstr"
+"eamVersionL\u0000\u0006parentt\u0000$Lcom/sun/msv/grammar/ExpressionPool;xp"
+"\u0000\u0000\u0000:\u0001pq\u0000~\u0000lq\u0000~\u0000Zq\u0000~\u0000Rq\u0000~\u0000/q\u0000~\u0000\u001bq\u0000~\u0000iq\u0000~\u0000fq\u0000~\u0000hq\u0000~\u0000eq\u0000~\u0000\tq\u0000~\u0000"
+"\u000fq\u0000~\u0000\u009aq\u0000~\u0000gq\u0000~\u0000Nq\u0000~\u0000\u0013q\u0000~\u0000bq\u0000~\u0000\u00a5q\u0000~\u0000\u009dq\u0000~\u0000\u0095q\u0000~\u0000\u008fq\u0000~\u0000\u0089q\u0000~\u0000\u0083q\u0000~\u0000"
+"}q\u0000~\u0000wq\u0000~\u0000qq\u0000~\u0000kq\u0000~\u0000Yq\u0000~\u0000Qq\u0000~\u0000.q\u0000~\u0000\u0018q\u0000~\u0000\rq\u0000~\u0000\u0011q\u0000~\u0000\u0014q\u0000~\u0000\u009bq\u0000~\u0000"
+"Oq\u0000~\u0000\u00e3q\u0000~\u0000\u00aaq\u0000~\u0000^q\u0000~\u00003q\u0000~\u0000\u000bq\u0000~\u0000dq\u0000~\u0000\fq\u0000~\u0000cq\u0000~\u0000\u000eq\u0000~\u0000\u00a3q\u0000~\u0000Wq\u0000~\u0000"
+",q\u0000~\u0000\u00a6q\u0000~\u0000\u009eq\u0000~\u0000\u0096q\u0000~\u0000\u0090q\u0000~\u0000\u008aq\u0000~\u0000\nq\u0000~\u0000\u0084q\u0000~\u0000~q\u0000~\u0000xq\u0000~\u0000rq\u0000~\u0000\u0010x"));
        }
        return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
    }

    public class Unmarshaller
        extends com.sun.identity.federation.jaxb.entityconfig.impl.runtime.AbstractUnmarshallingEventHandlerImpl
    {


        public Unmarshaller(com.sun.identity.federation.jaxb.entityconfig.impl.runtime.UnmarshallingContext context) {
            super(context, "----");
        }

        protected Unmarshaller(com.sun.identity.federation.jaxb.entityconfig.impl.runtime.UnmarshallingContext context, int startState) {
            this(context);
            state = startState;
        }

        public java.lang.Object owner() {
            return com.sun.identity.liberty.ws.common.jaxb.assertion.impl.AssertionElementImpl.this;
        }

        public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  3 :
                        revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                        return ;
                    case  1 :
                        attIdx = context.getAttribute("", "AssertionID");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        break;
                    case  0 :
                        if (("Assertion" == ___local)&&("urn:oasis:names:tc:SAML:1.0:assertion" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 1;
                            return ;
                        }
                        break;
                }
                super.enterElement(___uri, ___local, ___qname, __atts);
                break;
            }
        }

        public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  3 :
                        revertToParentFromLeaveElement(___uri, ___local, ___qname);
                        return ;
                    case  1 :
                        attIdx = context.getAttribute("", "AssertionID");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                    case  2 :
                        if (("Assertion" == ___local)&&("urn:oasis:names:tc:SAML:1.0:assertion" == ___uri)) {
                            context.popAttributes();
                            state = 3;
                            return ;
                        }
                        break;
                }
                super.leaveElement(___uri, ___local, ___qname);
                break;
            }
        }

        public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  3 :
                        revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                        return ;
                    case  1 :
                        if (("AssertionID" == ___local)&&("" == ___uri)) {
                            spawnHandlerFromEnterAttribute((((com.sun.identity.liberty.ws.common.jaxb.assertion.impl.AssertionTypeImpl)com.sun.identity.liberty.ws.common.jaxb.assertion.impl.AssertionElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                }
                super.enterAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  3 :
                        revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                        return ;
                    case  1 :
                        attIdx = context.getAttribute("", "AssertionID");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                }
                super.leaveAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void handleText(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                try {
                    switch (state) {
                        case  3 :
                            revertToParentFromText(value);
                            return ;
                        case  1 :
                            attIdx = context.getAttribute("", "AssertionID");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            break;
                    }
                } catch (java.lang.RuntimeException e) {
                    handleUnexpectedTextException(value, e);
                }
                break;
            }
        }

    }

}
