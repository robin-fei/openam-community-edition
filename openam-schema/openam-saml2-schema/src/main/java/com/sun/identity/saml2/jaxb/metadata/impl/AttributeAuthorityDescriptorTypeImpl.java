//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v1.0.6-b27-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2012.06.11 at 10:34:07 AM PDT 
//


package com.sun.identity.saml2.jaxb.metadata.impl;

public class AttributeAuthorityDescriptorTypeImpl
    extends com.sun.identity.saml2.jaxb.metadata.impl.RoleDescriptorTypeImpl
    implements com.sun.identity.saml2.jaxb.metadata.AttributeAuthorityDescriptorType, com.sun.xml.bind.JAXBObject, com.sun.identity.saml2.jaxb.assertion.impl.runtime.UnmarshallableObject, com.sun.identity.saml2.jaxb.assertion.impl.runtime.XMLSerializable, com.sun.identity.saml2.jaxb.assertion.impl.runtime.ValidatableObject
{

    protected com.sun.xml.bind.util.ListImpl _AttributeService;
    protected com.sun.xml.bind.util.ListImpl _AttributeProfile;
    protected com.sun.xml.bind.util.ListImpl _NameIDFormat;
    protected com.sun.xml.bind.util.ListImpl _AssertionIDRequestService;
    protected com.sun.xml.bind.util.ListImpl _Attribute;
    public final static java.lang.Class version = (com.sun.identity.saml2.jaxb.metadata.impl.JAXBVersion.class);
    private static com.sun.msv.grammar.Grammar schemaFragment;

    private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
        return (com.sun.identity.saml2.jaxb.metadata.AttributeAuthorityDescriptorType.class);
    }

    protected com.sun.xml.bind.util.ListImpl _getAttributeService() {
        if (_AttributeService == null) {
            _AttributeService = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
        }
        return _AttributeService;
    }

    public java.util.List getAttributeService() {
        return _getAttributeService();
    }

    protected com.sun.xml.bind.util.ListImpl _getAttributeProfile() {
        if (_AttributeProfile == null) {
            _AttributeProfile = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
        }
        return _AttributeProfile;
    }

    public java.util.List getAttributeProfile() {
        return _getAttributeProfile();
    }

    protected com.sun.xml.bind.util.ListImpl _getNameIDFormat() {
        if (_NameIDFormat == null) {
            _NameIDFormat = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
        }
        return _NameIDFormat;
    }

    public java.util.List getNameIDFormat() {
        return _getNameIDFormat();
    }

    protected com.sun.xml.bind.util.ListImpl _getAssertionIDRequestService() {
        if (_AssertionIDRequestService == null) {
            _AssertionIDRequestService = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
        }
        return _AssertionIDRequestService;
    }

    public java.util.List getAssertionIDRequestService() {
        return _getAssertionIDRequestService();
    }

    protected com.sun.xml.bind.util.ListImpl _getAttribute() {
        if (_Attribute == null) {
            _Attribute = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
        }
        return _Attribute;
    }

    public java.util.List getAttribute() {
        return _getAttribute();
    }

    public com.sun.identity.saml2.jaxb.assertion.impl.runtime.UnmarshallingEventHandler createUnmarshaller(com.sun.identity.saml2.jaxb.assertion.impl.runtime.UnmarshallingContext context) {
        return new com.sun.identity.saml2.jaxb.metadata.impl.AttributeAuthorityDescriptorTypeImpl.Unmarshaller(context);
    }

    public void serializeBody(com.sun.identity.saml2.jaxb.assertion.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        int idx1 = 0;
        final int len1 = ((_AttributeService == null)? 0 :_AttributeService.size());
        int idx2 = 0;
        final int len2 = ((_AttributeProfile == null)? 0 :_AttributeProfile.size());
        int idx3 = 0;
        final int len3 = ((_NameIDFormat == null)? 0 :_NameIDFormat.size());
        int idx4 = 0;
        final int len4 = ((_AssertionIDRequestService == null)? 0 :_AssertionIDRequestService.size());
        int idx5 = 0;
        final int len5 = ((_Attribute == null)? 0 :_Attribute.size());
        super.serializeBody(context);
        while (idx1 != len1) {
            if (_AttributeService.get(idx1) instanceof javax.xml.bind.Element) {
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _AttributeService.get(idx1 ++)), "AttributeService");
            } else {
                context.startElement("urn:oasis:names:tc:SAML:2.0:metadata", "AttributeService");
                int idx_0 = idx1;
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _AttributeService.get(idx_0 ++)), "AttributeService");
                context.endNamespaceDecls();
                int idx_1 = idx1;
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _AttributeService.get(idx_1 ++)), "AttributeService");
                context.endAttributes();
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _AttributeService.get(idx1 ++)), "AttributeService");
                context.endElement();
            }
        }
        while (idx4 != len4) {
            if (_AssertionIDRequestService.get(idx4) instanceof javax.xml.bind.Element) {
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _AssertionIDRequestService.get(idx4 ++)), "AssertionIDRequestService");
            } else {
                context.startElement("urn:oasis:names:tc:SAML:2.0:metadata", "AssertionIDRequestService");
                int idx_2 = idx4;
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _AssertionIDRequestService.get(idx_2 ++)), "AssertionIDRequestService");
                context.endNamespaceDecls();
                int idx_3 = idx4;
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _AssertionIDRequestService.get(idx_3 ++)), "AssertionIDRequestService");
                context.endAttributes();
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _AssertionIDRequestService.get(idx4 ++)), "AssertionIDRequestService");
                context.endElement();
            }
        }
        while (idx3 != len3) {
            context.startElement("urn:oasis:names:tc:SAML:2.0:metadata", "NameIDFormat");
            int idx_4 = idx3;
            try {
                idx_4 += 1;
            } catch (java.lang.Exception e) {
                com.sun.identity.saml2.jaxb.assertion.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endNamespaceDecls();
            int idx_5 = idx3;
            try {
                idx_5 += 1;
            } catch (java.lang.Exception e) {
                com.sun.identity.saml2.jaxb.assertion.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttributes();
            try {
                context.text(((java.lang.String) _NameIDFormat.get(idx3 ++)), "NameIDFormat");
            } catch (java.lang.Exception e) {
                com.sun.identity.saml2.jaxb.assertion.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        while (idx2 != len2) {
            context.startElement("urn:oasis:names:tc:SAML:2.0:metadata", "AttributeProfile");
            int idx_6 = idx2;
            try {
                idx_6 += 1;
            } catch (java.lang.Exception e) {
                com.sun.identity.saml2.jaxb.assertion.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endNamespaceDecls();
            int idx_7 = idx2;
            try {
                idx_7 += 1;
            } catch (java.lang.Exception e) {
                com.sun.identity.saml2.jaxb.assertion.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttributes();
            try {
                context.text(((java.lang.String) _AttributeProfile.get(idx2 ++)), "AttributeProfile");
            } catch (java.lang.Exception e) {
                com.sun.identity.saml2.jaxb.assertion.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        while (idx5 != len5) {
            if (_Attribute.get(idx5) instanceof javax.xml.bind.Element) {
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _Attribute.get(idx5 ++)), "Attribute");
            } else {
                context.startElement("urn:oasis:names:tc:SAML:2.0:assertion", "Attribute");
                int idx_8 = idx5;
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Attribute.get(idx_8 ++)), "Attribute");
                context.endNamespaceDecls();
                int idx_9 = idx5;
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Attribute.get(idx_9 ++)), "Attribute");
                context.endAttributes();
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _Attribute.get(idx5 ++)), "Attribute");
                context.endElement();
            }
        }
    }

    public void serializeAttributes(com.sun.identity.saml2.jaxb.assertion.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        int idx1 = 0;
        final int len1 = ((_AttributeService == null)? 0 :_AttributeService.size());
        int idx2 = 0;
        final int len2 = ((_AttributeProfile == null)? 0 :_AttributeProfile.size());
        int idx3 = 0;
        final int len3 = ((_NameIDFormat == null)? 0 :_NameIDFormat.size());
        int idx4 = 0;
        final int len4 = ((_AssertionIDRequestService == null)? 0 :_AssertionIDRequestService.size());
        int idx5 = 0;
        final int len5 = ((_Attribute == null)? 0 :_Attribute.size());
        super.serializeAttributes(context);
        while (idx1 != len1) {
            if (_AttributeService.get(idx1) instanceof javax.xml.bind.Element) {
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _AttributeService.get(idx1 ++)), "AttributeService");
            } else {
                idx1 += 1;
            }
        }
        while (idx4 != len4) {
            if (_AssertionIDRequestService.get(idx4) instanceof javax.xml.bind.Element) {
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _AssertionIDRequestService.get(idx4 ++)), "AssertionIDRequestService");
            } else {
                idx4 += 1;
            }
        }
        while (idx3 != len3) {
            try {
                idx3 += 1;
            } catch (java.lang.Exception e) {
                com.sun.identity.saml2.jaxb.assertion.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
        }
        while (idx2 != len2) {
            try {
                idx2 += 1;
            } catch (java.lang.Exception e) {
                com.sun.identity.saml2.jaxb.assertion.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
        }
        while (idx5 != len5) {
            if (_Attribute.get(idx5) instanceof javax.xml.bind.Element) {
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Attribute.get(idx5 ++)), "Attribute");
            } else {
                idx5 += 1;
            }
        }
    }

    public void serializeURIs(com.sun.identity.saml2.jaxb.assertion.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        int idx1 = 0;
        final int len1 = ((_AttributeService == null)? 0 :_AttributeService.size());
        int idx2 = 0;
        final int len2 = ((_AttributeProfile == null)? 0 :_AttributeProfile.size());
        int idx3 = 0;
        final int len3 = ((_NameIDFormat == null)? 0 :_NameIDFormat.size());
        int idx4 = 0;
        final int len4 = ((_AssertionIDRequestService == null)? 0 :_AssertionIDRequestService.size());
        int idx5 = 0;
        final int len5 = ((_Attribute == null)? 0 :_Attribute.size());
        super.serializeURIs(context);
        while (idx1 != len1) {
            if (_AttributeService.get(idx1) instanceof javax.xml.bind.Element) {
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _AttributeService.get(idx1 ++)), "AttributeService");
            } else {
                idx1 += 1;
            }
        }
        while (idx4 != len4) {
            if (_AssertionIDRequestService.get(idx4) instanceof javax.xml.bind.Element) {
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _AssertionIDRequestService.get(idx4 ++)), "AssertionIDRequestService");
            } else {
                idx4 += 1;
            }
        }
        while (idx3 != len3) {
            try {
                idx3 += 1;
            } catch (java.lang.Exception e) {
                com.sun.identity.saml2.jaxb.assertion.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
        }
        while (idx2 != len2) {
            try {
                idx2 += 1;
            } catch (java.lang.Exception e) {
                com.sun.identity.saml2.jaxb.assertion.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
        }
        while (idx5 != len5) {
            if (_Attribute.get(idx5) instanceof javax.xml.bind.Element) {
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Attribute.get(idx5 ++)), "Attribute");
            } else {
                idx5 += 1;
            }
        }
    }

    public java.lang.Class getPrimaryInterface() {
        return (com.sun.identity.saml2.jaxb.metadata.AttributeAuthorityDescriptorType.class);
    }

    public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
        if (schemaFragment == null) {
            schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.su"
+"n.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gra"
+"mmar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expressi"
+"on\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0002L\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000b"
+"expandedExpq\u0000~\u0000\u0002xpppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000pp"
+"sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~"
+"\u0000\u0000ppsr\u0000\u001dcom.sun.msv.grammar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0001ppsq\u0000~"
+"\u0000\u0013sr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000psr\u0000\'com.sun.ms"
+"v.grammar.trex.ElementPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\tnameClasst\u0000\u001fLcom/"
+"sun/msv/grammar/NameClass;xr\u0000\u001ecom.sun.msv.grammar.ElementExp"
+"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAttributesL\u0000\fcontentModelq\u0000~\u0000\u0002"
+"xq\u0000~\u0000\u0003q\u0000~\u0000\u0017p\u0000sq\u0000~\u0000\u0013ppsr\u0000 com.sun.msv.grammar.OneOrMoreExp\u0000\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001ccom.sun.msv.grammar.UnaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0003expq\u0000~"
+"\u0000\u0002xq\u0000~\u0000\u0003q\u0000~\u0000\u0017psr\u0000 com.sun.msv.grammar.AttributeExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000"
+"\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnameClassq\u0000~\u0000\u0019xq\u0000~\u0000\u0003q\u0000~\u0000\u0017psr\u00002com.sun.msv.gra"
+"mmar.Expression$AnyStringExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003sq\u0000~\u0000\u0016\u0001q"
+"\u0000~\u0000#sr\u0000 com.sun.msv.grammar.AnyNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.s"
+"un.msv.grammar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.sun.msv.grammar"
+".Expression$EpsilonExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003q\u0000~\u0000$q\u0000~\u0000)sr\u0000#"
+"com.sun.msv.grammar.SimpleNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNamet\u0000"
+"\u0012Ljava/lang/String;L\u0000\fnamespaceURIq\u0000~\u0000+xq\u0000~\u0000&t\u00003com.sun.iden"
+"tity.saml2.jaxb.xmlsig.SignatureElementt\u0000+http://java.sun.co"
+"m/jaxb/xjc/dummy-elementssq\u0000~\u0000\u0018q\u0000~\u0000\u0017p\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0018pp\u0000sq\u0000~\u0000"
+"\u0013ppsq\u0000~\u0000\u001dq\u0000~\u0000\u0017psq\u0000~\u0000 q\u0000~\u0000\u0017pq\u0000~\u0000#q\u0000~\u0000\'q\u0000~\u0000)sq\u0000~\u0000*t\u00000com.sun.i"
+"dentity.saml2.jaxb.xmlsig.SignatureTypeq\u0000~\u0000.sq\u0000~\u0000\u0013ppsq\u0000~\u0000 q\u0000"
+"~\u0000\u0017psr\u0000\u001bcom.sun.msv.grammar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/r"
+"elaxng/datatype/Datatype;L\u0000\u0006exceptq\u0000~\u0000\u0002L\u0000\u0004namet\u0000\u001dLcom/sun/ms"
+"v/util/StringPair;xq\u0000~\u0000\u0003ppsr\u0000\"com.sun.msv.datatype.xsd.Qname"
+"Type\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000*com.sun.msv.datatype.xsd.BuiltinAtomicTyp"
+"e\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.datatype.xsd.ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0001\u0002\u0000\u0000xr\u0000\'com.sun.msv.datatype.xsd.XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000"
+"\fnamespaceUriq\u0000~\u0000+L\u0000\btypeNameq\u0000~\u0000+L\u0000\nwhiteSpacet\u0000.Lcom/sun/m"
+"sv/datatype/xsd/WhiteSpaceProcessor;xpt\u0000 http://www.w3.org/2"
+"001/XMLSchemat\u0000\u0005QNamesr\u00005com.sun.msv.datatype.xsd.WhiteSpace"
+"Processor$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun.msv.datatype.xsd.Wh"
+"iteSpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.sun.msv.grammar.Expres"
+"sion$NullSetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003q\u0000~\u0000\u0017psr\u0000\u001bcom.sun.msv"
+".util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000+L\u0000\fnamespaceURIq"
+"\u0000~\u0000+xpq\u0000~\u0000Dq\u0000~\u0000Csq\u0000~\u0000*t\u0000\u0004typet\u0000)http://www.w3.org/2001/XMLSc"
+"hema-instanceq\u0000~\u0000)sq\u0000~\u0000*t\u0000\tSignaturet\u0000\"http://www.w3.org/200"
+"0/09/xmldsig#q\u0000~\u0000)sq\u0000~\u0000\u0013ppsq\u0000~\u0000\u0013q\u0000~\u0000\u0017psq\u0000~\u0000\u0018q\u0000~\u0000\u0017p\u0000sq\u0000~\u0000\u0013pps"
+"q\u0000~\u0000\u001dq\u0000~\u0000\u0017psq\u0000~\u0000 q\u0000~\u0000\u0017pq\u0000~\u0000#q\u0000~\u0000\'q\u0000~\u0000)sq\u0000~\u0000*t\u00006com.sun.ident"
+"ity.saml2.jaxb.metadata.ExtensionsElementq\u0000~\u0000.sq\u0000~\u0000\u0018q\u0000~\u0000\u0017p\u0000s"
+"q\u0000~\u0000\u0000ppsq\u0000~\u0000\u0018pp\u0000sq\u0000~\u0000\u0013ppsq\u0000~\u0000\u001dq\u0000~\u0000\u0017psq\u0000~\u0000 q\u0000~\u0000\u0017pq\u0000~\u0000#q\u0000~\u0000\'q\u0000"
+"~\u0000)sq\u0000~\u0000*t\u00003com.sun.identity.saml2.jaxb.metadata.ExtensionsT"
+"ypeq\u0000~\u0000.sq\u0000~\u0000\u0013ppsq\u0000~\u0000 q\u0000~\u0000\u0017pq\u0000~\u0000<q\u0000~\u0000Lq\u0000~\u0000)sq\u0000~\u0000*t\u0000\nExtensio"
+"nst\u0000$urn:oasis:names:tc:SAML:2.0:metadataq\u0000~\u0000)sq\u0000~\u0000\u0013ppsq\u0000~\u0000\u001d"
+"q\u0000~\u0000\u0017psq\u0000~\u0000\u0013q\u0000~\u0000\u0017psq\u0000~\u0000\u0018q\u0000~\u0000\u0017p\u0000sq\u0000~\u0000\u0013ppsq\u0000~\u0000\u001dq\u0000~\u0000\u0017psq\u0000~\u0000 q\u0000~"
+"\u0000\u0017pq\u0000~\u0000#q\u0000~\u0000\'q\u0000~\u0000)sq\u0000~\u0000*t\u00009com.sun.identity.saml2.jaxb.metad"
+"ata.KeyDescriptorElementq\u0000~\u0000.sq\u0000~\u0000\u0018q\u0000~\u0000\u0017p\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0018pp\u0000s"
+"q\u0000~\u0000\u0013ppsq\u0000~\u0000\u001dq\u0000~\u0000\u0017psq\u0000~\u0000 q\u0000~\u0000\u0017pq\u0000~\u0000#q\u0000~\u0000\'q\u0000~\u0000)sq\u0000~\u0000*t\u00006com.s"
+"un.identity.saml2.jaxb.metadata.KeyDescriptorTypeq\u0000~\u0000.sq\u0000~\u0000\u0013"
+"ppsq\u0000~\u0000 q\u0000~\u0000\u0017pq\u0000~\u0000<q\u0000~\u0000Lq\u0000~\u0000)sq\u0000~\u0000*t\u0000\rKeyDescriptorq\u0000~\u0000fq\u0000~\u0000"
+")sq\u0000~\u0000\u0013ppsq\u0000~\u0000\u0013q\u0000~\u0000\u0017psq\u0000~\u0000\u0018q\u0000~\u0000\u0017p\u0000sq\u0000~\u0000\u0013ppsq\u0000~\u0000\u001dq\u0000~\u0000\u0017psq\u0000~\u0000 "
+"q\u0000~\u0000\u0017pq\u0000~\u0000#q\u0000~\u0000\'q\u0000~\u0000)sq\u0000~\u0000*t\u00008com.sun.identity.saml2.jaxb.me"
+"tadata.OrganizationElementq\u0000~\u0000.sq\u0000~\u0000\u0018q\u0000~\u0000\u0017p\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0018pp"
+"\u0000sq\u0000~\u0000\u0013ppsq\u0000~\u0000\u001dq\u0000~\u0000\u0017psq\u0000~\u0000 q\u0000~\u0000\u0017pq\u0000~\u0000#q\u0000~\u0000\'q\u0000~\u0000)sq\u0000~\u0000*t\u00005com"
+".sun.identity.saml2.jaxb.metadata.OrganizationTypeq\u0000~\u0000.sq\u0000~\u0000"
+"\u0013ppsq\u0000~\u0000 q\u0000~\u0000\u0017pq\u0000~\u0000<q\u0000~\u0000Lq\u0000~\u0000)sq\u0000~\u0000*t\u0000\fOrganizationq\u0000~\u0000fq\u0000~\u0000"
+")sq\u0000~\u0000\u0013ppsq\u0000~\u0000\u001dq\u0000~\u0000\u0017psq\u0000~\u0000\u0013q\u0000~\u0000\u0017psq\u0000~\u0000\u0018q\u0000~\u0000\u0017p\u0000sq\u0000~\u0000\u0013ppsq\u0000~\u0000\u001d"
+"q\u0000~\u0000\u0017psq\u0000~\u0000 q\u0000~\u0000\u0017pq\u0000~\u0000#q\u0000~\u0000\'q\u0000~\u0000)sq\u0000~\u0000*t\u00009com.sun.identity.s"
+"aml2.jaxb.metadata.ContactPersonElementq\u0000~\u0000.sq\u0000~\u0000\u0018q\u0000~\u0000\u0017p\u0000sq\u0000"
+"~\u0000\u0000ppsq\u0000~\u0000\u0018pp\u0000sq\u0000~\u0000\u0013ppsq\u0000~\u0000\u001dq\u0000~\u0000\u0017psq\u0000~\u0000 q\u0000~\u0000\u0017pq\u0000~\u0000#q\u0000~\u0000\'q\u0000~\u0000"
+")sq\u0000~\u0000*t\u00000com.sun.identity.saml2.jaxb.metadata.ContactTypeq\u0000"
+"~\u0000.sq\u0000~\u0000\u0013ppsq\u0000~\u0000 q\u0000~\u0000\u0017pq\u0000~\u0000<q\u0000~\u0000Lq\u0000~\u0000)sq\u0000~\u0000*t\u0000\rContactPerson"
+"q\u0000~\u0000fq\u0000~\u0000)sq\u0000~\u0000\u001dppsq\u0000~\u0000\u0013ppsq\u0000~\u0000\u0018pp\u0000sq\u0000~\u0000\u0013ppsq\u0000~\u0000\u001dq\u0000~\u0000\u0017psq\u0000~\u0000"
+" q\u0000~\u0000\u0017pq\u0000~\u0000#q\u0000~\u0000\'q\u0000~\u0000)sq\u0000~\u0000*t\u0000<com.sun.identity.saml2.jaxb.m"
+"etadata.AttributeServiceElementq\u0000~\u0000.sq\u0000~\u0000\u0018pp\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0018p"
+"p\u0000sq\u0000~\u0000\u0013ppsq\u0000~\u0000\u001dq\u0000~\u0000\u0017psq\u0000~\u0000 q\u0000~\u0000\u0017pq\u0000~\u0000#q\u0000~\u0000\'q\u0000~\u0000)sq\u0000~\u0000*t\u00009co"
+"m.sun.identity.saml2.jaxb.metadata.AttributeServiceTypeq\u0000~\u0000."
+"sq\u0000~\u0000\u0013ppsq\u0000~\u0000 q\u0000~\u0000\u0017pq\u0000~\u0000<q\u0000~\u0000Lq\u0000~\u0000)sq\u0000~\u0000*t\u0000\u0010AttributeService"
+"q\u0000~\u0000fsq\u0000~\u0000\u0013ppsq\u0000~\u0000\u001dq\u0000~\u0000\u0017psq\u0000~\u0000\u0013q\u0000~\u0000\u0017psq\u0000~\u0000\u0018q\u0000~\u0000\u0017p\u0000sq\u0000~\u0000\u0013ppsq"
+"\u0000~\u0000\u001dq\u0000~\u0000\u0017psq\u0000~\u0000 q\u0000~\u0000\u0017pq\u0000~\u0000#q\u0000~\u0000\'q\u0000~\u0000)sq\u0000~\u0000*t\u0000Ecom.sun.identi"
+"ty.saml2.jaxb.metadata.AssertionIDRequestServiceElementq\u0000~\u0000."
+"sq\u0000~\u0000\u0018q\u0000~\u0000\u0017p\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0018pp\u0000sq\u0000~\u0000\u0013ppsq\u0000~\u0000\u001dq\u0000~\u0000\u0017psq\u0000~\u0000 q\u0000~\u0000"
+"\u0017pq\u0000~\u0000#q\u0000~\u0000\'q\u0000~\u0000)sq\u0000~\u0000*t\u00001com.sun.identity.saml2.jaxb.metada"
+"ta.EndpointTypeq\u0000~\u0000.sq\u0000~\u0000\u0013ppsq\u0000~\u0000 q\u0000~\u0000\u0017pq\u0000~\u0000<q\u0000~\u0000Lq\u0000~\u0000)sq\u0000~\u0000"
+"*t\u0000\u0019AssertionIDRequestServiceq\u0000~\u0000fq\u0000~\u0000)sq\u0000~\u0000\u0013ppsq\u0000~\u0000\u001dq\u0000~\u0000\u0017ps"
+"q\u0000~\u0000\u0018q\u0000~\u0000\u0017p\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u00009q\u0000~\u0000\u0017psr\u0000#com.sun.msv.datatype.xsd"
+".AnyURIType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000>q\u0000~\u0000Ct\u0000\u0006anyURIq\u0000~\u0000Gq\u0000~\u0000Isq\u0000~\u0000Jq\u0000"
+"~\u0000\u00d5q\u0000~\u0000Csq\u0000~\u0000\u0013ppsq\u0000~\u0000 q\u0000~\u0000\u0017pq\u0000~\u0000<q\u0000~\u0000Lq\u0000~\u0000)sq\u0000~\u0000*t\u0000\fNameIDFo"
+"rmatq\u0000~\u0000fq\u0000~\u0000)sq\u0000~\u0000\u0013ppsq\u0000~\u0000\u001dq\u0000~\u0000\u0017psq\u0000~\u0000\u0018q\u0000~\u0000\u0017p\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000\u00d2"
+"sq\u0000~\u0000\u0013ppsq\u0000~\u0000 q\u0000~\u0000\u0017pq\u0000~\u0000<q\u0000~\u0000Lq\u0000~\u0000)sq\u0000~\u0000*t\u0000\u0010AttributeProfile"
+"q\u0000~\u0000fq\u0000~\u0000)sq\u0000~\u0000\u0013ppsq\u0000~\u0000\u001dq\u0000~\u0000\u0017psq\u0000~\u0000\u0013q\u0000~\u0000\u0017psq\u0000~\u0000\u0018q\u0000~\u0000\u0017p\u0000sq\u0000~\u0000"
+"\u0013ppsq\u0000~\u0000\u001dq\u0000~\u0000\u0017psq\u0000~\u0000 q\u0000~\u0000\u0017pq\u0000~\u0000#q\u0000~\u0000\'q\u0000~\u0000)sq\u0000~\u0000*t\u00006com.sun.i"
+"dentity.saml2.jaxb.assertion.AttributeElementq\u0000~\u0000.sq\u0000~\u0000\u0018q\u0000~\u0000"
+"\u0017p\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0018pp\u0000sq\u0000~\u0000\u0013ppsq\u0000~\u0000\u001dq\u0000~\u0000\u0017psq\u0000~\u0000 q\u0000~\u0000\u0017pq\u0000~\u0000#q\u0000~"
+"\u0000\'q\u0000~\u0000)sq\u0000~\u0000*t\u00003com.sun.identity.saml2.jaxb.assertion.Attrib"
+"uteTypeq\u0000~\u0000.sq\u0000~\u0000\u0013ppsq\u0000~\u0000 q\u0000~\u0000\u0017pq\u0000~\u0000<q\u0000~\u0000Lq\u0000~\u0000)sq\u0000~\u0000*t\u0000\tAttr"
+"ibutet\u0000%urn:oasis:names:tc:SAML:2.0:assertionq\u0000~\u0000)sq\u0000~\u0000\u0013ppsq"
+"\u0000~\u0000 q\u0000~\u0000\u0017psq\u0000~\u00009ppsr\u0000\u001fcom.sun.msv.datatype.xsd.IDType\u0000\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0001\u0002\u0000\u0000xr\u0000#com.sun.msv.datatype.xsd.NcnameType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\"co"
+"m.sun.msv.datatype.xsd.TokenType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000#com.sun.msv.d"
+"atatype.xsd.StringType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001Z\u0000\risAlwaysValidxq\u0000~\u0000>q\u0000~\u0000C"
+"t\u0000\u0002IDq\u0000~\u0000G\u0000q\u0000~\u0000Isq\u0000~\u0000Jq\u0000~\u0001\u0001q\u0000~\u0000Csq\u0000~\u0000*t\u0000\u0002IDt\u0000\u0000q\u0000~\u0000)sq\u0000~\u0000\u0013pps"
+"q\u0000~\u0000 q\u0000~\u0000\u0017psq\u0000~\u00009ppsr\u0000%com.sun.msv.datatype.xsd.DurationType"
+"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000>q\u0000~\u0000Ct\u0000\bdurationq\u0000~\u0000Gq\u0000~\u0000Isq\u0000~\u0000Jq\u0000~\u0001\u000bq\u0000~\u0000Cs"
+"q\u0000~\u0000*t\u0000\rcacheDurationq\u0000~\u0001\u0005q\u0000~\u0000)sq\u0000~\u0000\u0013ppsq\u0000~\u0000 q\u0000~\u0000\u0017pq\u0000~\u0000\u00d2sq\u0000~"
+"\u0000*t\u0000\berrorURLq\u0000~\u0001\u0005q\u0000~\u0000)sq\u0000~\u0000 ppsq\u0000~\u00009ppsr\u0000!com.sun.msv.datat"
+"ype.xsd.ListType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bitemTypet\u0000)Lcom/sun/msv/dataty"
+"pe/xsd/XSDatatypeImpl;xq\u0000~\u0000?q\u0000~\u0000ft\u0000\u000eanyURIListTypeq\u0000~\u0000Gq\u0000~\u0000\u00d4"
+"q\u0000~\u0000Ipsq\u0000~\u0000*t\u0000\u001aprotocolSupportEnumerationq\u0000~\u0001\u0005sq\u0000~\u0000\u0013ppsq\u0000~\u0000 "
+"q\u0000~\u0000\u0017psq\u0000~\u00009ppsr\u0000%com.sun.msv.datatype.xsd.DateTimeType\u0000\u0000\u0000\u0000\u0000"
+"\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000)com.sun.msv.datatype.xsd.DateTimeBaseType\u0014W\u001a@3\u00a5\u00b4\u00e5\u0002"
+"\u0000\u0000xq\u0000~\u0000>q\u0000~\u0000Ct\u0000\bdateTimeq\u0000~\u0000Gq\u0000~\u0000Isq\u0000~\u0000Jq\u0000~\u0001!q\u0000~\u0000Csq\u0000~\u0000*t\u0000\nv"
+"alidUntilq\u0000~\u0001\u0005q\u0000~\u0000)sr\u0000\"com.sun.msv.grammar.ExpressionPool\u0000\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun/msv/grammar/ExpressionPool$Cl"
+"osedHash;xpsr\u0000-com.sun.msv.grammar.ExpressionPool$ClosedHash"
+"\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0003\u0000\u0003I\u0000\u0005countB\u0000\rstreamVersionL\u0000\u0006parentt\u0000$Lcom/sun/msv/"
+"grammar/ExpressionPool;xp\u0000\u0000\u0000^\u0001pq\u0000~\u0000\u0080q\u0000~\u0000tq\u0000~\u0000lq\u0000~\u0000^q\u0000~\u0000Vq\u0000~\u0000"
+"3q\u0000~\u0000\u001fq\u0000~\u0000\u00c6q\u0000~\u0000\rq\u0000~\u0000\u00ceq\u0000~\u0000\u00dbq\u0000~\u0000\u00e8q\u0000~\u0000\u00f0q\u0000~\u0000\u0005q\u0000~\u0000\u00a5q\u0000~\u0000\u0091q\u0000~\u0000hq\u0000~\u0000"
+"\u00baq\u0000~\u0000\u00e4q\u0000~\u0000\tq\u0000~\u0000\bq\u0000~\u0000\u00bdq\u0000~\u0000\u00b0q\u0000~\u0000\u00a8q\u0000~\u0000\u009cq\u0000~\u0000\u0094q\u0000~\u0000\u0087q\u0000~\u0000\u007fq\u0000~\u0000sq\u0000~\u0000"
+"kq\u0000~\u0000]q\u0000~\u0000Uq\u0000~\u00002q\u0000~\u0000\u001cq\u0000~\u0000\u00c5q\u0000~\u0000\u00e7q\u0000~\u0000\u00efq\u0000~\u0000\u00aeq\u0000~\u0000\u009aq\u0000~\u0000\u0085q\u0000~\u0000qq\u0000~\u0000"
+"[q\u0000~\u00000q\u0000~\u0000\u00c3q\u0000~\u0000\u00edq\u0000~\u0000\u00f9q\u0000~\u0000|q\u0000~\u0000Rq\u0000~\u0000\u0014q\u0000~\u0000\u0090q\u0000~\u0000gq\u0000~\u0000\u00b9q\u0000~\u0000\u00e3q\u0000~\u0001"
+"\u0006q\u0000~\u0000\u00a6q\u0000~\u0000\u0092q\u0000~\u0000}q\u0000~\u0000iq\u0000~\u0000Sq\u0000~\u0000\u0015q\u0000~\u0000\u00bbq\u0000~\u0000\u00e5q\u0000~\u0000\u0007q\u0000~\u0001\u000fq\u0000~\u0000\u000bq\u0000~\u0000"
+"\u0006q\u0000~\u0000\u000eq\u0000~\u0001\u001bq\u0000~\u0000\u00b5q\u0000~\u0000\u00a1q\u0000~\u0000\u008cq\u0000~\u0000xq\u0000~\u0000bq\u0000~\u00007q\u0000~\u0000\u00caq\u0000~\u0000\u00d7q\u0000~\u0000\fq\u0000~\u0000"
+"\u00dfq\u0000~\u0000\u00f4q\u0000~\u0000\u000fq\u0000~\u0000\u0012q\u0000~\u0000\u0010q\u0000~\u0000\nq\u0000~\u0000\u00d1q\u0000~\u0000\u00deq\u0000~\u0000\u0011q\u0000~\u0000\u00cfq\u0000~\u0000\u00dcq\u0000~\u0000\u00beq\u0000~\u0000"
+"\u00b1q\u0000~\u0000\u00a9q\u0000~\u0000\u009dq\u0000~\u0000\u0095q\u0000~\u0000\u0088x"));
        }
        return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
    }

    public class Unmarshaller
        extends com.sun.identity.saml2.jaxb.assertion.impl.runtime.AbstractUnmarshallingEventHandlerImpl
    {


        public Unmarshaller(com.sun.identity.saml2.jaxb.assertion.impl.runtime.UnmarshallingContext context) {
            super(context, "-----------------");
        }

        protected Unmarshaller(com.sun.identity.saml2.jaxb.assertion.impl.runtime.UnmarshallingContext context, int startState) {
            this(context);
            state = startState;
        }

        public java.lang.Object owner() {
            return com.sun.identity.saml2.jaxb.metadata.impl.AttributeAuthorityDescriptorTypeImpl.this;
        }

        public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  14 :
                        attIdx = context.getAttribute("", "FriendlyName");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        attIdx = context.getAttribute("", "Name");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        break;
                    case  0 :
                        attIdx = context.getAttribute("", "ID");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        attIdx = context.getAttribute("", "cacheDuration");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        attIdx = context.getAttribute("", "errorURL");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        attIdx = context.getAttribute("", "protocolSupportEnumeration");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        break;
                    case  7 :
                        if (("AssertionIDRequestService" == ___local)&&("urn:oasis:names:tc:SAML:2.0:metadata" == ___uri)) {
                            _getAssertionIDRequestService().add(((com.sun.identity.saml2.jaxb.metadata.impl.AssertionIDRequestServiceElementImpl) spawnChildFromEnterElement((com.sun.identity.saml2.jaxb.metadata.impl.AssertionIDRequestServiceElementImpl.class), 7, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("AssertionIDRequestService" == ___local)&&("urn:oasis:names:tc:SAML:2.0:metadata" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 5;
                            return ;
                        }
                        if (("NameIDFormat" == ___local)&&("urn:oasis:names:tc:SAML:2.0:metadata" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 8;
                            return ;
                        }
                        state = 10;
                        continue outer;
                    case  10 :
                        if (("NameIDFormat" == ___local)&&("urn:oasis:names:tc:SAML:2.0:metadata" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 8;
                            return ;
                        }
                        if (("AttributeProfile" == ___local)&&("urn:oasis:names:tc:SAML:2.0:metadata" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 11;
                            return ;
                        }
                        state = 13;
                        continue outer;
                    case  5 :
                        attIdx = context.getAttribute("", "Binding");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        break;
                    case  13 :
                        if (("AttributeProfile" == ___local)&&("urn:oasis:names:tc:SAML:2.0:metadata" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 11;
                            return ;
                        }
                        if (("Attribute" == ___local)&&("urn:oasis:names:tc:SAML:2.0:assertion" == ___uri)) {
                            _getAttribute().add(((com.sun.identity.saml2.jaxb.assertion.impl.AttributeElementImpl) spawnChildFromEnterElement((com.sun.identity.saml2.jaxb.assertion.impl.AttributeElementImpl.class), 16, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("Attribute" == ___local)&&("urn:oasis:names:tc:SAML:2.0:assertion" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 14;
                            return ;
                        }
                        state = 16;
                        continue outer;
                    case  1 :
                        if (("AttributeService" == ___local)&&("urn:oasis:names:tc:SAML:2.0:metadata" == ___uri)) {
                            _getAttributeService().add(((com.sun.identity.saml2.jaxb.metadata.impl.AttributeServiceElementImpl) spawnChildFromEnterElement((com.sun.identity.saml2.jaxb.metadata.impl.AttributeServiceElementImpl.class), 4, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("AttributeService" == ___local)&&("urn:oasis:names:tc:SAML:2.0:metadata" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 2;
                            return ;
                        }
                        break;
                    case  4 :
                        if (("AttributeService" == ___local)&&("urn:oasis:names:tc:SAML:2.0:metadata" == ___uri)) {
                            _getAttributeService().add(((com.sun.identity.saml2.jaxb.metadata.impl.AttributeServiceElementImpl) spawnChildFromEnterElement((com.sun.identity.saml2.jaxb.metadata.impl.AttributeServiceElementImpl.class), 4, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("AttributeService" == ___local)&&("urn:oasis:names:tc:SAML:2.0:metadata" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 2;
                            return ;
                        }
                        if (("AssertionIDRequestService" == ___local)&&("urn:oasis:names:tc:SAML:2.0:metadata" == ___uri)) {
                            _getAssertionIDRequestService().add(((com.sun.identity.saml2.jaxb.metadata.impl.AssertionIDRequestServiceElementImpl) spawnChildFromEnterElement((com.sun.identity.saml2.jaxb.metadata.impl.AssertionIDRequestServiceElementImpl.class), 7, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("AssertionIDRequestService" == ___local)&&("urn:oasis:names:tc:SAML:2.0:metadata" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 5;
                            return ;
                        }
                        state = 7;
                        continue outer;
                    case  2 :
                        attIdx = context.getAttribute("urn:oasis:names:tc:SAML:metadata:X509:query", "supportsX509Query");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        attIdx = context.getAttribute("urn:oasis:names:tc:SAML:metadata:X509:query", "supportsX509SelfQuery");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        attIdx = context.getAttribute("", "Binding");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        break;
                    case  16 :
                        if (("Attribute" == ___local)&&("urn:oasis:names:tc:SAML:2.0:assertion" == ___uri)) {
                            _getAttribute().add(((com.sun.identity.saml2.jaxb.assertion.impl.AttributeElementImpl) spawnChildFromEnterElement((com.sun.identity.saml2.jaxb.assertion.impl.AttributeElementImpl.class), 16, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("Attribute" == ___local)&&("urn:oasis:names:tc:SAML:2.0:assertion" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 14;
                            return ;
                        }
                        revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                        return ;
                }
                super.enterElement(___uri, ___local, ___qname, __atts);
                break;
            }
        }

        public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  6 :
                        if (("AssertionIDRequestService" == ___local)&&("urn:oasis:names:tc:SAML:2.0:metadata" == ___uri)) {
                            context.popAttributes();
                            state = 7;
                            return ;
                        }
                        break;
                    case  9 :
                        if (("NameIDFormat" == ___local)&&("urn:oasis:names:tc:SAML:2.0:metadata" == ___uri)) {
                            context.popAttributes();
                            state = 10;
                            return ;
                        }
                        break;
                    case  14 :
                        attIdx = context.getAttribute("", "FriendlyName");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "Name");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                    case  0 :
                        attIdx = context.getAttribute("", "ID");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "cacheDuration");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "errorURL");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "protocolSupportEnumeration");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                    case  7 :
                        state = 10;
                        continue outer;
                    case  10 :
                        state = 13;
                        continue outer;
                    case  5 :
                        attIdx = context.getAttribute("", "Binding");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                    case  13 :
                        state = 16;
                        continue outer;
                    case  12 :
                        if (("AttributeProfile" == ___local)&&("urn:oasis:names:tc:SAML:2.0:metadata" == ___uri)) {
                            context.popAttributes();
                            state = 13;
                            return ;
                        }
                        break;
                    case  15 :
                        if (("Attribute" == ___local)&&("urn:oasis:names:tc:SAML:2.0:assertion" == ___uri)) {
                            context.popAttributes();
                            state = 16;
                            return ;
                        }
                        break;
                    case  4 :
                        state = 7;
                        continue outer;
                    case  2 :
                        attIdx = context.getAttribute("urn:oasis:names:tc:SAML:metadata:X509:query", "supportsX509Query");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("urn:oasis:names:tc:SAML:metadata:X509:query", "supportsX509SelfQuery");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "Binding");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                    case  16 :
                        revertToParentFromLeaveElement(___uri, ___local, ___qname);
                        return ;
                    case  3 :
                        if (("AttributeService" == ___local)&&("urn:oasis:names:tc:SAML:2.0:metadata" == ___uri)) {
                            context.popAttributes();
                            state = 4;
                            return ;
                        }
                        break;
                }
                super.leaveElement(___uri, ___local, ___qname);
                break;
            }
        }

        public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  14 :
                        if (("FriendlyName" == ___local)&&("" == ___uri)) {
                            _getAttribute().add(((com.sun.identity.saml2.jaxb.assertion.impl.AttributeTypeImpl) spawnChildFromEnterAttribute((com.sun.identity.saml2.jaxb.assertion.impl.AttributeTypeImpl.class), 15, ___uri, ___local, ___qname)));
                            return ;
                        }
                        if (("Name" == ___local)&&("" == ___uri)) {
                            _getAttribute().add(((com.sun.identity.saml2.jaxb.assertion.impl.AttributeTypeImpl) spawnChildFromEnterAttribute((com.sun.identity.saml2.jaxb.assertion.impl.AttributeTypeImpl.class), 15, ___uri, ___local, ___qname)));
                            return ;
                        }
                        break;
                    case  0 :
                        if (("ID" == ___local)&&("" == ___uri)) {
                            spawnHandlerFromEnterAttribute((((com.sun.identity.saml2.jaxb.metadata.impl.RoleDescriptorTypeImpl)com.sun.identity.saml2.jaxb.metadata.impl.AttributeAuthorityDescriptorTypeImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname);
                            return ;
                        }
                        if (("cacheDuration" == ___local)&&("" == ___uri)) {
                            spawnHandlerFromEnterAttribute((((com.sun.identity.saml2.jaxb.metadata.impl.RoleDescriptorTypeImpl)com.sun.identity.saml2.jaxb.metadata.impl.AttributeAuthorityDescriptorTypeImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname);
                            return ;
                        }
                        if (("errorURL" == ___local)&&("" == ___uri)) {
                            spawnHandlerFromEnterAttribute((((com.sun.identity.saml2.jaxb.metadata.impl.RoleDescriptorTypeImpl)com.sun.identity.saml2.jaxb.metadata.impl.AttributeAuthorityDescriptorTypeImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname);
                            return ;
                        }
                        if (("protocolSupportEnumeration" == ___local)&&("" == ___uri)) {
                            spawnHandlerFromEnterAttribute((((com.sun.identity.saml2.jaxb.metadata.impl.RoleDescriptorTypeImpl)com.sun.identity.saml2.jaxb.metadata.impl.AttributeAuthorityDescriptorTypeImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                    case  7 :
                        state = 10;
                        continue outer;
                    case  10 :
                        state = 13;
                        continue outer;
                    case  5 :
                        if (("Binding" == ___local)&&("" == ___uri)) {
                            _getAssertionIDRequestService().add(((com.sun.identity.saml2.jaxb.metadata.impl.EndpointTypeImpl) spawnChildFromEnterAttribute((com.sun.identity.saml2.jaxb.metadata.impl.EndpointTypeImpl.class), 6, ___uri, ___local, ___qname)));
                            return ;
                        }
                        break;
                    case  13 :
                        state = 16;
                        continue outer;
                    case  4 :
                        state = 7;
                        continue outer;
                    case  2 :
                        if (("supportsX509Query" == ___local)&&("urn:oasis:names:tc:SAML:metadata:X509:query" == ___uri)) {
                            _getAttributeService().add(((com.sun.identity.saml2.jaxb.metadata.impl.AttributeServiceTypeImpl) spawnChildFromEnterAttribute((com.sun.identity.saml2.jaxb.metadata.impl.AttributeServiceTypeImpl.class), 3, ___uri, ___local, ___qname)));
                            return ;
                        }
                        if (("supportsX509SelfQuery" == ___local)&&("urn:oasis:names:tc:SAML:metadata:X509:query" == ___uri)) {
                            _getAttributeService().add(((com.sun.identity.saml2.jaxb.metadata.impl.AttributeServiceTypeImpl) spawnChildFromEnterAttribute((com.sun.identity.saml2.jaxb.metadata.impl.AttributeServiceTypeImpl.class), 3, ___uri, ___local, ___qname)));
                            return ;
                        }
                        if (("Binding" == ___local)&&("" == ___uri)) {
                            _getAttributeService().add(((com.sun.identity.saml2.jaxb.metadata.impl.AttributeServiceTypeImpl) spawnChildFromEnterAttribute((com.sun.identity.saml2.jaxb.metadata.impl.AttributeServiceTypeImpl.class), 3, ___uri, ___local, ___qname)));
                            return ;
                        }
                        break;
                    case  16 :
                        revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                        return ;
                }
                super.enterAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  14 :
                        attIdx = context.getAttribute("", "FriendlyName");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "Name");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                    case  0 :
                        attIdx = context.getAttribute("", "ID");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "cacheDuration");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "errorURL");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "protocolSupportEnumeration");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                    case  7 :
                        state = 10;
                        continue outer;
                    case  10 :
                        state = 13;
                        continue outer;
                    case  5 :
                        attIdx = context.getAttribute("", "Binding");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                    case  13 :
                        state = 16;
                        continue outer;
                    case  4 :
                        state = 7;
                        continue outer;
                    case  2 :
                        attIdx = context.getAttribute("urn:oasis:names:tc:SAML:metadata:X509:query", "supportsX509Query");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("urn:oasis:names:tc:SAML:metadata:X509:query", "supportsX509SelfQuery");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "Binding");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                    case  16 :
                        revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                        return ;
                }
                super.leaveAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void handleText(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                try {
                    switch (state) {
                        case  14 :
                            attIdx = context.getAttribute("", "FriendlyName");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            attIdx = context.getAttribute("", "Name");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            break;
                        case  0 :
                            attIdx = context.getAttribute("", "ID");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            attIdx = context.getAttribute("", "cacheDuration");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            attIdx = context.getAttribute("", "errorURL");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            attIdx = context.getAttribute("", "protocolSupportEnumeration");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            break;
                        case  7 :
                            state = 10;
                            continue outer;
                        case  10 :
                            state = 13;
                            continue outer;
                        case  5 :
                            attIdx = context.getAttribute("", "Binding");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            break;
                        case  13 :
                            state = 16;
                            continue outer;
                        case  4 :
                            state = 7;
                            continue outer;
                        case  2 :
                            attIdx = context.getAttribute("urn:oasis:names:tc:SAML:metadata:X509:query", "supportsX509Query");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            attIdx = context.getAttribute("urn:oasis:names:tc:SAML:metadata:X509:query", "supportsX509SelfQuery");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            attIdx = context.getAttribute("", "Binding");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            break;
                        case  11 :
                            state = 12;
                            eatText1(value);
                            return ;
                        case  16 :
                            revertToParentFromText(value);
                            return ;
                        case  8 :
                            state = 9;
                            eatText2(value);
                            return ;
                    }
                } catch (java.lang.RuntimeException e) {
                    handleUnexpectedTextException(value, e);
                }
                break;
            }
        }

        private void eatText1(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _getAttributeProfile().add(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText2(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _getNameIDFormat().add(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

    }

}
