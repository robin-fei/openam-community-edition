//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v1.0.6-b27-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2012.06.11 at 10:34:07 AM PDT 
//


package com.sun.identity.saml2.jaxb.metadata.impl;

public class AffiliationDescriptorTypeImpl implements com.sun.identity.saml2.jaxb.metadata.AffiliationDescriptorType, com.sun.xml.bind.JAXBObject, com.sun.identity.saml2.jaxb.assertion.impl.runtime.UnmarshallableObject, com.sun.identity.saml2.jaxb.assertion.impl.runtime.XMLSerializable, com.sun.xml.bind.marshaller.IdentifiableObject, com.sun.identity.saml2.jaxb.assertion.impl.runtime.ValidatableObject
{

    protected com.sun.identity.saml2.jaxb.metadata.ExtensionsType _Extensions;
    protected com.sun.xml.bind.util.ListImpl _KeyDescriptor;
    protected java.util.Calendar _ValidUntil;
    protected com.sun.xml.bind.util.ListImpl _AffiliateMember;
    protected java.lang.String _ID;
    protected java.lang.String _CacheDuration;
    protected java.lang.String _AffiliationOwnerID;
    protected com.sun.identity.saml2.jaxb.xmlsig.SignatureType _Signature;
    public final static java.lang.Class version = (com.sun.identity.saml2.jaxb.metadata.impl.JAXBVersion.class);
    private static com.sun.msv.grammar.Grammar schemaFragment;

    private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
        return (com.sun.identity.saml2.jaxb.metadata.AffiliationDescriptorType.class);
    }

    public com.sun.identity.saml2.jaxb.metadata.ExtensionsType getExtensions() {
        return _Extensions;
    }

    public void setExtensions(com.sun.identity.saml2.jaxb.metadata.ExtensionsType value) {
        _Extensions = value;
    }

    protected com.sun.xml.bind.util.ListImpl _getKeyDescriptor() {
        if (_KeyDescriptor == null) {
            _KeyDescriptor = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
        }
        return _KeyDescriptor;
    }

    public java.util.List getKeyDescriptor() {
        return _getKeyDescriptor();
    }

    public java.util.Calendar getValidUntil() {
        return _ValidUntil;
    }

    public void setValidUntil(java.util.Calendar value) {
        _ValidUntil = value;
    }

    protected com.sun.xml.bind.util.ListImpl _getAffiliateMember() {
        if (_AffiliateMember == null) {
            _AffiliateMember = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
        }
        return _AffiliateMember;
    }

    public java.util.List getAffiliateMember() {
        return _getAffiliateMember();
    }

    public java.lang.String getID() {
        return _ID;
    }

    public void setID(java.lang.String value) {
        _ID = value;
    }

    public java.lang.String getCacheDuration() {
        return _CacheDuration;
    }

    public void setCacheDuration(java.lang.String value) {
        _CacheDuration = value;
    }

    public java.lang.String getAffiliationOwnerID() {
        return _AffiliationOwnerID;
    }

    public void setAffiliationOwnerID(java.lang.String value) {
        _AffiliationOwnerID = value;
    }

    public com.sun.identity.saml2.jaxb.xmlsig.SignatureType getSignature() {
        return _Signature;
    }

    public void setSignature(com.sun.identity.saml2.jaxb.xmlsig.SignatureType value) {
        _Signature = value;
    }

    public com.sun.identity.saml2.jaxb.assertion.impl.runtime.UnmarshallingEventHandler createUnmarshaller(com.sun.identity.saml2.jaxb.assertion.impl.runtime.UnmarshallingContext context) {
        return new com.sun.identity.saml2.jaxb.metadata.impl.AffiliationDescriptorTypeImpl.Unmarshaller(context);
    }

    public void serializeBody(com.sun.identity.saml2.jaxb.assertion.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        int idx2 = 0;
        final int len2 = ((_KeyDescriptor == null)? 0 :_KeyDescriptor.size());
        int idx4 = 0;
        final int len4 = ((_AffiliateMember == null)? 0 :_AffiliateMember.size());
        if (_Signature!= null) {
            if (_Signature instanceof javax.xml.bind.Element) {
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _Signature), "Signature");
            } else {
                context.startElement("http://www.w3.org/2000/09/xmldsig#", "Signature");
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Signature), "Signature");
                context.endNamespaceDecls();
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Signature), "Signature");
                context.endAttributes();
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _Signature), "Signature");
                context.endElement();
            }
        }
        if (_Extensions!= null) {
            if (_Extensions instanceof javax.xml.bind.Element) {
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _Extensions), "Extensions");
            } else {
                context.startElement("urn:oasis:names:tc:SAML:2.0:metadata", "Extensions");
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Extensions), "Extensions");
                context.endNamespaceDecls();
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Extensions), "Extensions");
                context.endAttributes();
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _Extensions), "Extensions");
                context.endElement();
            }
        }
        while (idx4 != len4) {
            context.startElement("urn:oasis:names:tc:SAML:2.0:metadata", "AffiliateMember");
            int idx_4 = idx4;
            try {
                idx_4 += 1;
            } catch (java.lang.Exception e) {
                com.sun.identity.saml2.jaxb.assertion.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endNamespaceDecls();
            int idx_5 = idx4;
            try {
                idx_5 += 1;
            } catch (java.lang.Exception e) {
                com.sun.identity.saml2.jaxb.assertion.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttributes();
            try {
                context.text(((java.lang.String) _AffiliateMember.get(idx4 ++)), "AffiliateMember");
            } catch (java.lang.Exception e) {
                com.sun.identity.saml2.jaxb.assertion.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        while (idx2 != len2) {
            if (_KeyDescriptor.get(idx2) instanceof javax.xml.bind.Element) {
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _KeyDescriptor.get(idx2 ++)), "KeyDescriptor");
            } else {
                context.startElement("urn:oasis:names:tc:SAML:2.0:metadata", "KeyDescriptor");
                int idx_6 = idx2;
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _KeyDescriptor.get(idx_6 ++)), "KeyDescriptor");
                context.endNamespaceDecls();
                int idx_7 = idx2;
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _KeyDescriptor.get(idx_7 ++)), "KeyDescriptor");
                context.endAttributes();
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _KeyDescriptor.get(idx2 ++)), "KeyDescriptor");
                context.endElement();
            }
        }
    }

    public void serializeAttributes(com.sun.identity.saml2.jaxb.assertion.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        int idx2 = 0;
        final int len2 = ((_KeyDescriptor == null)? 0 :_KeyDescriptor.size());
        int idx4 = 0;
        final int len4 = ((_AffiliateMember == null)? 0 :_AffiliateMember.size());
        if (_ID!= null) {
            context.startAttribute("", "ID");
            try {
                context.text(context.onID(this, ((java.lang.String) _ID)), "ID");
            } catch (java.lang.Exception e) {
                com.sun.identity.saml2.jaxb.assertion.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
        }
        context.startAttribute("", "affiliationOwnerID");
        try {
            context.text(((java.lang.String) _AffiliationOwnerID), "AffiliationOwnerID");
        } catch (java.lang.Exception e) {
            com.sun.identity.saml2.jaxb.assertion.impl.runtime.Util.handlePrintConversionException(this, e, context);
        }
        context.endAttribute();
        if (_CacheDuration!= null) {
            context.startAttribute("", "cacheDuration");
            try {
                context.text(((java.lang.String) _CacheDuration), "CacheDuration");
            } catch (java.lang.Exception e) {
                com.sun.identity.saml2.jaxb.assertion.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
        }
        if (_ValidUntil!= null) {
            context.startAttribute("", "validUntil");
            try {
                context.text(com.sun.msv.datatype.xsd.DateTimeType.theInstance.serializeJavaObject(((java.util.Calendar) _ValidUntil), null), "ValidUntil");
            } catch (java.lang.Exception e) {
                com.sun.identity.saml2.jaxb.assertion.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
        }
        if (_Signature!= null) {
            if (_Signature instanceof javax.xml.bind.Element) {
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Signature), "Signature");
            }
        }
        if (_Extensions!= null) {
            if (_Extensions instanceof javax.xml.bind.Element) {
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Extensions), "Extensions");
            }
        }
        while (idx4 != len4) {
            try {
                idx4 += 1;
            } catch (java.lang.Exception e) {
                com.sun.identity.saml2.jaxb.assertion.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
        }
        while (idx2 != len2) {
            if (_KeyDescriptor.get(idx2) instanceof javax.xml.bind.Element) {
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _KeyDescriptor.get(idx2 ++)), "KeyDescriptor");
            } else {
                idx2 += 1;
            }
        }
    }

    public void serializeURIs(com.sun.identity.saml2.jaxb.assertion.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        int idx2 = 0;
        final int len2 = ((_KeyDescriptor == null)? 0 :_KeyDescriptor.size());
        int idx4 = 0;
        final int len4 = ((_AffiliateMember == null)? 0 :_AffiliateMember.size());
        if (_Signature!= null) {
            if (_Signature instanceof javax.xml.bind.Element) {
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Signature), "Signature");
            }
        }
        if (_Extensions!= null) {
            if (_Extensions instanceof javax.xml.bind.Element) {
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Extensions), "Extensions");
            }
        }
        while (idx4 != len4) {
            try {
                idx4 += 1;
            } catch (java.lang.Exception e) {
                com.sun.identity.saml2.jaxb.assertion.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
        }
        while (idx2 != len2) {
            if (_KeyDescriptor.get(idx2) instanceof javax.xml.bind.Element) {
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _KeyDescriptor.get(idx2 ++)), "KeyDescriptor");
            } else {
                idx2 += 1;
            }
        }
    }

    public java.lang.String ____jaxb____getId() {
        return ((java.lang.String) _ID);
    }

    public java.lang.Class getPrimaryInterface() {
        return (com.sun.identity.saml2.jaxb.metadata.AffiliationDescriptorType.class);
    }

    public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
        if (schemaFragment == null) {
            schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.su"
+"n.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gra"
+"mmar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expressi"
+"on\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0002L\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000b"
+"expandedExpq\u0000~\u0000\u0002xpppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000pp"
+"sq\u0000~\u0000\u0000ppsr\u0000\u001dcom.sun.msv.grammar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0001pp"
+"sq\u0000~\u0000\fsr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000psr\u0000\'com.su"
+"n.msv.grammar.trex.ElementPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\tnameClasst\u0000\u001fL"
+"com/sun/msv/grammar/NameClass;xr\u0000\u001ecom.sun.msv.grammar.Elemen"
+"tExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAttributesL\u0000\fcontentModelq"
+"\u0000~\u0000\u0002xq\u0000~\u0000\u0003q\u0000~\u0000\u0010p\u0000sq\u0000~\u0000\fppsr\u0000 com.sun.msv.grammar.OneOrMoreEx"
+"p\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001ccom.sun.msv.grammar.UnaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0003ex"
+"pq\u0000~\u0000\u0002xq\u0000~\u0000\u0003q\u0000~\u0000\u0010psr\u0000 com.sun.msv.grammar.AttributeExp\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnameClassq\u0000~\u0000\u0012xq\u0000~\u0000\u0003q\u0000~\u0000\u0010psr\u00002com.sun.msv"
+".grammar.Expression$AnyStringExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003sq\u0000~"
+"\u0000\u000f\u0001q\u0000~\u0000\u001csr\u0000 com.sun.msv.grammar.AnyNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dc"
+"om.sun.msv.grammar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.sun.msv.gra"
+"mmar.Expression$EpsilonExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003q\u0000~\u0000\u001dq\u0000~\u0000\""
+"sr\u0000#com.sun.msv.grammar.SimpleNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNa"
+"met\u0000\u0012Ljava/lang/String;L\u0000\fnamespaceURIq\u0000~\u0000$xq\u0000~\u0000\u001ft\u00003com.sun."
+"identity.saml2.jaxb.xmlsig.SignatureElementt\u0000+http://java.su"
+"n.com/jaxb/xjc/dummy-elementssq\u0000~\u0000\u0011q\u0000~\u0000\u0010p\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0011pp\u0000s"
+"q\u0000~\u0000\fppsq\u0000~\u0000\u0016q\u0000~\u0000\u0010psq\u0000~\u0000\u0019q\u0000~\u0000\u0010pq\u0000~\u0000\u001cq\u0000~\u0000 q\u0000~\u0000\"sq\u0000~\u0000#t\u00000com.s"
+"un.identity.saml2.jaxb.xmlsig.SignatureTypeq\u0000~\u0000\'sq\u0000~\u0000\fppsq\u0000~"
+"\u0000\u0019q\u0000~\u0000\u0010psr\u0000\u001bcom.sun.msv.grammar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLo"
+"rg/relaxng/datatype/Datatype;L\u0000\u0006exceptq\u0000~\u0000\u0002L\u0000\u0004namet\u0000\u001dLcom/su"
+"n/msv/util/StringPair;xq\u0000~\u0000\u0003ppsr\u0000\"com.sun.msv.datatype.xsd.Q"
+"nameType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000*com.sun.msv.datatype.xsd.BuiltinAtomi"
+"cType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.datatype.xsd.ConcreteType\u0000\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com.sun.msv.datatype.xsd.XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002"
+"\u0000\u0003L\u0000\fnamespaceUriq\u0000~\u0000$L\u0000\btypeNameq\u0000~\u0000$L\u0000\nwhiteSpacet\u0000.Lcom/s"
+"un/msv/datatype/xsd/WhiteSpaceProcessor;xpt\u0000 http://www.w3.o"
+"rg/2001/XMLSchemat\u0000\u0005QNamesr\u00005com.sun.msv.datatype.xsd.WhiteS"
+"paceProcessor$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun.msv.datatype.xs"
+"d.WhiteSpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.sun.msv.grammar.Ex"
+"pression$NullSetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003q\u0000~\u0000\u0010psr\u0000\u001bcom.sun"
+".msv.util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000$L\u0000\fnamespace"
+"URIq\u0000~\u0000$xpq\u0000~\u0000=q\u0000~\u0000<sq\u0000~\u0000#t\u0000\u0004typet\u0000)http://www.w3.org/2001/X"
+"MLSchema-instanceq\u0000~\u0000\"sq\u0000~\u0000#t\u0000\tSignaturet\u0000\"http://www.w3.org"
+"/2000/09/xmldsig#q\u0000~\u0000\"sq\u0000~\u0000\fppsq\u0000~\u0000\fq\u0000~\u0000\u0010psq\u0000~\u0000\u0011q\u0000~\u0000\u0010p\u0000sq\u0000~\u0000"
+"\fppsq\u0000~\u0000\u0016q\u0000~\u0000\u0010psq\u0000~\u0000\u0019q\u0000~\u0000\u0010pq\u0000~\u0000\u001cq\u0000~\u0000 q\u0000~\u0000\"sq\u0000~\u0000#t\u00006com.sun.i"
+"dentity.saml2.jaxb.metadata.ExtensionsElementq\u0000~\u0000\'sq\u0000~\u0000\u0011q\u0000~\u0000"
+"\u0010p\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0011pp\u0000sq\u0000~\u0000\fppsq\u0000~\u0000\u0016q\u0000~\u0000\u0010psq\u0000~\u0000\u0019q\u0000~\u0000\u0010pq\u0000~\u0000\u001cq\u0000~"
+"\u0000 q\u0000~\u0000\"sq\u0000~\u0000#t\u00003com.sun.identity.saml2.jaxb.metadata.Extensi"
+"onsTypeq\u0000~\u0000\'sq\u0000~\u0000\fppsq\u0000~\u0000\u0019q\u0000~\u0000\u0010pq\u0000~\u00005q\u0000~\u0000Eq\u0000~\u0000\"sq\u0000~\u0000#t\u0000\nExte"
+"nsionst\u0000$urn:oasis:names:tc:SAML:2.0:metadataq\u0000~\u0000\"sq\u0000~\u0000\u0016ppsq"
+"\u0000~\u0000\u0011pp\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u00002ppsr\u0000\'com.sun.msv.datatype.xsd.MaxLengt"
+"hFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001I\u0000\tmaxLengthxr\u00009com.sun.msv.datatype.xsd.Da"
+"taTypeWithValueConstraintFacet\"\u00a7Ro\u00ca\u00c7\u008aT\u0002\u0000\u0000xr\u0000*com.sun.msv.dat"
+"atype.xsd.DataTypeWithFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0005Z\u0000\fisFacetFixedZ\u0000\u0012need"
+"ValueCheckFlagL\u0000\bbaseTypet\u0000)Lcom/sun/msv/datatype/xsd/XSData"
+"typeImpl;L\u0000\fconcreteTypet\u0000\'Lcom/sun/msv/datatype/xsd/Concret"
+"eType;L\u0000\tfacetNameq\u0000~\u0000$xq\u0000~\u00009q\u0000~\u0000_t\u0000\fentityIDTypeq\u0000~\u0000@\u0000\u0000sr\u0000#"
+"com.sun.msv.datatype.xsd.AnyURIType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u00007q\u0000~\u0000<t\u0000\u0006"
+"anyURIq\u0000~\u0000@q\u0000~\u0000lt\u0000\tmaxLength\u0000\u0000\u0004\u0000q\u0000~\u0000Bsq\u0000~\u0000Cq\u0000~\u0000jq\u0000~\u0000_sq\u0000~\u0000\fp"
+"psq\u0000~\u0000\u0019q\u0000~\u0000\u0010pq\u0000~\u00005q\u0000~\u0000Eq\u0000~\u0000\"sq\u0000~\u0000#t\u0000\u000fAffiliateMemberq\u0000~\u0000_sq\u0000"
+"~\u0000\fppsq\u0000~\u0000\u0016q\u0000~\u0000\u0010psq\u0000~\u0000\fq\u0000~\u0000\u0010psq\u0000~\u0000\u0011q\u0000~\u0000\u0010p\u0000sq\u0000~\u0000\fppsq\u0000~\u0000\u0016q\u0000~\u0000"
+"\u0010psq\u0000~\u0000\u0019q\u0000~\u0000\u0010pq\u0000~\u0000\u001cq\u0000~\u0000 q\u0000~\u0000\"sq\u0000~\u0000#t\u00009com.sun.identity.saml2"
+".jaxb.metadata.KeyDescriptorElementq\u0000~\u0000\'sq\u0000~\u0000\u0011q\u0000~\u0000\u0010p\u0000sq\u0000~\u0000\u0000p"
+"psq\u0000~\u0000\u0011pp\u0000sq\u0000~\u0000\fppsq\u0000~\u0000\u0016q\u0000~\u0000\u0010psq\u0000~\u0000\u0019q\u0000~\u0000\u0010pq\u0000~\u0000\u001cq\u0000~\u0000 q\u0000~\u0000\"sq\u0000"
+"~\u0000#t\u00006com.sun.identity.saml2.jaxb.metadata.KeyDescriptorType"
+"q\u0000~\u0000\'sq\u0000~\u0000\fppsq\u0000~\u0000\u0019q\u0000~\u0000\u0010pq\u0000~\u00005q\u0000~\u0000Eq\u0000~\u0000\"sq\u0000~\u0000#t\u0000\rKeyDescript"
+"orq\u0000~\u0000_q\u0000~\u0000\"sq\u0000~\u0000\fppsq\u0000~\u0000\u0019q\u0000~\u0000\u0010psq\u0000~\u00002ppsr\u0000\u001fcom.sun.msv.data"
+"type.xsd.IDType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000#com.sun.msv.datatype.xsd.Ncnam"
+"eType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\"com.sun.msv.datatype.xsd.TokenType\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0000\u0001\u0002\u0000\u0000xr\u0000#com.sun.msv.datatype.xsd.StringType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001Z\u0000\ris"
+"AlwaysValidxq\u0000~\u00007q\u0000~\u0000<t\u0000\u0002IDq\u0000~\u0000@\u0000q\u0000~\u0000Bsq\u0000~\u0000Cq\u0000~\u0000\u0091q\u0000~\u0000<sq\u0000~\u0000#"
+"t\u0000\u0002IDt\u0000\u0000q\u0000~\u0000\"sq\u0000~\u0000\u0019ppq\u0000~\u0000csq\u0000~\u0000#t\u0000\u0012affiliationOwnerIDq\u0000~\u0000\u0095sq"
+"\u0000~\u0000\fppsq\u0000~\u0000\u0019q\u0000~\u0000\u0010psq\u0000~\u00002ppsr\u0000%com.sun.msv.datatype.xsd.Durat"
+"ionType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u00007q\u0000~\u0000<t\u0000\bdurationq\u0000~\u0000@q\u0000~\u0000Bsq\u0000~\u0000Cq\u0000~\u0000"
+"\u009eq\u0000~\u0000<sq\u0000~\u0000#t\u0000\rcacheDurationq\u0000~\u0000\u0095q\u0000~\u0000\"sq\u0000~\u0000\fppsq\u0000~\u0000\u0019q\u0000~\u0000\u0010psq"
+"\u0000~\u00002ppsr\u0000%com.sun.msv.datatype.xsd.DateTimeType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr"
+"\u0000)com.sun.msv.datatype.xsd.DateTimeBaseType\u0014W\u001a@3\u00a5\u00b4\u00e5\u0002\u0000\u0000xq\u0000~\u00007"
+"q\u0000~\u0000<t\u0000\bdateTimeq\u0000~\u0000@q\u0000~\u0000Bsq\u0000~\u0000Cq\u0000~\u0000\u00a8q\u0000~\u0000<sq\u0000~\u0000#t\u0000\nvalidUnti"
+"lq\u0000~\u0000\u0095q\u0000~\u0000\"sr\u0000\"com.sun.msv.grammar.ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001"
+"L\u0000\bexpTablet\u0000/Lcom/sun/msv/grammar/ExpressionPool$ClosedHash"
+";xpsr\u0000-com.sun.msv.grammar.ExpressionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c"
+"\u0003\u0000\u0003I\u0000\u0005countB\u0000\rstreamVersionL\u0000\u0006parentt\u0000$Lcom/sun/msv/grammar/"
+"ExpressionPool;xp\u0000\u0000\u0000&\u0001pq\u0000~\u0000\u0006q\u0000~\u0000\u00a2q\u0000~\u0000\u0015q\u0000~\u0000+q\u0000~\u0000Nq\u0000~\u0000Vq\u0000~\u0000xq\u0000"
+"~\u0000\u0080q\u0000~\u0000uq\u0000~\u0000\u0089q\u0000~\u0000\u0005q\u0000~\u0000`q\u0000~\u0000)q\u0000~\u0000Tq\u0000~\u0000~q\u0000~\u0000bq\u0000~\u0000tq\u0000~\u0000\u0018q\u0000~\u0000,q\u0000"
+"~\u0000Oq\u0000~\u0000Wq\u0000~\u0000yq\u0000~\u0000\u0081q\u0000~\u0000\u000bq\u0000~\u0000\u0099q\u0000~\u0000\rq\u0000~\u0000Kq\u0000~\u0000\u0007q\u0000~\u0000\bq\u0000~\u0000\tq\u0000~\u00000q\u0000"
+"~\u0000[q\u0000~\u0000pq\u0000~\u0000\u0085q\u0000~\u0000\u000eq\u0000~\u0000Lq\u0000~\u0000vq\u0000~\u0000\nx"));
        }
        return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
    }

    public class Unmarshaller
        extends com.sun.identity.saml2.jaxb.assertion.impl.runtime.AbstractUnmarshallingEventHandlerImpl
    {


        public Unmarshaller(com.sun.identity.saml2.jaxb.assertion.impl.runtime.UnmarshallingContext context) {
            super(context, "-------------------------");
        }

        protected Unmarshaller(com.sun.identity.saml2.jaxb.assertion.impl.runtime.UnmarshallingContext context, int startState) {
            this(context);
            state = startState;
        }

        public java.lang.Object owner() {
            return com.sun.identity.saml2.jaxb.metadata.impl.AffiliationDescriptorTypeImpl.this;
        }

        public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  9 :
                        attIdx = context.getAttribute("", "validUntil");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 12;
                            eatText1(v);
                            continue outer;
                        }
                        state = 12;
                        continue outer;
                    case  13 :
                        if (("Extensions" == ___local)&&("urn:oasis:names:tc:SAML:2.0:metadata" == ___uri)) {
                            _Extensions = ((com.sun.identity.saml2.jaxb.metadata.impl.ExtensionsElementImpl) spawnChildFromEnterElement((com.sun.identity.saml2.jaxb.metadata.impl.ExtensionsElementImpl.class), 16, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("Extensions" == ___local)&&("urn:oasis:names:tc:SAML:2.0:metadata" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 14;
                            return ;
                        }
                        state = 16;
                        continue outer;
                    case  6 :
                        attIdx = context.getAttribute("", "cacheDuration");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 9;
                            eatText2(v);
                            continue outer;
                        }
                        state = 9;
                        continue outer;
                    case  19 :
                        if (("AffiliateMember" == ___local)&&("urn:oasis:names:tc:SAML:2.0:metadata" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 17;
                            return ;
                        }
                        if (("KeyDescriptor" == ___local)&&("urn:oasis:names:tc:SAML:2.0:metadata" == ___uri)) {
                            _getKeyDescriptor().add(((com.sun.identity.saml2.jaxb.metadata.impl.KeyDescriptorElementImpl) spawnChildFromEnterElement((com.sun.identity.saml2.jaxb.metadata.impl.KeyDescriptorElementImpl.class), 22, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("KeyDescriptor" == ___local)&&("urn:oasis:names:tc:SAML:2.0:metadata" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 20;
                            return ;
                        }
                        state = 22;
                        continue outer;
                    case  12 :
                        if (("Signature" == ___local)&&("http://www.w3.org/2000/09/xmldsig#" == ___uri)) {
                            _Signature = ((com.sun.identity.saml2.jaxb.xmlsig.impl.SignatureElementImpl) spawnChildFromEnterElement((com.sun.identity.saml2.jaxb.xmlsig.impl.SignatureElementImpl.class), 13, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("Signature" == ___local)&&("http://www.w3.org/2000/09/xmldsig#" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 23;
                            return ;
                        }
                        state = 13;
                        continue outer;
                    case  23 :
                        attIdx = context.getAttribute("", "Id");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("SignedInfo" == ___local)&&("http://www.w3.org/2000/09/xmldsig#" == ___uri)) {
                            _Signature = ((com.sun.identity.saml2.jaxb.xmlsig.impl.SignatureTypeImpl) spawnChildFromEnterElement((com.sun.identity.saml2.jaxb.xmlsig.impl.SignatureTypeImpl.class), 24, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("SignedInfo" == ___local)&&("http://www.w3.org/2000/09/xmldsig#" == ___uri)) {
                            _Signature = ((com.sun.identity.saml2.jaxb.xmlsig.impl.SignatureTypeImpl) spawnChildFromEnterElement((com.sun.identity.saml2.jaxb.xmlsig.impl.SignatureTypeImpl.class), 24, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        break;
                    case  14 :
                        if (!(("" == ___uri)||("urn:oasis:names:tc:SAML:2.0:metadata" == ___uri))) {
                            _Extensions = ((com.sun.identity.saml2.jaxb.metadata.impl.ExtensionsTypeImpl) spawnChildFromEnterElement((com.sun.identity.saml2.jaxb.metadata.impl.ExtensionsTypeImpl.class), 15, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        break;
                    case  3 :
                        attIdx = context.getAttribute("", "affiliationOwnerID");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 6;
                            eatText3(v);
                            continue outer;
                        }
                        break;
                    case  16 :
                        if (("AffiliateMember" == ___local)&&("urn:oasis:names:tc:SAML:2.0:metadata" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 17;
                            return ;
                        }
                        break;
                    case  0 :
                        attIdx = context.getAttribute("", "ID");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 3;
                            eatText4(v);
                            continue outer;
                        }
                        state = 3;
                        continue outer;
                    case  20 :
                        attIdx = context.getAttribute("", "use");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("KeyInfo" == ___local)&&("http://www.w3.org/2000/09/xmldsig#" == ___uri)) {
                            _getKeyDescriptor().add(((com.sun.identity.saml2.jaxb.metadata.impl.KeyDescriptorTypeImpl) spawnChildFromEnterElement((com.sun.identity.saml2.jaxb.metadata.impl.KeyDescriptorTypeImpl.class), 21, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("KeyInfo" == ___local)&&("http://www.w3.org/2000/09/xmldsig#" == ___uri)) {
                            _getKeyDescriptor().add(((com.sun.identity.saml2.jaxb.metadata.impl.KeyDescriptorTypeImpl) spawnChildFromEnterElement((com.sun.identity.saml2.jaxb.metadata.impl.KeyDescriptorTypeImpl.class), 21, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        break;
                    case  22 :
                        if (("KeyDescriptor" == ___local)&&("urn:oasis:names:tc:SAML:2.0:metadata" == ___uri)) {
                            _getKeyDescriptor().add(((com.sun.identity.saml2.jaxb.metadata.impl.KeyDescriptorElementImpl) spawnChildFromEnterElement((com.sun.identity.saml2.jaxb.metadata.impl.KeyDescriptorElementImpl.class), 22, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("KeyDescriptor" == ___local)&&("urn:oasis:names:tc:SAML:2.0:metadata" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 20;
                            return ;
                        }
                        revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                        return ;
                }
                super.enterElement(___uri, ___local, ___qname, __atts);
                break;
            }
        }

        private void eatText1(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _ValidUntil = ((java.util.Calendar) com.sun.msv.datatype.xsd.DateTimeType.theInstance.createJavaObject(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value), null));
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText2(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _CacheDuration = com.sun.xml.bind.WhiteSpaceProcessor.collapse(value);
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText3(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _AffiliationOwnerID = com.sun.xml.bind.WhiteSpaceProcessor.collapse(value);
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText4(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _ID = context.addToIdTable(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  9 :
                        attIdx = context.getAttribute("", "validUntil");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 12;
                            eatText1(v);
                            continue outer;
                        }
                        state = 12;
                        continue outer;
                    case  24 :
                        if (("Signature" == ___local)&&("http://www.w3.org/2000/09/xmldsig#" == ___uri)) {
                            context.popAttributes();
                            state = 13;
                            return ;
                        }
                        break;
                    case  13 :
                        state = 16;
                        continue outer;
                    case  15 :
                        if (("Extensions" == ___local)&&("urn:oasis:names:tc:SAML:2.0:metadata" == ___uri)) {
                            context.popAttributes();
                            state = 16;
                            return ;
                        }
                        break;
                    case  6 :
                        attIdx = context.getAttribute("", "cacheDuration");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 9;
                            eatText2(v);
                            continue outer;
                        }
                        state = 9;
                        continue outer;
                    case  19 :
                        state = 22;
                        continue outer;
                    case  12 :
                        state = 13;
                        continue outer;
                    case  21 :
                        if (("KeyDescriptor" == ___local)&&("urn:oasis:names:tc:SAML:2.0:metadata" == ___uri)) {
                            context.popAttributes();
                            state = 22;
                            return ;
                        }
                        break;
                    case  23 :
                        attIdx = context.getAttribute("", "Id");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                    case  3 :
                        attIdx = context.getAttribute("", "affiliationOwnerID");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 6;
                            eatText3(v);
                            continue outer;
                        }
                        break;
                    case  18 :
                        if (("AffiliateMember" == ___local)&&("urn:oasis:names:tc:SAML:2.0:metadata" == ___uri)) {
                            context.popAttributes();
                            state = 19;
                            return ;
                        }
                        break;
                    case  0 :
                        attIdx = context.getAttribute("", "ID");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 3;
                            eatText4(v);
                            continue outer;
                        }
                        state = 3;
                        continue outer;
                    case  20 :
                        attIdx = context.getAttribute("", "use");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                    case  22 :
                        revertToParentFromLeaveElement(___uri, ___local, ___qname);
                        return ;
                }
                super.leaveElement(___uri, ___local, ___qname);
                break;
            }
        }

        public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  9 :
                        if (("validUntil" == ___local)&&("" == ___uri)) {
                            state = 10;
                            return ;
                        }
                        state = 12;
                        continue outer;
                    case  13 :
                        state = 16;
                        continue outer;
                    case  6 :
                        if (("cacheDuration" == ___local)&&("" == ___uri)) {
                            state = 7;
                            return ;
                        }
                        state = 9;
                        continue outer;
                    case  19 :
                        state = 22;
                        continue outer;
                    case  12 :
                        state = 13;
                        continue outer;
                    case  23 :
                        if (("Id" == ___local)&&("" == ___uri)) {
                            _Signature = ((com.sun.identity.saml2.jaxb.xmlsig.impl.SignatureTypeImpl) spawnChildFromEnterAttribute((com.sun.identity.saml2.jaxb.xmlsig.impl.SignatureTypeImpl.class), 24, ___uri, ___local, ___qname));
                            return ;
                        }
                        break;
                    case  3 :
                        if (("affiliationOwnerID" == ___local)&&("" == ___uri)) {
                            state = 4;
                            return ;
                        }
                        break;
                    case  0 :
                        if (("ID" == ___local)&&("" == ___uri)) {
                            state = 1;
                            return ;
                        }
                        state = 3;
                        continue outer;
                    case  20 :
                        if (("use" == ___local)&&("" == ___uri)) {
                            _getKeyDescriptor().add(((com.sun.identity.saml2.jaxb.metadata.impl.KeyDescriptorTypeImpl) spawnChildFromEnterAttribute((com.sun.identity.saml2.jaxb.metadata.impl.KeyDescriptorTypeImpl.class), 21, ___uri, ___local, ___qname)));
                            return ;
                        }
                        break;
                    case  22 :
                        revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                        return ;
                }
                super.enterAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  9 :
                        attIdx = context.getAttribute("", "validUntil");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 12;
                            eatText1(v);
                            continue outer;
                        }
                        state = 12;
                        continue outer;
                    case  13 :
                        state = 16;
                        continue outer;
                    case  6 :
                        attIdx = context.getAttribute("", "cacheDuration");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 9;
                            eatText2(v);
                            continue outer;
                        }
                        state = 9;
                        continue outer;
                    case  19 :
                        state = 22;
                        continue outer;
                    case  12 :
                        state = 13;
                        continue outer;
                    case  8 :
                        if (("cacheDuration" == ___local)&&("" == ___uri)) {
                            state = 9;
                            return ;
                        }
                        break;
                    case  23 :
                        attIdx = context.getAttribute("", "Id");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                    case  11 :
                        if (("validUntil" == ___local)&&("" == ___uri)) {
                            state = 12;
                            return ;
                        }
                        break;
                    case  3 :
                        attIdx = context.getAttribute("", "affiliationOwnerID");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 6;
                            eatText3(v);
                            continue outer;
                        }
                        break;
                    case  2 :
                        if (("ID" == ___local)&&("" == ___uri)) {
                            state = 3;
                            return ;
                        }
                        break;
                    case  5 :
                        if (("affiliationOwnerID" == ___local)&&("" == ___uri)) {
                            state = 6;
                            return ;
                        }
                        break;
                    case  0 :
                        attIdx = context.getAttribute("", "ID");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 3;
                            eatText4(v);
                            continue outer;
                        }
                        state = 3;
                        continue outer;
                    case  20 :
                        attIdx = context.getAttribute("", "use");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                    case  22 :
                        revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                        return ;
                }
                super.leaveAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void handleText(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                try {
                    switch (state) {
                        case  9 :
                            attIdx = context.getAttribute("", "validUntil");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 12;
                                eatText1(v);
                                continue outer;
                            }
                            state = 12;
                            continue outer;
                        case  13 :
                            state = 16;
                            continue outer;
                        case  6 :
                            attIdx = context.getAttribute("", "cacheDuration");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 9;
                                eatText2(v);
                                continue outer;
                            }
                            state = 9;
                            continue outer;
                        case  19 :
                            state = 22;
                            continue outer;
                        case  12 :
                            state = 13;
                            continue outer;
                        case  17 :
                            state = 18;
                            eatText5(value);
                            return ;
                        case  23 :
                            attIdx = context.getAttribute("", "Id");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            break;
                        case  4 :
                            state = 5;
                            eatText3(value);
                            return ;
                        case  10 :
                            state = 11;
                            eatText1(value);
                            return ;
                        case  1 :
                            state = 2;
                            eatText4(value);
                            return ;
                        case  3 :
                            attIdx = context.getAttribute("", "affiliationOwnerID");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 6;
                                eatText3(v);
                                continue outer;
                            }
                            break;
                        case  0 :
                            attIdx = context.getAttribute("", "ID");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 3;
                                eatText4(v);
                                continue outer;
                            }
                            state = 3;
                            continue outer;
                        case  20 :
                            attIdx = context.getAttribute("", "use");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            break;
                        case  22 :
                            revertToParentFromText(value);
                            return ;
                        case  7 :
                            state = 8;
                            eatText2(value);
                            return ;
                    }
                } catch (java.lang.RuntimeException e) {
                    handleUnexpectedTextException(value, e);
                }
                break;
            }
        }

        private void eatText5(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _getAffiliateMember().add(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

    }

}
