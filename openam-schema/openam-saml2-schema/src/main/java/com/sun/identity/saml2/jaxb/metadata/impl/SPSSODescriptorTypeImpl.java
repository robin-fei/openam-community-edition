//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v1.0.6-b27-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2012.06.11 at 10:34:07 AM PDT 
//


package com.sun.identity.saml2.jaxb.metadata.impl;

public class SPSSODescriptorTypeImpl
    extends com.sun.identity.saml2.jaxb.metadata.impl.SSODescriptorTypeImpl
    implements com.sun.identity.saml2.jaxb.metadata.SPSSODescriptorType, com.sun.xml.bind.JAXBObject, com.sun.identity.saml2.jaxb.assertion.impl.runtime.UnmarshallableObject, com.sun.identity.saml2.jaxb.assertion.impl.runtime.XMLSerializable, com.sun.identity.saml2.jaxb.assertion.impl.runtime.ValidatableObject
{

    protected boolean has_AuthnRequestsSigned;
    protected boolean _AuthnRequestsSigned;
    protected com.sun.xml.bind.util.ListImpl _AssertionConsumerService;
    protected com.sun.xml.bind.util.ListImpl _AttributeConsumingService;
    protected boolean has_WantAssertionsSigned;
    protected boolean _WantAssertionsSigned;
    public final static java.lang.Class version = (com.sun.identity.saml2.jaxb.metadata.impl.JAXBVersion.class);
    private static com.sun.msv.grammar.Grammar schemaFragment;

    private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
        return (com.sun.identity.saml2.jaxb.metadata.SPSSODescriptorType.class);
    }

    public boolean isAuthnRequestsSigned() {
        return _AuthnRequestsSigned;
    }

    public void setAuthnRequestsSigned(boolean value) {
        _AuthnRequestsSigned = value;
        has_AuthnRequestsSigned = true;
    }

    protected com.sun.xml.bind.util.ListImpl _getAssertionConsumerService() {
        if (_AssertionConsumerService == null) {
            _AssertionConsumerService = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
        }
        return _AssertionConsumerService;
    }

    public java.util.List getAssertionConsumerService() {
        return _getAssertionConsumerService();
    }

    protected com.sun.xml.bind.util.ListImpl _getAttributeConsumingService() {
        if (_AttributeConsumingService == null) {
            _AttributeConsumingService = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
        }
        return _AttributeConsumingService;
    }

    public java.util.List getAttributeConsumingService() {
        return _getAttributeConsumingService();
    }

    public boolean isWantAssertionsSigned() {
        return _WantAssertionsSigned;
    }

    public void setWantAssertionsSigned(boolean value) {
        _WantAssertionsSigned = value;
        has_WantAssertionsSigned = true;
    }

    public com.sun.identity.saml2.jaxb.assertion.impl.runtime.UnmarshallingEventHandler createUnmarshaller(com.sun.identity.saml2.jaxb.assertion.impl.runtime.UnmarshallingContext context) {
        return new com.sun.identity.saml2.jaxb.metadata.impl.SPSSODescriptorTypeImpl.Unmarshaller(context);
    }

    public void serializeBody(com.sun.identity.saml2.jaxb.assertion.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        int idx2 = 0;
        final int len2 = ((_AssertionConsumerService == null)? 0 :_AssertionConsumerService.size());
        int idx3 = 0;
        final int len3 = ((_AttributeConsumingService == null)? 0 :_AttributeConsumingService.size());
        super.serializeBody(context);
        while (idx2 != len2) {
            if (_AssertionConsumerService.get(idx2) instanceof javax.xml.bind.Element) {
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _AssertionConsumerService.get(idx2 ++)), "AssertionConsumerService");
            } else {
                context.startElement("urn:oasis:names:tc:SAML:2.0:metadata", "AssertionConsumerService");
                int idx_0 = idx2;
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _AssertionConsumerService.get(idx_0 ++)), "AssertionConsumerService");
                context.endNamespaceDecls();
                int idx_1 = idx2;
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _AssertionConsumerService.get(idx_1 ++)), "AssertionConsumerService");
                context.endAttributes();
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _AssertionConsumerService.get(idx2 ++)), "AssertionConsumerService");
                context.endElement();
            }
        }
        while (idx3 != len3) {
            if (_AttributeConsumingService.get(idx3) instanceof javax.xml.bind.Element) {
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _AttributeConsumingService.get(idx3 ++)), "AttributeConsumingService");
            } else {
                context.startElement("urn:oasis:names:tc:SAML:2.0:metadata", "AttributeConsumingService");
                int idx_2 = idx3;
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _AttributeConsumingService.get(idx_2 ++)), "AttributeConsumingService");
                context.endNamespaceDecls();
                int idx_3 = idx3;
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _AttributeConsumingService.get(idx_3 ++)), "AttributeConsumingService");
                context.endAttributes();
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _AttributeConsumingService.get(idx3 ++)), "AttributeConsumingService");
                context.endElement();
            }
        }
    }

    public void serializeAttributes(com.sun.identity.saml2.jaxb.assertion.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        int idx2 = 0;
        final int len2 = ((_AssertionConsumerService == null)? 0 :_AssertionConsumerService.size());
        int idx3 = 0;
        final int len3 = ((_AttributeConsumingService == null)? 0 :_AttributeConsumingService.size());
        if (has_AuthnRequestsSigned) {
            context.startAttribute("", "AuthnRequestsSigned");
            try {
                context.text(javax.xml.bind.DatatypeConverter.printBoolean(((boolean) _AuthnRequestsSigned)), "AuthnRequestsSigned");
            } catch (java.lang.Exception e) {
                com.sun.identity.saml2.jaxb.assertion.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
        }
        if (has_WantAssertionsSigned) {
            context.startAttribute("", "WantAssertionsSigned");
            try {
                context.text(javax.xml.bind.DatatypeConverter.printBoolean(((boolean) _WantAssertionsSigned)), "WantAssertionsSigned");
            } catch (java.lang.Exception e) {
                com.sun.identity.saml2.jaxb.assertion.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
        }
        super.serializeAttributes(context);
        while (idx2 != len2) {
            if (_AssertionConsumerService.get(idx2) instanceof javax.xml.bind.Element) {
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _AssertionConsumerService.get(idx2 ++)), "AssertionConsumerService");
            } else {
                idx2 += 1;
            }
        }
        while (idx3 != len3) {
            if (_AttributeConsumingService.get(idx3) instanceof javax.xml.bind.Element) {
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _AttributeConsumingService.get(idx3 ++)), "AttributeConsumingService");
            } else {
                idx3 += 1;
            }
        }
    }

    public void serializeURIs(com.sun.identity.saml2.jaxb.assertion.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        int idx2 = 0;
        final int len2 = ((_AssertionConsumerService == null)? 0 :_AssertionConsumerService.size());
        int idx3 = 0;
        final int len3 = ((_AttributeConsumingService == null)? 0 :_AttributeConsumingService.size());
        super.serializeURIs(context);
        while (idx2 != len2) {
            if (_AssertionConsumerService.get(idx2) instanceof javax.xml.bind.Element) {
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _AssertionConsumerService.get(idx2 ++)), "AssertionConsumerService");
            } else {
                idx2 += 1;
            }
        }
        while (idx3 != len3) {
            if (_AttributeConsumingService.get(idx3) instanceof javax.xml.bind.Element) {
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _AttributeConsumingService.get(idx3 ++)), "AttributeConsumingService");
            } else {
                idx3 += 1;
            }
        }
    }

    public java.lang.Class getPrimaryInterface() {
        return (com.sun.identity.saml2.jaxb.metadata.SPSSODescriptorType.class);
    }

    public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
        if (schemaFragment == null) {
            schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.su"
+"n.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gra"
+"mmar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expressi"
+"on\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0002L\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000b"
+"expandedExpq\u0000~\u0000\u0002xpppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000pp"
+"sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~"
+"\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsr\u0000\u001dcom.sun.msv.grammar.ChoiceEx"
+"p\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0001ppsq\u0000~\u0000\u0016sr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000"
+"\u0005valuexp\u0000psr\u0000\'com.sun.msv.grammar.trex.ElementPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0001\u0002\u0000\u0001L\u0000\tnameClasst\u0000\u001fLcom/sun/msv/grammar/NameClass;xr\u0000\u001ecom.su"
+"n.msv.grammar.ElementExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAttrib"
+"utesL\u0000\fcontentModelq\u0000~\u0000\u0002xq\u0000~\u0000\u0003q\u0000~\u0000\u001ap\u0000sq\u0000~\u0000\u0016ppsr\u0000 com.sun.msv"
+".grammar.OneOrMoreExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001ccom.sun.msv.grammar.Unar"
+"yExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0003expq\u0000~\u0000\u0002xq\u0000~\u0000\u0003q\u0000~\u0000\u001apsr\u0000 com.sun.msv.gramma"
+"r.AttributeExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnameClassq\u0000~\u0000\u001cxq\u0000~\u0000\u0003q"
+"\u0000~\u0000\u001apsr\u00002com.sun.msv.grammar.Expression$AnyStringExpression\u0000"
+"\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003sq\u0000~\u0000\u0019\u0001q\u0000~\u0000&sr\u0000 com.sun.msv.grammar.AnyNameC"
+"lass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.sun.msv.grammar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000x"
+"psr\u00000com.sun.msv.grammar.Expression$EpsilonExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003q\u0000~\u0000\'q\u0000~\u0000,sr\u0000#com.sun.msv.grammar.SimpleNameClass\u0000"
+"\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNamet\u0000\u0012Ljava/lang/String;L\u0000\fnamespaceURIq\u0000"
+"~\u0000.xq\u0000~\u0000)t\u00003com.sun.identity.saml2.jaxb.xmlsig.SignatureElem"
+"entt\u0000+http://java.sun.com/jaxb/xjc/dummy-elementssq\u0000~\u0000\u001bq\u0000~\u0000\u001a"
+"p\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u001bpp\u0000sq\u0000~\u0000\u0016ppsq\u0000~\u0000 q\u0000~\u0000\u001apsq\u0000~\u0000#q\u0000~\u0000\u001apq\u0000~\u0000&q\u0000~\u0000"
+"*q\u0000~\u0000,sq\u0000~\u0000-t\u00000com.sun.identity.saml2.jaxb.xmlsig.SignatureT"
+"ypeq\u0000~\u00001sq\u0000~\u0000\u0016ppsq\u0000~\u0000#q\u0000~\u0000\u001apsr\u0000\u001bcom.sun.msv.grammar.DataExp\u0000"
+"\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/relaxng/datatype/Datatype;L\u0000\u0006exceptq\u0000"
+"~\u0000\u0002L\u0000\u0004namet\u0000\u001dLcom/sun/msv/util/StringPair;xq\u0000~\u0000\u0003ppsr\u0000\"com.su"
+"n.msv.datatype.xsd.QnameType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000*com.sun.msv.datat"
+"ype.xsd.BuiltinAtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.datatype"
+".xsd.ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com.sun.msv.datatype.xsd.XSD"
+"atatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUriq\u0000~\u0000.L\u0000\btypeNameq\u0000~\u0000.L\u0000"
+"\nwhiteSpacet\u0000.Lcom/sun/msv/datatype/xsd/WhiteSpaceProcessor;"
+"xpt\u0000 http://www.w3.org/2001/XMLSchemat\u0000\u0005QNamesr\u00005com.sun.msv"
+".datatype.xsd.WhiteSpaceProcessor$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com"
+".sun.msv.datatype.xsd.WhiteSpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000co"
+"m.sun.msv.grammar.Expression$NullSetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000"
+"~\u0000\u0003q\u0000~\u0000\u001apsr\u0000\u001bcom.sun.msv.util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalN"
+"ameq\u0000~\u0000.L\u0000\fnamespaceURIq\u0000~\u0000.xpq\u0000~\u0000Gq\u0000~\u0000Fsq\u0000~\u0000-t\u0000\u0004typet\u0000)http"
+"://www.w3.org/2001/XMLSchema-instanceq\u0000~\u0000,sq\u0000~\u0000-t\u0000\tSignature"
+"t\u0000\"http://www.w3.org/2000/09/xmldsig#q\u0000~\u0000,sq\u0000~\u0000\u0016ppsq\u0000~\u0000\u0016q\u0000~\u0000"
+"\u001apsq\u0000~\u0000\u001bq\u0000~\u0000\u001ap\u0000sq\u0000~\u0000\u0016ppsq\u0000~\u0000 q\u0000~\u0000\u001apsq\u0000~\u0000#q\u0000~\u0000\u001apq\u0000~\u0000&q\u0000~\u0000*q\u0000~"
+"\u0000,sq\u0000~\u0000-t\u00006com.sun.identity.saml2.jaxb.metadata.ExtensionsEl"
+"ementq\u0000~\u00001sq\u0000~\u0000\u001bq\u0000~\u0000\u001ap\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u001bpp\u0000sq\u0000~\u0000\u0016ppsq\u0000~\u0000 q\u0000~\u0000\u001ap"
+"sq\u0000~\u0000#q\u0000~\u0000\u001apq\u0000~\u0000&q\u0000~\u0000*q\u0000~\u0000,sq\u0000~\u0000-t\u00003com.sun.identity.saml2.j"
+"axb.metadata.ExtensionsTypeq\u0000~\u00001sq\u0000~\u0000\u0016ppsq\u0000~\u0000#q\u0000~\u0000\u001apq\u0000~\u0000?q\u0000~"
+"\u0000Oq\u0000~\u0000,sq\u0000~\u0000-t\u0000\nExtensionst\u0000$urn:oasis:names:tc:SAML:2.0:met"
+"adataq\u0000~\u0000,sq\u0000~\u0000\u0016ppsq\u0000~\u0000 q\u0000~\u0000\u001apsq\u0000~\u0000\u0016q\u0000~\u0000\u001apsq\u0000~\u0000\u001bq\u0000~\u0000\u001ap\u0000sq\u0000~\u0000"
+"\u0016ppsq\u0000~\u0000 q\u0000~\u0000\u001apsq\u0000~\u0000#q\u0000~\u0000\u001apq\u0000~\u0000&q\u0000~\u0000*q\u0000~\u0000,sq\u0000~\u0000-t\u00009com.sun.i"
+"dentity.saml2.jaxb.metadata.KeyDescriptorElementq\u0000~\u00001sq\u0000~\u0000\u001bq"
+"\u0000~\u0000\u001ap\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u001bpp\u0000sq\u0000~\u0000\u0016ppsq\u0000~\u0000 q\u0000~\u0000\u001apsq\u0000~\u0000#q\u0000~\u0000\u001apq\u0000~\u0000&"
+"q\u0000~\u0000*q\u0000~\u0000,sq\u0000~\u0000-t\u00006com.sun.identity.saml2.jaxb.metadata.KeyD"
+"escriptorTypeq\u0000~\u00001sq\u0000~\u0000\u0016ppsq\u0000~\u0000#q\u0000~\u0000\u001apq\u0000~\u0000?q\u0000~\u0000Oq\u0000~\u0000,sq\u0000~\u0000-t"
+"\u0000\rKeyDescriptorq\u0000~\u0000iq\u0000~\u0000,sq\u0000~\u0000\u0016ppsq\u0000~\u0000\u0016q\u0000~\u0000\u001apsq\u0000~\u0000\u001bq\u0000~\u0000\u001ap\u0000sq"
+"\u0000~\u0000\u0016ppsq\u0000~\u0000 q\u0000~\u0000\u001apsq\u0000~\u0000#q\u0000~\u0000\u001apq\u0000~\u0000&q\u0000~\u0000*q\u0000~\u0000,sq\u0000~\u0000-t\u00008com.su"
+"n.identity.saml2.jaxb.metadata.OrganizationElementq\u0000~\u00001sq\u0000~\u0000"
+"\u001bq\u0000~\u0000\u001ap\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u001bpp\u0000sq\u0000~\u0000\u0016ppsq\u0000~\u0000 q\u0000~\u0000\u001apsq\u0000~\u0000#q\u0000~\u0000\u001apq\u0000~"
+"\u0000&q\u0000~\u0000*q\u0000~\u0000,sq\u0000~\u0000-t\u00005com.sun.identity.saml2.jaxb.metadata.Or"
+"ganizationTypeq\u0000~\u00001sq\u0000~\u0000\u0016ppsq\u0000~\u0000#q\u0000~\u0000\u001apq\u0000~\u0000?q\u0000~\u0000Oq\u0000~\u0000,sq\u0000~\u0000-"
+"t\u0000\fOrganizationq\u0000~\u0000iq\u0000~\u0000,sq\u0000~\u0000\u0016ppsq\u0000~\u0000 q\u0000~\u0000\u001apsq\u0000~\u0000\u0016q\u0000~\u0000\u001apsq\u0000"
+"~\u0000\u001bq\u0000~\u0000\u001ap\u0000sq\u0000~\u0000\u0016ppsq\u0000~\u0000 q\u0000~\u0000\u001apsq\u0000~\u0000#q\u0000~\u0000\u001apq\u0000~\u0000&q\u0000~\u0000*q\u0000~\u0000,sq\u0000"
+"~\u0000-t\u00009com.sun.identity.saml2.jaxb.metadata.ContactPersonElem"
+"entq\u0000~\u00001sq\u0000~\u0000\u001bq\u0000~\u0000\u001ap\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u001bpp\u0000sq\u0000~\u0000\u0016ppsq\u0000~\u0000 q\u0000~\u0000\u001apsq"
+"\u0000~\u0000#q\u0000~\u0000\u001apq\u0000~\u0000&q\u0000~\u0000*q\u0000~\u0000,sq\u0000~\u0000-t\u00000com.sun.identity.saml2.jax"
+"b.metadata.ContactTypeq\u0000~\u00001sq\u0000~\u0000\u0016ppsq\u0000~\u0000#q\u0000~\u0000\u001apq\u0000~\u0000?q\u0000~\u0000Oq\u0000~"
+"\u0000,sq\u0000~\u0000-t\u0000\rContactPersonq\u0000~\u0000iq\u0000~\u0000,sq\u0000~\u0000\u0016ppsq\u0000~\u0000 q\u0000~\u0000\u001apsq\u0000~\u0000\u0016"
+"q\u0000~\u0000\u001apsq\u0000~\u0000\u001bq\u0000~\u0000\u001ap\u0000sq\u0000~\u0000\u0016ppsq\u0000~\u0000 q\u0000~\u0000\u001apsq\u0000~\u0000#q\u0000~\u0000\u001apq\u0000~\u0000&q\u0000~\u0000"
+"*q\u0000~\u0000,sq\u0000~\u0000-t\u0000Ecom.sun.identity.saml2.jaxb.metadata.Artifact"
+"ResolutionServiceElementq\u0000~\u00001sq\u0000~\u0000\u001bq\u0000~\u0000\u001ap\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u001bpp\u0000s"
+"q\u0000~\u0000\u0016ppsq\u0000~\u0000 q\u0000~\u0000\u001apsq\u0000~\u0000#q\u0000~\u0000\u001apq\u0000~\u0000&q\u0000~\u0000*q\u0000~\u0000,sq\u0000~\u0000-t\u00008com.s"
+"un.identity.saml2.jaxb.metadata.IndexedEndpointTypeq\u0000~\u00001sq\u0000~"
+"\u0000\u0016ppsq\u0000~\u0000#q\u0000~\u0000\u001apq\u0000~\u0000?q\u0000~\u0000Oq\u0000~\u0000,sq\u0000~\u0000-t\u0000\u0019ArtifactResolutionSe"
+"rviceq\u0000~\u0000iq\u0000~\u0000,sq\u0000~\u0000\u0016ppsq\u0000~\u0000 q\u0000~\u0000\u001apsq\u0000~\u0000\u0016q\u0000~\u0000\u001apsq\u0000~\u0000\u001bq\u0000~\u0000\u001ap\u0000"
+"sq\u0000~\u0000\u0016ppsq\u0000~\u0000 q\u0000~\u0000\u001apsq\u0000~\u0000#q\u0000~\u0000\u001apq\u0000~\u0000&q\u0000~\u0000*q\u0000~\u0000,sq\u0000~\u0000-t\u0000?com."
+"sun.identity.saml2.jaxb.metadata.SingleLogoutServiceElementq"
+"\u0000~\u00001sq\u0000~\u0000\u001bq\u0000~\u0000\u001ap\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u001bpp\u0000sq\u0000~\u0000\u0016ppsq\u0000~\u0000 q\u0000~\u0000\u001apsq\u0000~\u0000#"
+"q\u0000~\u0000\u001apq\u0000~\u0000&q\u0000~\u0000*q\u0000~\u0000,sq\u0000~\u0000-t\u00001com.sun.identity.saml2.jaxb.me"
+"tadata.EndpointTypeq\u0000~\u00001sq\u0000~\u0000\u0016ppsq\u0000~\u0000#q\u0000~\u0000\u001apq\u0000~\u0000?q\u0000~\u0000Oq\u0000~\u0000,s"
+"q\u0000~\u0000-t\u0000\u0013SingleLogoutServiceq\u0000~\u0000iq\u0000~\u0000,sq\u0000~\u0000\u0016ppsq\u0000~\u0000 q\u0000~\u0000\u001apsq\u0000"
+"~\u0000\u0016q\u0000~\u0000\u001apsq\u0000~\u0000\u001bq\u0000~\u0000\u001ap\u0000sq\u0000~\u0000\u0016ppsq\u0000~\u0000 q\u0000~\u0000\u001apsq\u0000~\u0000#q\u0000~\u0000\u001apq\u0000~\u0000&q"
+"\u0000~\u0000*q\u0000~\u0000,sq\u0000~\u0000-t\u0000?com.sun.identity.saml2.jaxb.metadata.Manag"
+"eNameIDServiceElementq\u0000~\u00001sq\u0000~\u0000\u001bq\u0000~\u0000\u001ap\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u001bpp\u0000sq\u0000~"
+"\u0000\u0016ppsq\u0000~\u0000 q\u0000~\u0000\u001apsq\u0000~\u0000#q\u0000~\u0000\u001apq\u0000~\u0000&q\u0000~\u0000*q\u0000~\u0000,sq\u0000~\u0000-q\u0000~\u0000\u00cdq\u0000~\u00001s"
+"q\u0000~\u0000\u0016ppsq\u0000~\u0000#q\u0000~\u0000\u001apq\u0000~\u0000?q\u0000~\u0000Oq\u0000~\u0000,sq\u0000~\u0000-t\u0000\u0013ManageNameIDServi"
+"ceq\u0000~\u0000iq\u0000~\u0000,sq\u0000~\u0000\u0016ppsq\u0000~\u0000 q\u0000~\u0000\u001apsq\u0000~\u0000\u001bq\u0000~\u0000\u001ap\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000<q"
+"\u0000~\u0000\u001apsr\u0000#com.sun.msv.datatype.xsd.AnyURIType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000"
+"Aq\u0000~\u0000Ft\u0000\u0006anyURIq\u0000~\u0000Jq\u0000~\u0000Lsq\u0000~\u0000Mq\u0000~\u0000\u00edq\u0000~\u0000Fsq\u0000~\u0000\u0016ppsq\u0000~\u0000#q\u0000~\u0000\u001a"
+"pq\u0000~\u0000?q\u0000~\u0000Oq\u0000~\u0000,sq\u0000~\u0000-t\u0000\fNameIDFormatq\u0000~\u0000iq\u0000~\u0000,sq\u0000~\u0000 ppsq\u0000~\u0000"
+"\u0016ppsq\u0000~\u0000\u001bpp\u0000sq\u0000~\u0000\u0016ppsq\u0000~\u0000 q\u0000~\u0000\u001apsq\u0000~\u0000#q\u0000~\u0000\u001apq\u0000~\u0000&q\u0000~\u0000*q\u0000~\u0000,s"
+"q\u0000~\u0000-t\u0000Dcom.sun.identity.saml2.jaxb.metadata.AssertionConsum"
+"erServiceElementq\u0000~\u00001sq\u0000~\u0000\u001bpp\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u001bpp\u0000sq\u0000~\u0000\u0016ppsq\u0000~\u0000"
+" q\u0000~\u0000\u001apsq\u0000~\u0000#q\u0000~\u0000\u001apq\u0000~\u0000&q\u0000~\u0000*q\u0000~\u0000,sq\u0000~\u0000-q\u0000~\u0000\u00b8q\u0000~\u00001sq\u0000~\u0000\u0016ppsq"
+"\u0000~\u0000#q\u0000~\u0000\u001apq\u0000~\u0000?q\u0000~\u0000Oq\u0000~\u0000,sq\u0000~\u0000-t\u0000\u0018AssertionConsumerServiceq\u0000"
+"~\u0000isq\u0000~\u0000\u0016ppsq\u0000~\u0000 q\u0000~\u0000\u001apsq\u0000~\u0000\u0016q\u0000~\u0000\u001apsq\u0000~\u0000\u001bq\u0000~\u0000\u001ap\u0000sq\u0000~\u0000\u0016ppsq\u0000~"
+"\u0000 q\u0000~\u0000\u001apsq\u0000~\u0000#q\u0000~\u0000\u001apq\u0000~\u0000&q\u0000~\u0000*q\u0000~\u0000,sq\u0000~\u0000-t\u0000Ecom.sun.identity"
+".saml2.jaxb.metadata.AttributeConsumingServiceElementq\u0000~\u00001sq"
+"\u0000~\u0000\u001bq\u0000~\u0000\u001ap\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u001bpp\u0000sq\u0000~\u0000\u0016ppsq\u0000~\u0000 q\u0000~\u0000\u001apsq\u0000~\u0000#q\u0000~\u0000\u001ap"
+"q\u0000~\u0000&q\u0000~\u0000*q\u0000~\u0000,sq\u0000~\u0000-t\u0000Bcom.sun.identity.saml2.jaxb.metadata"
+".AttributeConsumingServiceTypeq\u0000~\u00001sq\u0000~\u0000\u0016ppsq\u0000~\u0000#q\u0000~\u0000\u001apq\u0000~\u0000?"
+"q\u0000~\u0000Oq\u0000~\u0000,sq\u0000~\u0000-t\u0000\u0019AttributeConsumingServiceq\u0000~\u0000iq\u0000~\u0000,sq\u0000~\u0000\u0016"
+"ppsq\u0000~\u0000#q\u0000~\u0000\u001apsq\u0000~\u0000<ppsr\u0000\u001fcom.sun.msv.datatype.xsd.IDType\u0000\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000#com.sun.msv.datatype.xsd.NcnameType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr"
+"\u0000\"com.sun.msv.datatype.xsd.TokenType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000#com.sun.m"
+"sv.datatype.xsd.StringType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001Z\u0000\risAlwaysValidxq\u0000~\u0000Aq"
+"\u0000~\u0000Ft\u0000\u0002IDq\u0000~\u0000J\u0000q\u0000~\u0000Lsq\u0000~\u0000Mq\u0000~\u0001#q\u0000~\u0000Fsq\u0000~\u0000-t\u0000\u0002IDt\u0000\u0000q\u0000~\u0000,sq\u0000~\u0000"
+"\u0016ppsq\u0000~\u0000#q\u0000~\u0000\u001apsq\u0000~\u0000<ppsr\u0000%com.sun.msv.datatype.xsd.Duration"
+"Type\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000Aq\u0000~\u0000Ft\u0000\bdurationq\u0000~\u0000Jq\u0000~\u0000Lsq\u0000~\u0000Mq\u0000~\u0001-q\u0000"
+"~\u0000Fsq\u0000~\u0000-t\u0000\rcacheDurationq\u0000~\u0001\'q\u0000~\u0000,sq\u0000~\u0000\u0016ppsq\u0000~\u0000#q\u0000~\u0000\u001apq\u0000~\u0000\u00ea"
+"sq\u0000~\u0000-t\u0000\berrorURLq\u0000~\u0001\'q\u0000~\u0000,sq\u0000~\u0000#ppsq\u0000~\u0000<ppsr\u0000!com.sun.msv.d"
+"atatype.xsd.ListType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bitemTypet\u0000)Lcom/sun/msv/da"
+"tatype/xsd/XSDatatypeImpl;xq\u0000~\u0000Bq\u0000~\u0000it\u0000\u000eanyURIListTypeq\u0000~\u0000Jq"
+"\u0000~\u0000\u00ecq\u0000~\u0000Lpsq\u0000~\u0000-t\u0000\u001aprotocolSupportEnumerationq\u0000~\u0001\'sq\u0000~\u0000\u0016ppsq"
+"\u0000~\u0000#q\u0000~\u0000\u001apsq\u0000~\u0000<ppsr\u0000%com.sun.msv.datatype.xsd.DateTimeType\u0000"
+"\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000)com.sun.msv.datatype.xsd.DateTimeBaseType\u0014W\u001a@3"
+"\u00a5\u00b4\u00e5\u0002\u0000\u0000xq\u0000~\u0000Aq\u0000~\u0000Ft\u0000\bdateTimeq\u0000~\u0000Jq\u0000~\u0000Lsq\u0000~\u0000Mq\u0000~\u0001Cq\u0000~\u0000Fsq\u0000~\u0000-"
+"t\u0000\nvalidUntilq\u0000~\u0001\'q\u0000~\u0000,sq\u0000~\u0000\u0016ppsq\u0000~\u0000#q\u0000~\u0000\u001apsq\u0000~\u0000<ppsr\u0000$com.s"
+"un.msv.datatype.xsd.BooleanType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000Aq\u0000~\u0000Ft\u0000\u0007bool"
+"eanq\u0000~\u0000Jq\u0000~\u0000Lsq\u0000~\u0000Mq\u0000~\u0001Lq\u0000~\u0000Fsq\u0000~\u0000-t\u0000\u0013AuthnRequestsSignedq\u0000~"
+"\u0001\'q\u0000~\u0000,sq\u0000~\u0000\u0016ppsq\u0000~\u0000#q\u0000~\u0000\u001apq\u0000~\u0001Isq\u0000~\u0000-t\u0000\u0014WantAssertionsSigne"
+"dq\u0000~\u0001\'q\u0000~\u0000,sr\u0000\"com.sun.msv.grammar.ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001"
+"L\u0000\bexpTablet\u0000/Lcom/sun/msv/grammar/ExpressionPool$ClosedHash"
+";xpsr\u0000-com.sun.msv.grammar.ExpressionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c"
+"\u0003\u0000\u0003I\u0000\u0005countB\u0000\rstreamVersionL\u0000\u0006parentt\u0000$Lcom/sun/msv/grammar/"
+"ExpressionPool;xp\u0000\u0000\u0000q\u0001pq\u0000~\u0000\u0083q\u0000~\u0000wq\u0000~\u0000oq\u0000~\u0000aq\u0000~\u0000Yq\u0000~\u00006q\u0000~\u0000\"q\u0000"
+"~\u0000\u00caq\u0000~\u0000\u0010q\u0000~\u0000\u00d7q\u0000~\u0000\u00dfq\u0000~\u0000\u00e6q\u0000~\u0000\u00f7q\u0000~\u0000\u00ffq\u0000~\u0001\u000bq\u0000~\u0000\rq\u0000~\u0001\u0013q\u0000~\u0001(q\u0000~\u0000\u00a9q\u0000"
+"~\u0000\u0094q\u0000~\u0000kq\u0000~\u0000\u00beq\u0000~\u0000\u00d3q\u0000~\u0000\u00f3q\u0000~\u0001\u0007q\u0000~\u0000\u00b4q\u0000~\u0000\u00acq\u0000~\u0000\u009fq\u0000~\u0000\u0097q\u0000~\u0000\u008aq\u0000~\u0000\u0082q\u0000"
+"~\u0000vq\u0000~\u0000nq\u0000~\u0000`q\u0000~\u0000Xq\u0000~\u00005q\u0000~\u0000\u001fq\u0000~\u0000\u00c1q\u0000~\u0000\u00c9q\u0000~\u0000\u00d6q\u0000~\u0000\u00deq\u0000~\u0000\u00f6q\u0000~\u0000\u00feq\u0000"
+"~\u0001\nq\u0000~\u0001\u0012q\u0000~\u0000\u00b2q\u0000~\u0000\u009dq\u0000~\u0000\u0088q\u0000~\u0000tq\u0000~\u0000^q\u0000~\u00003q\u0000~\u0000\u00c7q\u0000~\u0000\u00dcq\u0000~\u0000\u00fcq\u0000~\u0001\u0010q\u0000"
+"~\u0000\u0011q\u0000~\u0000\u007fq\u0000~\u0000Uq\u0000~\u0000\u0017q\u0000~\u0000\u00a8q\u0000~\u0000\u0093q\u0000~\u0000jq\u0000~\u0000\u00bdq\u0000~\u0000\u00d2q\u0000~\u0001\u0006q\u0000~\u0000\u00aaq\u0000~\u0000\u0095q\u0000"
+"~\u0000\u0080q\u0000~\u0000lq\u0000~\u0000Vq\u0000~\u0000\u0018q\u0000~\u0000\u00bfq\u0000~\u0000\u00d4q\u0000~\u0000\u00f4q\u0000~\u0001\bq\u0000~\u0000\bq\u0000~\u0001Pq\u0000~\u0000\u0007q\u0000~\u0001\u001bq\u0000"
+"~\u0001=q\u0000~\u0000\fq\u0000~\u0000\u00b9q\u0000~\u0000\u00a4q\u0000~\u0000\u008fq\u0000~\u0000{q\u0000~\u0000eq\u0000~\u0000:q\u0000~\u0000\u00ceq\u0000~\u0000\u00e2q\u0000~\u0000\u00efq\u0000~\u0001\u0002q\u0000"
+"~\u0001\u0017q\u0000~\u0001Gq\u0000~\u0000\u0012q\u0000~\u0000\u0015q\u0000~\u0000\tq\u0000~\u0000\nq\u0000~\u00011q\u0000~\u0000\u0013q\u0000~\u0000\u0005q\u0000~\u0000\u00e9q\u0000~\u0000\u000bq\u0000~\u0000\u0006q\u0000"
+"~\u0000\u000eq\u0000~\u0000\u0014q\u0000~\u0000\u000fq\u0000~\u0000\u00e7q\u0000~\u0000\u00c2q\u0000~\u0000\u00b5q\u0000~\u0000\u00adq\u0000~\u0000\u00a0q\u0000~\u0000\u0098q\u0000~\u0000\u008bx"));
        }
        return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
    }

    public class Unmarshaller
        extends com.sun.identity.saml2.jaxb.assertion.impl.runtime.AbstractUnmarshallingEventHandlerImpl
    {


        public Unmarshaller(com.sun.identity.saml2.jaxb.assertion.impl.runtime.UnmarshallingContext context) {
            super(context, "--------------");
        }

        protected Unmarshaller(com.sun.identity.saml2.jaxb.assertion.impl.runtime.UnmarshallingContext context, int startState) {
            this(context);
            state = startState;
        }

        public java.lang.Object owner() {
            return com.sun.identity.saml2.jaxb.metadata.impl.SPSSODescriptorTypeImpl.this;
        }

        public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  6 :
                        attIdx = context.getAttribute("", "ID");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        attIdx = context.getAttribute("", "cacheDuration");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        attIdx = context.getAttribute("", "errorURL");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        attIdx = context.getAttribute("", "protocolSupportEnumeration");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        break;
                    case  8 :
                        if (("AssertionConsumerService" == ___local)&&("urn:oasis:names:tc:SAML:2.0:metadata" == ___uri)) {
                            _getAssertionConsumerService().add(((com.sun.identity.saml2.jaxb.metadata.impl.AssertionConsumerServiceElementImpl) spawnChildFromEnterElement((com.sun.identity.saml2.jaxb.metadata.impl.AssertionConsumerServiceElementImpl.class), 8, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("AssertionConsumerService" == ___local)&&("urn:oasis:names:tc:SAML:2.0:metadata" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 12;
                            return ;
                        }
                        if (("AttributeConsumingService" == ___local)&&("urn:oasis:names:tc:SAML:2.0:metadata" == ___uri)) {
                            _getAttributeConsumingService().add(((com.sun.identity.saml2.jaxb.metadata.impl.AttributeConsumingServiceElementImpl) spawnChildFromEnterElement((com.sun.identity.saml2.jaxb.metadata.impl.AttributeConsumingServiceElementImpl.class), 11, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("AttributeConsumingService" == ___local)&&("urn:oasis:names:tc:SAML:2.0:metadata" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 9;
                            return ;
                        }
                        state = 11;
                        continue outer;
                    case  0 :
                        attIdx = context.getAttribute("", "AuthnRequestsSigned");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 3;
                            eatText1(v);
                            continue outer;
                        }
                        state = 3;
                        continue outer;
                    case  11 :
                        if (("AttributeConsumingService" == ___local)&&("urn:oasis:names:tc:SAML:2.0:metadata" == ___uri)) {
                            _getAttributeConsumingService().add(((com.sun.identity.saml2.jaxb.metadata.impl.AttributeConsumingServiceElementImpl) spawnChildFromEnterElement((com.sun.identity.saml2.jaxb.metadata.impl.AttributeConsumingServiceElementImpl.class), 11, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("AttributeConsumingService" == ___local)&&("urn:oasis:names:tc:SAML:2.0:metadata" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 9;
                            return ;
                        }
                        revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                        return ;
                    case  9 :
                        attIdx = context.getAttribute("", "index");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        break;
                    case  12 :
                        attIdx = context.getAttribute("", "index");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        break;
                    case  7 :
                        if (("AssertionConsumerService" == ___local)&&("urn:oasis:names:tc:SAML:2.0:metadata" == ___uri)) {
                            _getAssertionConsumerService().add(((com.sun.identity.saml2.jaxb.metadata.impl.AssertionConsumerServiceElementImpl) spawnChildFromEnterElement((com.sun.identity.saml2.jaxb.metadata.impl.AssertionConsumerServiceElementImpl.class), 8, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("AssertionConsumerService" == ___local)&&("urn:oasis:names:tc:SAML:2.0:metadata" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 12;
                            return ;
                        }
                        break;
                    case  3 :
                        attIdx = context.getAttribute("", "WantAssertionsSigned");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 6;
                            eatText2(v);
                            continue outer;
                        }
                        state = 6;
                        continue outer;
                }
                super.enterElement(___uri, ___local, ___qname, __atts);
                break;
            }
        }

        private void eatText1(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _AuthnRequestsSigned = javax.xml.bind.DatatypeConverter.parseBoolean(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                has_AuthnRequestsSigned = true;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText2(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _WantAssertionsSigned = javax.xml.bind.DatatypeConverter.parseBoolean(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                has_WantAssertionsSigned = true;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  6 :
                        attIdx = context.getAttribute("", "ID");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "cacheDuration");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "errorURL");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "protocolSupportEnumeration");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                    case  8 :
                        state = 11;
                        continue outer;
                    case  0 :
                        attIdx = context.getAttribute("", "AuthnRequestsSigned");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 3;
                            eatText1(v);
                            continue outer;
                        }
                        state = 3;
                        continue outer;
                    case  11 :
                        revertToParentFromLeaveElement(___uri, ___local, ___qname);
                        return ;
                    case  13 :
                        if (("AssertionConsumerService" == ___local)&&("urn:oasis:names:tc:SAML:2.0:metadata" == ___uri)) {
                            context.popAttributes();
                            state = 8;
                            return ;
                        }
                        break;
                    case  9 :
                        attIdx = context.getAttribute("", "index");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                    case  10 :
                        if (("AttributeConsumingService" == ___local)&&("urn:oasis:names:tc:SAML:2.0:metadata" == ___uri)) {
                            context.popAttributes();
                            state = 11;
                            return ;
                        }
                        break;
                    case  12 :
                        attIdx = context.getAttribute("", "index");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                    case  3 :
                        attIdx = context.getAttribute("", "WantAssertionsSigned");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 6;
                            eatText2(v);
                            continue outer;
                        }
                        state = 6;
                        continue outer;
                }
                super.leaveElement(___uri, ___local, ___qname);
                break;
            }
        }

        public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  6 :
                        if (("ID" == ___local)&&("" == ___uri)) {
                            spawnHandlerFromEnterAttribute((((com.sun.identity.saml2.jaxb.metadata.impl.SSODescriptorTypeImpl)com.sun.identity.saml2.jaxb.metadata.impl.SPSSODescriptorTypeImpl.this).new Unmarshaller(context)), 7, ___uri, ___local, ___qname);
                            return ;
                        }
                        if (("cacheDuration" == ___local)&&("" == ___uri)) {
                            spawnHandlerFromEnterAttribute((((com.sun.identity.saml2.jaxb.metadata.impl.SSODescriptorTypeImpl)com.sun.identity.saml2.jaxb.metadata.impl.SPSSODescriptorTypeImpl.this).new Unmarshaller(context)), 7, ___uri, ___local, ___qname);
                            return ;
                        }
                        if (("errorURL" == ___local)&&("" == ___uri)) {
                            spawnHandlerFromEnterAttribute((((com.sun.identity.saml2.jaxb.metadata.impl.SSODescriptorTypeImpl)com.sun.identity.saml2.jaxb.metadata.impl.SPSSODescriptorTypeImpl.this).new Unmarshaller(context)), 7, ___uri, ___local, ___qname);
                            return ;
                        }
                        if (("protocolSupportEnumeration" == ___local)&&("" == ___uri)) {
                            spawnHandlerFromEnterAttribute((((com.sun.identity.saml2.jaxb.metadata.impl.SSODescriptorTypeImpl)com.sun.identity.saml2.jaxb.metadata.impl.SPSSODescriptorTypeImpl.this).new Unmarshaller(context)), 7, ___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                    case  8 :
                        state = 11;
                        continue outer;
                    case  0 :
                        if (("AuthnRequestsSigned" == ___local)&&("" == ___uri)) {
                            state = 1;
                            return ;
                        }
                        state = 3;
                        continue outer;
                    case  11 :
                        revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                        return ;
                    case  9 :
                        if (("index" == ___local)&&("" == ___uri)) {
                            _getAttributeConsumingService().add(((com.sun.identity.saml2.jaxb.metadata.impl.AttributeConsumingServiceTypeImpl) spawnChildFromEnterAttribute((com.sun.identity.saml2.jaxb.metadata.impl.AttributeConsumingServiceTypeImpl.class), 10, ___uri, ___local, ___qname)));
                            return ;
                        }
                        break;
                    case  12 :
                        if (("index" == ___local)&&("" == ___uri)) {
                            _getAssertionConsumerService().add(((com.sun.identity.saml2.jaxb.metadata.impl.IndexedEndpointTypeImpl) spawnChildFromEnterAttribute((com.sun.identity.saml2.jaxb.metadata.impl.IndexedEndpointTypeImpl.class), 13, ___uri, ___local, ___qname)));
                            return ;
                        }
                        break;
                    case  3 :
                        if (("WantAssertionsSigned" == ___local)&&("" == ___uri)) {
                            state = 4;
                            return ;
                        }
                        state = 6;
                        continue outer;
                }
                super.enterAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  2 :
                        if (("AuthnRequestsSigned" == ___local)&&("" == ___uri)) {
                            state = 3;
                            return ;
                        }
                        break;
                    case  6 :
                        attIdx = context.getAttribute("", "ID");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "cacheDuration");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "errorURL");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "protocolSupportEnumeration");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                    case  8 :
                        state = 11;
                        continue outer;
                    case  0 :
                        attIdx = context.getAttribute("", "AuthnRequestsSigned");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 3;
                            eatText1(v);
                            continue outer;
                        }
                        state = 3;
                        continue outer;
                    case  11 :
                        revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                        return ;
                    case  9 :
                        attIdx = context.getAttribute("", "index");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                    case  12 :
                        attIdx = context.getAttribute("", "index");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                    case  3 :
                        attIdx = context.getAttribute("", "WantAssertionsSigned");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 6;
                            eatText2(v);
                            continue outer;
                        }
                        state = 6;
                        continue outer;
                    case  5 :
                        if (("WantAssertionsSigned" == ___local)&&("" == ___uri)) {
                            state = 6;
                            return ;
                        }
                        break;
                }
                super.leaveAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void handleText(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                try {
                    switch (state) {
                        case  4 :
                            state = 5;
                            eatText2(value);
                            return ;
                        case  6 :
                            attIdx = context.getAttribute("", "ID");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            attIdx = context.getAttribute("", "cacheDuration");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            attIdx = context.getAttribute("", "errorURL");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            attIdx = context.getAttribute("", "protocolSupportEnumeration");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            break;
                        case  8 :
                            state = 11;
                            continue outer;
                        case  0 :
                            attIdx = context.getAttribute("", "AuthnRequestsSigned");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 3;
                                eatText1(v);
                                continue outer;
                            }
                            state = 3;
                            continue outer;
                        case  11 :
                            revertToParentFromText(value);
                            return ;
                        case  9 :
                            attIdx = context.getAttribute("", "index");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            break;
                        case  1 :
                            state = 2;
                            eatText1(value);
                            return ;
                        case  12 :
                            attIdx = context.getAttribute("", "index");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            break;
                        case  3 :
                            attIdx = context.getAttribute("", "WantAssertionsSigned");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 6;
                                eatText2(v);
                                continue outer;
                            }
                            state = 6;
                            continue outer;
                    }
                } catch (java.lang.RuntimeException e) {
                    handleUnexpectedTextException(value, e);
                }
                break;
            }
        }

    }

}
