//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v1.0.6-b27-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2012.06.11 at 10:34:07 AM PDT 
//


package com.sun.identity.saml2.jaxb.metadata.impl;

public class IDPSSODescriptorTypeImpl
    extends com.sun.identity.saml2.jaxb.metadata.impl.SSODescriptorTypeImpl
    implements com.sun.identity.saml2.jaxb.metadata.IDPSSODescriptorType, com.sun.xml.bind.JAXBObject, com.sun.identity.saml2.jaxb.assertion.impl.runtime.UnmarshallableObject, com.sun.identity.saml2.jaxb.assertion.impl.runtime.XMLSerializable, com.sun.identity.saml2.jaxb.assertion.impl.runtime.ValidatableObject
{

    protected boolean has_WantAuthnRequestsSigned;
    protected boolean _WantAuthnRequestsSigned;
    protected com.sun.xml.bind.util.ListImpl _NameIDMappingService;
    protected com.sun.xml.bind.util.ListImpl _AttributeProfile;
    protected com.sun.xml.bind.util.ListImpl _SingleSignOnService;
    protected com.sun.xml.bind.util.ListImpl _AssertionIDRequestService;
    protected com.sun.xml.bind.util.ListImpl _Attribute;
    public final static java.lang.Class version = (com.sun.identity.saml2.jaxb.metadata.impl.JAXBVersion.class);
    private static com.sun.msv.grammar.Grammar schemaFragment;

    private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
        return (com.sun.identity.saml2.jaxb.metadata.IDPSSODescriptorType.class);
    }

    public boolean isWantAuthnRequestsSigned() {
        return _WantAuthnRequestsSigned;
    }

    public void setWantAuthnRequestsSigned(boolean value) {
        _WantAuthnRequestsSigned = value;
        has_WantAuthnRequestsSigned = true;
    }

    protected com.sun.xml.bind.util.ListImpl _getNameIDMappingService() {
        if (_NameIDMappingService == null) {
            _NameIDMappingService = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
        }
        return _NameIDMappingService;
    }

    public java.util.List getNameIDMappingService() {
        return _getNameIDMappingService();
    }

    protected com.sun.xml.bind.util.ListImpl _getAttributeProfile() {
        if (_AttributeProfile == null) {
            _AttributeProfile = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
        }
        return _AttributeProfile;
    }

    public java.util.List getAttributeProfile() {
        return _getAttributeProfile();
    }

    protected com.sun.xml.bind.util.ListImpl _getSingleSignOnService() {
        if (_SingleSignOnService == null) {
            _SingleSignOnService = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
        }
        return _SingleSignOnService;
    }

    public java.util.List getSingleSignOnService() {
        return _getSingleSignOnService();
    }

    protected com.sun.xml.bind.util.ListImpl _getAssertionIDRequestService() {
        if (_AssertionIDRequestService == null) {
            _AssertionIDRequestService = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
        }
        return _AssertionIDRequestService;
    }

    public java.util.List getAssertionIDRequestService() {
        return _getAssertionIDRequestService();
    }

    protected com.sun.xml.bind.util.ListImpl _getAttribute() {
        if (_Attribute == null) {
            _Attribute = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
        }
        return _Attribute;
    }

    public java.util.List getAttribute() {
        return _getAttribute();
    }

    public com.sun.identity.saml2.jaxb.assertion.impl.runtime.UnmarshallingEventHandler createUnmarshaller(com.sun.identity.saml2.jaxb.assertion.impl.runtime.UnmarshallingContext context) {
        return new com.sun.identity.saml2.jaxb.metadata.impl.IDPSSODescriptorTypeImpl.Unmarshaller(context);
    }

    public void serializeBody(com.sun.identity.saml2.jaxb.assertion.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        int idx2 = 0;
        final int len2 = ((_NameIDMappingService == null)? 0 :_NameIDMappingService.size());
        int idx3 = 0;
        final int len3 = ((_AttributeProfile == null)? 0 :_AttributeProfile.size());
        int idx4 = 0;
        final int len4 = ((_SingleSignOnService == null)? 0 :_SingleSignOnService.size());
        int idx5 = 0;
        final int len5 = ((_AssertionIDRequestService == null)? 0 :_AssertionIDRequestService.size());
        int idx6 = 0;
        final int len6 = ((_Attribute == null)? 0 :_Attribute.size());
        super.serializeBody(context);
        while (idx4 != len4) {
            if (_SingleSignOnService.get(idx4) instanceof javax.xml.bind.Element) {
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _SingleSignOnService.get(idx4 ++)), "SingleSignOnService");
            } else {
                context.startElement("urn:oasis:names:tc:SAML:2.0:metadata", "SingleSignOnService");
                int idx_0 = idx4;
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _SingleSignOnService.get(idx_0 ++)), "SingleSignOnService");
                context.endNamespaceDecls();
                int idx_1 = idx4;
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _SingleSignOnService.get(idx_1 ++)), "SingleSignOnService");
                context.endAttributes();
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _SingleSignOnService.get(idx4 ++)), "SingleSignOnService");
                context.endElement();
            }
        }
        while (idx2 != len2) {
            if (_NameIDMappingService.get(idx2) instanceof javax.xml.bind.Element) {
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _NameIDMappingService.get(idx2 ++)), "NameIDMappingService");
            } else {
                context.startElement("urn:oasis:names:tc:SAML:2.0:metadata", "NameIDMappingService");
                int idx_2 = idx2;
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _NameIDMappingService.get(idx_2 ++)), "NameIDMappingService");
                context.endNamespaceDecls();
                int idx_3 = idx2;
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _NameIDMappingService.get(idx_3 ++)), "NameIDMappingService");
                context.endAttributes();
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _NameIDMappingService.get(idx2 ++)), "NameIDMappingService");
                context.endElement();
            }
        }
        while (idx5 != len5) {
            if (_AssertionIDRequestService.get(idx5) instanceof javax.xml.bind.Element) {
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _AssertionIDRequestService.get(idx5 ++)), "AssertionIDRequestService");
            } else {
                context.startElement("urn:oasis:names:tc:SAML:2.0:metadata", "AssertionIDRequestService");
                int idx_4 = idx5;
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _AssertionIDRequestService.get(idx_4 ++)), "AssertionIDRequestService");
                context.endNamespaceDecls();
                int idx_5 = idx5;
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _AssertionIDRequestService.get(idx_5 ++)), "AssertionIDRequestService");
                context.endAttributes();
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _AssertionIDRequestService.get(idx5 ++)), "AssertionIDRequestService");
                context.endElement();
            }
        }
        while (idx3 != len3) {
            context.startElement("urn:oasis:names:tc:SAML:2.0:metadata", "AttributeProfile");
            int idx_6 = idx3;
            try {
                idx_6 += 1;
            } catch (java.lang.Exception e) {
                com.sun.identity.saml2.jaxb.assertion.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endNamespaceDecls();
            int idx_7 = idx3;
            try {
                idx_7 += 1;
            } catch (java.lang.Exception e) {
                com.sun.identity.saml2.jaxb.assertion.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttributes();
            try {
                context.text(((java.lang.String) _AttributeProfile.get(idx3 ++)), "AttributeProfile");
            } catch (java.lang.Exception e) {
                com.sun.identity.saml2.jaxb.assertion.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        while (idx6 != len6) {
            if (_Attribute.get(idx6) instanceof javax.xml.bind.Element) {
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _Attribute.get(idx6 ++)), "Attribute");
            } else {
                context.startElement("urn:oasis:names:tc:SAML:2.0:assertion", "Attribute");
                int idx_8 = idx6;
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Attribute.get(idx_8 ++)), "Attribute");
                context.endNamespaceDecls();
                int idx_9 = idx6;
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Attribute.get(idx_9 ++)), "Attribute");
                context.endAttributes();
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _Attribute.get(idx6 ++)), "Attribute");
                context.endElement();
            }
        }
    }

    public void serializeAttributes(com.sun.identity.saml2.jaxb.assertion.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        int idx2 = 0;
        final int len2 = ((_NameIDMappingService == null)? 0 :_NameIDMappingService.size());
        int idx3 = 0;
        final int len3 = ((_AttributeProfile == null)? 0 :_AttributeProfile.size());
        int idx4 = 0;
        final int len4 = ((_SingleSignOnService == null)? 0 :_SingleSignOnService.size());
        int idx5 = 0;
        final int len5 = ((_AssertionIDRequestService == null)? 0 :_AssertionIDRequestService.size());
        int idx6 = 0;
        final int len6 = ((_Attribute == null)? 0 :_Attribute.size());
        if (has_WantAuthnRequestsSigned) {
            context.startAttribute("", "WantAuthnRequestsSigned");
            try {
                context.text(javax.xml.bind.DatatypeConverter.printBoolean(((boolean) _WantAuthnRequestsSigned)), "WantAuthnRequestsSigned");
            } catch (java.lang.Exception e) {
                com.sun.identity.saml2.jaxb.assertion.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
        }
        super.serializeAttributes(context);
        while (idx4 != len4) {
            if (_SingleSignOnService.get(idx4) instanceof javax.xml.bind.Element) {
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _SingleSignOnService.get(idx4 ++)), "SingleSignOnService");
            } else {
                idx4 += 1;
            }
        }
        while (idx2 != len2) {
            if (_NameIDMappingService.get(idx2) instanceof javax.xml.bind.Element) {
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _NameIDMappingService.get(idx2 ++)), "NameIDMappingService");
            } else {
                idx2 += 1;
            }
        }
        while (idx5 != len5) {
            if (_AssertionIDRequestService.get(idx5) instanceof javax.xml.bind.Element) {
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _AssertionIDRequestService.get(idx5 ++)), "AssertionIDRequestService");
            } else {
                idx5 += 1;
            }
        }
        while (idx3 != len3) {
            try {
                idx3 += 1;
            } catch (java.lang.Exception e) {
                com.sun.identity.saml2.jaxb.assertion.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
        }
        while (idx6 != len6) {
            if (_Attribute.get(idx6) instanceof javax.xml.bind.Element) {
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Attribute.get(idx6 ++)), "Attribute");
            } else {
                idx6 += 1;
            }
        }
    }

    public void serializeURIs(com.sun.identity.saml2.jaxb.assertion.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        int idx2 = 0;
        final int len2 = ((_NameIDMappingService == null)? 0 :_NameIDMappingService.size());
        int idx3 = 0;
        final int len3 = ((_AttributeProfile == null)? 0 :_AttributeProfile.size());
        int idx4 = 0;
        final int len4 = ((_SingleSignOnService == null)? 0 :_SingleSignOnService.size());
        int idx5 = 0;
        final int len5 = ((_AssertionIDRequestService == null)? 0 :_AssertionIDRequestService.size());
        int idx6 = 0;
        final int len6 = ((_Attribute == null)? 0 :_Attribute.size());
        super.serializeURIs(context);
        while (idx4 != len4) {
            if (_SingleSignOnService.get(idx4) instanceof javax.xml.bind.Element) {
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _SingleSignOnService.get(idx4 ++)), "SingleSignOnService");
            } else {
                idx4 += 1;
            }
        }
        while (idx2 != len2) {
            if (_NameIDMappingService.get(idx2) instanceof javax.xml.bind.Element) {
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _NameIDMappingService.get(idx2 ++)), "NameIDMappingService");
            } else {
                idx2 += 1;
            }
        }
        while (idx5 != len5) {
            if (_AssertionIDRequestService.get(idx5) instanceof javax.xml.bind.Element) {
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _AssertionIDRequestService.get(idx5 ++)), "AssertionIDRequestService");
            } else {
                idx5 += 1;
            }
        }
        while (idx3 != len3) {
            try {
                idx3 += 1;
            } catch (java.lang.Exception e) {
                com.sun.identity.saml2.jaxb.assertion.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
        }
        while (idx6 != len6) {
            if (_Attribute.get(idx6) instanceof javax.xml.bind.Element) {
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Attribute.get(idx6 ++)), "Attribute");
            } else {
                idx6 += 1;
            }
        }
    }

    public java.lang.Class getPrimaryInterface() {
        return (com.sun.identity.saml2.jaxb.metadata.IDPSSODescriptorType.class);
    }

    public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
        if (schemaFragment == null) {
            schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.su"
+"n.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gra"
+"mmar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expressi"
+"on\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0002L\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000b"
+"expandedExpq\u0000~\u0000\u0002xpppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000pp"
+"sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~"
+"\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsr\u0000\u001dcom.sun.msv."
+"grammar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0001ppsq\u0000~\u0000\u0018sr\u0000\u0011java.lang.Bool"
+"ean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000psr\u0000\'com.sun.msv.grammar.trex.Eleme"
+"ntPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\tnameClasst\u0000\u001fLcom/sun/msv/grammar/Name"
+"Class;xr\u0000\u001ecom.sun.msv.grammar.ElementExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignore"
+"UndeclaredAttributesL\u0000\fcontentModelq\u0000~\u0000\u0002xq\u0000~\u0000\u0003q\u0000~\u0000\u001cp\u0000sq\u0000~\u0000\u0018p"
+"psr\u0000 com.sun.msv.grammar.OneOrMoreExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001ccom.sun."
+"msv.grammar.UnaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0003expq\u0000~\u0000\u0002xq\u0000~\u0000\u0003q\u0000~\u0000\u001cpsr\u0000 co"
+"m.sun.msv.grammar.AttributeExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnameC"
+"lassq\u0000~\u0000\u001exq\u0000~\u0000\u0003q\u0000~\u0000\u001cpsr\u00002com.sun.msv.grammar.Expression$AnyS"
+"tringExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003sq\u0000~\u0000\u001b\u0001q\u0000~\u0000(sr\u0000 com.sun.msv."
+"grammar.AnyNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.sun.msv.grammar.NameC"
+"lass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.sun.msv.grammar.Expression$EpsilonE"
+"xpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003q\u0000~\u0000)q\u0000~\u0000.sr\u0000#com.sun.msv.grammar."
+"SimpleNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNamet\u0000\u0012Ljava/lang/String;L"
+"\u0000\fnamespaceURIq\u0000~\u00000xq\u0000~\u0000+t\u00003com.sun.identity.saml2.jaxb.xmls"
+"ig.SignatureElementt\u0000+http://java.sun.com/jaxb/xjc/dummy-ele"
+"mentssq\u0000~\u0000\u001dq\u0000~\u0000\u001cp\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u001dpp\u0000sq\u0000~\u0000\u0018ppsq\u0000~\u0000\"q\u0000~\u0000\u001cpsq\u0000~\u0000"
+"%q\u0000~\u0000\u001cpq\u0000~\u0000(q\u0000~\u0000,q\u0000~\u0000.sq\u0000~\u0000/t\u00000com.sun.identity.saml2.jaxb.x"
+"mlsig.SignatureTypeq\u0000~\u00003sq\u0000~\u0000\u0018ppsq\u0000~\u0000%q\u0000~\u0000\u001cpsr\u0000\u001bcom.sun.msv."
+"grammar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/relaxng/datatype/Data"
+"type;L\u0000\u0006exceptq\u0000~\u0000\u0002L\u0000\u0004namet\u0000\u001dLcom/sun/msv/util/StringPair;xq"
+"\u0000~\u0000\u0003ppsr\u0000\"com.sun.msv.datatype.xsd.QnameType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000*c"
+"om.sun.msv.datatype.xsd.BuiltinAtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com."
+"sun.msv.datatype.xsd.ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com.sun.msv."
+"datatype.xsd.XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUriq\u0000~\u00000L\u0000"
+"\btypeNameq\u0000~\u00000L\u0000\nwhiteSpacet\u0000.Lcom/sun/msv/datatype/xsd/Whit"
+"eSpaceProcessor;xpt\u0000 http://www.w3.org/2001/XMLSchemat\u0000\u0005QNam"
+"esr\u00005com.sun.msv.datatype.xsd.WhiteSpaceProcessor$Collapse\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun.msv.datatype.xsd.WhiteSpaceProcessor\u0000\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.sun.msv.grammar.Expression$NullSetExpressi"
+"on\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003q\u0000~\u0000\u001cpsr\u0000\u001bcom.sun.msv.util.StringPair\u00d0t\u001ej"
+"B\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u00000L\u0000\fnamespaceURIq\u0000~\u00000xpq\u0000~\u0000Iq\u0000~\u0000Hsq\u0000~"
+"\u0000/t\u0000\u0004typet\u0000)http://www.w3.org/2001/XMLSchema-instanceq\u0000~\u0000.sq"
+"\u0000~\u0000/t\u0000\tSignaturet\u0000\"http://www.w3.org/2000/09/xmldsig#q\u0000~\u0000.sq"
+"\u0000~\u0000\u0018ppsq\u0000~\u0000\u0018q\u0000~\u0000\u001cpsq\u0000~\u0000\u001dq\u0000~\u0000\u001cp\u0000sq\u0000~\u0000\u0018ppsq\u0000~\u0000\"q\u0000~\u0000\u001cpsq\u0000~\u0000%q\u0000~"
+"\u0000\u001cpq\u0000~\u0000(q\u0000~\u0000,q\u0000~\u0000.sq\u0000~\u0000/t\u00006com.sun.identity.saml2.jaxb.metad"
+"ata.ExtensionsElementq\u0000~\u00003sq\u0000~\u0000\u001dq\u0000~\u0000\u001cp\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u001dpp\u0000sq\u0000~"
+"\u0000\u0018ppsq\u0000~\u0000\"q\u0000~\u0000\u001cpsq\u0000~\u0000%q\u0000~\u0000\u001cpq\u0000~\u0000(q\u0000~\u0000,q\u0000~\u0000.sq\u0000~\u0000/t\u00003com.sun."
+"identity.saml2.jaxb.metadata.ExtensionsTypeq\u0000~\u00003sq\u0000~\u0000\u0018ppsq\u0000~"
+"\u0000%q\u0000~\u0000\u001cpq\u0000~\u0000Aq\u0000~\u0000Qq\u0000~\u0000.sq\u0000~\u0000/t\u0000\nExtensionst\u0000$urn:oasis:names"
+":tc:SAML:2.0:metadataq\u0000~\u0000.sq\u0000~\u0000\u0018ppsq\u0000~\u0000\"q\u0000~\u0000\u001cpsq\u0000~\u0000\u0018q\u0000~\u0000\u001cpsq"
+"\u0000~\u0000\u001dq\u0000~\u0000\u001cp\u0000sq\u0000~\u0000\u0018ppsq\u0000~\u0000\"q\u0000~\u0000\u001cpsq\u0000~\u0000%q\u0000~\u0000\u001cpq\u0000~\u0000(q\u0000~\u0000,q\u0000~\u0000.sq"
+"\u0000~\u0000/t\u00009com.sun.identity.saml2.jaxb.metadata.KeyDescriptorEle"
+"mentq\u0000~\u00003sq\u0000~\u0000\u001dq\u0000~\u0000\u001cp\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u001dpp\u0000sq\u0000~\u0000\u0018ppsq\u0000~\u0000\"q\u0000~\u0000\u001cps"
+"q\u0000~\u0000%q\u0000~\u0000\u001cpq\u0000~\u0000(q\u0000~\u0000,q\u0000~\u0000.sq\u0000~\u0000/t\u00006com.sun.identity.saml2.ja"
+"xb.metadata.KeyDescriptorTypeq\u0000~\u00003sq\u0000~\u0000\u0018ppsq\u0000~\u0000%q\u0000~\u0000\u001cpq\u0000~\u0000Aq"
+"\u0000~\u0000Qq\u0000~\u0000.sq\u0000~\u0000/t\u0000\rKeyDescriptorq\u0000~\u0000kq\u0000~\u0000.sq\u0000~\u0000\u0018ppsq\u0000~\u0000\u0018q\u0000~\u0000\u001c"
+"psq\u0000~\u0000\u001dq\u0000~\u0000\u001cp\u0000sq\u0000~\u0000\u0018ppsq\u0000~\u0000\"q\u0000~\u0000\u001cpsq\u0000~\u0000%q\u0000~\u0000\u001cpq\u0000~\u0000(q\u0000~\u0000,q\u0000~\u0000"
+".sq\u0000~\u0000/t\u00008com.sun.identity.saml2.jaxb.metadata.OrganizationE"
+"lementq\u0000~\u00003sq\u0000~\u0000\u001dq\u0000~\u0000\u001cp\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u001dpp\u0000sq\u0000~\u0000\u0018ppsq\u0000~\u0000\"q\u0000~\u0000\u001c"
+"psq\u0000~\u0000%q\u0000~\u0000\u001cpq\u0000~\u0000(q\u0000~\u0000,q\u0000~\u0000.sq\u0000~\u0000/t\u00005com.sun.identity.saml2."
+"jaxb.metadata.OrganizationTypeq\u0000~\u00003sq\u0000~\u0000\u0018ppsq\u0000~\u0000%q\u0000~\u0000\u001cpq\u0000~\u0000A"
+"q\u0000~\u0000Qq\u0000~\u0000.sq\u0000~\u0000/t\u0000\fOrganizationq\u0000~\u0000kq\u0000~\u0000.sq\u0000~\u0000\u0018ppsq\u0000~\u0000\"q\u0000~\u0000\u001c"
+"psq\u0000~\u0000\u0018q\u0000~\u0000\u001cpsq\u0000~\u0000\u001dq\u0000~\u0000\u001cp\u0000sq\u0000~\u0000\u0018ppsq\u0000~\u0000\"q\u0000~\u0000\u001cpsq\u0000~\u0000%q\u0000~\u0000\u001cpq\u0000"
+"~\u0000(q\u0000~\u0000,q\u0000~\u0000.sq\u0000~\u0000/t\u00009com.sun.identity.saml2.jaxb.metadata.C"
+"ontactPersonElementq\u0000~\u00003sq\u0000~\u0000\u001dq\u0000~\u0000\u001cp\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u001dpp\u0000sq\u0000~\u0000\u0018"
+"ppsq\u0000~\u0000\"q\u0000~\u0000\u001cpsq\u0000~\u0000%q\u0000~\u0000\u001cpq\u0000~\u0000(q\u0000~\u0000,q\u0000~\u0000.sq\u0000~\u0000/t\u00000com.sun.id"
+"entity.saml2.jaxb.metadata.ContactTypeq\u0000~\u00003sq\u0000~\u0000\u0018ppsq\u0000~\u0000%q\u0000~"
+"\u0000\u001cpq\u0000~\u0000Aq\u0000~\u0000Qq\u0000~\u0000.sq\u0000~\u0000/t\u0000\rContactPersonq\u0000~\u0000kq\u0000~\u0000.sq\u0000~\u0000\u0018ppsq"
+"\u0000~\u0000\"q\u0000~\u0000\u001cpsq\u0000~\u0000\u0018q\u0000~\u0000\u001cpsq\u0000~\u0000\u001dq\u0000~\u0000\u001cp\u0000sq\u0000~\u0000\u0018ppsq\u0000~\u0000\"q\u0000~\u0000\u001cpsq\u0000~\u0000"
+"%q\u0000~\u0000\u001cpq\u0000~\u0000(q\u0000~\u0000,q\u0000~\u0000.sq\u0000~\u0000/t\u0000Ecom.sun.identity.saml2.jaxb.m"
+"etadata.ArtifactResolutionServiceElementq\u0000~\u00003sq\u0000~\u0000\u001dq\u0000~\u0000\u001cp\u0000sq"
+"\u0000~\u0000\u0000ppsq\u0000~\u0000\u001dpp\u0000sq\u0000~\u0000\u0018ppsq\u0000~\u0000\"q\u0000~\u0000\u001cpsq\u0000~\u0000%q\u0000~\u0000\u001cpq\u0000~\u0000(q\u0000~\u0000,q\u0000~"
+"\u0000.sq\u0000~\u0000/t\u00008com.sun.identity.saml2.jaxb.metadata.IndexedEndpo"
+"intTypeq\u0000~\u00003sq\u0000~\u0000\u0018ppsq\u0000~\u0000%q\u0000~\u0000\u001cpq\u0000~\u0000Aq\u0000~\u0000Qq\u0000~\u0000.sq\u0000~\u0000/t\u0000\u0019Arti"
+"factResolutionServiceq\u0000~\u0000kq\u0000~\u0000.sq\u0000~\u0000\u0018ppsq\u0000~\u0000\"q\u0000~\u0000\u001cpsq\u0000~\u0000\u0018q\u0000~"
+"\u0000\u001cpsq\u0000~\u0000\u001dq\u0000~\u0000\u001cp\u0000sq\u0000~\u0000\u0018ppsq\u0000~\u0000\"q\u0000~\u0000\u001cpsq\u0000~\u0000%q\u0000~\u0000\u001cpq\u0000~\u0000(q\u0000~\u0000,q\u0000"
+"~\u0000.sq\u0000~\u0000/t\u0000?com.sun.identity.saml2.jaxb.metadata.SingleLogou"
+"tServiceElementq\u0000~\u00003sq\u0000~\u0000\u001dq\u0000~\u0000\u001cp\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u001dpp\u0000sq\u0000~\u0000\u0018ppsq"
+"\u0000~\u0000\"q\u0000~\u0000\u001cpsq\u0000~\u0000%q\u0000~\u0000\u001cpq\u0000~\u0000(q\u0000~\u0000,q\u0000~\u0000.sq\u0000~\u0000/t\u00001com.sun.identi"
+"ty.saml2.jaxb.metadata.EndpointTypeq\u0000~\u00003sq\u0000~\u0000\u0018ppsq\u0000~\u0000%q\u0000~\u0000\u001cp"
+"q\u0000~\u0000Aq\u0000~\u0000Qq\u0000~\u0000.sq\u0000~\u0000/t\u0000\u0013SingleLogoutServiceq\u0000~\u0000kq\u0000~\u0000.sq\u0000~\u0000\u0018p"
+"psq\u0000~\u0000\"q\u0000~\u0000\u001cpsq\u0000~\u0000\u0018q\u0000~\u0000\u001cpsq\u0000~\u0000\u001dq\u0000~\u0000\u001cp\u0000sq\u0000~\u0000\u0018ppsq\u0000~\u0000\"q\u0000~\u0000\u001cpsq"
+"\u0000~\u0000%q\u0000~\u0000\u001cpq\u0000~\u0000(q\u0000~\u0000,q\u0000~\u0000.sq\u0000~\u0000/t\u0000?com.sun.identity.saml2.jax"
+"b.metadata.ManageNameIDServiceElementq\u0000~\u00003sq\u0000~\u0000\u001dq\u0000~\u0000\u001cp\u0000sq\u0000~\u0000"
+"\u0000ppsq\u0000~\u0000\u001dpp\u0000sq\u0000~\u0000\u0018ppsq\u0000~\u0000\"q\u0000~\u0000\u001cpsq\u0000~\u0000%q\u0000~\u0000\u001cpq\u0000~\u0000(q\u0000~\u0000,q\u0000~\u0000.s"
+"q\u0000~\u0000/q\u0000~\u0000\u00cfq\u0000~\u00003sq\u0000~\u0000\u0018ppsq\u0000~\u0000%q\u0000~\u0000\u001cpq\u0000~\u0000Aq\u0000~\u0000Qq\u0000~\u0000.sq\u0000~\u0000/t\u0000\u0013M"
+"anageNameIDServiceq\u0000~\u0000kq\u0000~\u0000.sq\u0000~\u0000\u0018ppsq\u0000~\u0000\"q\u0000~\u0000\u001cpsq\u0000~\u0000\u001dq\u0000~\u0000\u001cp"
+"\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000>q\u0000~\u0000\u001cpsr\u0000#com.sun.msv.datatype.xsd.AnyURIType"
+"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000Cq\u0000~\u0000Ht\u0000\u0006anyURIq\u0000~\u0000Lq\u0000~\u0000Nsq\u0000~\u0000Oq\u0000~\u0000\u00efq\u0000~\u0000Hsq\u0000"
+"~\u0000\u0018ppsq\u0000~\u0000%q\u0000~\u0000\u001cpq\u0000~\u0000Aq\u0000~\u0000Qq\u0000~\u0000.sq\u0000~\u0000/t\u0000\fNameIDFormatq\u0000~\u0000kq\u0000"
+"~\u0000.sq\u0000~\u0000\"ppsq\u0000~\u0000\u0018ppsq\u0000~\u0000\u001dpp\u0000sq\u0000~\u0000\u0018ppsq\u0000~\u0000\"q\u0000~\u0000\u001cpsq\u0000~\u0000%q\u0000~\u0000\u001cp"
+"q\u0000~\u0000(q\u0000~\u0000,q\u0000~\u0000.sq\u0000~\u0000/t\u0000?com.sun.identity.saml2.jaxb.metadata"
+".SingleSignOnServiceElementq\u0000~\u00003sq\u0000~\u0000\u001dpp\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u001dpp\u0000sq"
+"\u0000~\u0000\u0018ppsq\u0000~\u0000\"q\u0000~\u0000\u001cpsq\u0000~\u0000%q\u0000~\u0000\u001cpq\u0000~\u0000(q\u0000~\u0000,q\u0000~\u0000.sq\u0000~\u0000/q\u0000~\u0000\u00cfq\u0000~\u0000"
+"3sq\u0000~\u0000\u0018ppsq\u0000~\u0000%q\u0000~\u0000\u001cpq\u0000~\u0000Aq\u0000~\u0000Qq\u0000~\u0000.sq\u0000~\u0000/t\u0000\u0013SingleSignOnSer"
+"viceq\u0000~\u0000ksq\u0000~\u0000\u0018ppsq\u0000~\u0000\"q\u0000~\u0000\u001cpsq\u0000~\u0000\u0018q\u0000~\u0000\u001cpsq\u0000~\u0000\u001dq\u0000~\u0000\u001cp\u0000sq\u0000~\u0000\u0018"
+"ppsq\u0000~\u0000\"q\u0000~\u0000\u001cpsq\u0000~\u0000%q\u0000~\u0000\u001cpq\u0000~\u0000(q\u0000~\u0000,q\u0000~\u0000.sq\u0000~\u0000/t\u0000@com.sun.id"
+"entity.saml2.jaxb.metadata.NameIDMappingServiceElementq\u0000~\u00003s"
+"q\u0000~\u0000\u001dq\u0000~\u0000\u001cp\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u001dpp\u0000sq\u0000~\u0000\u0018ppsq\u0000~\u0000\"q\u0000~\u0000\u001cpsq\u0000~\u0000%q\u0000~\u0000\u001c"
+"pq\u0000~\u0000(q\u0000~\u0000,q\u0000~\u0000.sq\u0000~\u0000/q\u0000~\u0000\u00cfq\u0000~\u00003sq\u0000~\u0000\u0018ppsq\u0000~\u0000%q\u0000~\u0000\u001cpq\u0000~\u0000Aq\u0000~"
+"\u0000Qq\u0000~\u0000.sq\u0000~\u0000/t\u0000\u0014NameIDMappingServiceq\u0000~\u0000kq\u0000~\u0000.sq\u0000~\u0000\u0018ppsq\u0000~\u0000\""
+"q\u0000~\u0000\u001cpsq\u0000~\u0000\u0018q\u0000~\u0000\u001cpsq\u0000~\u0000\u001dq\u0000~\u0000\u001cp\u0000sq\u0000~\u0000\u0018ppsq\u0000~\u0000\"q\u0000~\u0000\u001cpsq\u0000~\u0000%q\u0000~"
+"\u0000\u001cpq\u0000~\u0000(q\u0000~\u0000,q\u0000~\u0000.sq\u0000~\u0000/t\u0000Ecom.sun.identity.saml2.jaxb.metad"
+"ata.AssertionIDRequestServiceElementq\u0000~\u00003sq\u0000~\u0000\u001dq\u0000~\u0000\u001cp\u0000sq\u0000~\u0000\u0000"
+"ppsq\u0000~\u0000\u001dpp\u0000sq\u0000~\u0000\u0018ppsq\u0000~\u0000\"q\u0000~\u0000\u001cpsq\u0000~\u0000%q\u0000~\u0000\u001cpq\u0000~\u0000(q\u0000~\u0000,q\u0000~\u0000.sq"
+"\u0000~\u0000/q\u0000~\u0000\u00cfq\u0000~\u00003sq\u0000~\u0000\u0018ppsq\u0000~\u0000%q\u0000~\u0000\u001cpq\u0000~\u0000Aq\u0000~\u0000Qq\u0000~\u0000.sq\u0000~\u0000/t\u0000\u0019As"
+"sertionIDRequestServiceq\u0000~\u0000kq\u0000~\u0000.sq\u0000~\u0000\u0018ppsq\u0000~\u0000\"q\u0000~\u0000\u001cpsq\u0000~\u0000\u001dq"
+"\u0000~\u0000\u001cp\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000\u00ecsq\u0000~\u0000\u0018ppsq\u0000~\u0000%q\u0000~\u0000\u001cpq\u0000~\u0000Aq\u0000~\u0000Qq\u0000~\u0000.sq\u0000~\u0000/"
+"t\u0000\u0010AttributeProfileq\u0000~\u0000kq\u0000~\u0000.sq\u0000~\u0000\u0018ppsq\u0000~\u0000\"q\u0000~\u0000\u001cpsq\u0000~\u0000\u0018q\u0000~\u0000\u001c"
+"psq\u0000~\u0000\u001dq\u0000~\u0000\u001cp\u0000sq\u0000~\u0000\u0018ppsq\u0000~\u0000\"q\u0000~\u0000\u001cpsq\u0000~\u0000%q\u0000~\u0000\u001cpq\u0000~\u0000(q\u0000~\u0000,q\u0000~\u0000"
+".sq\u0000~\u0000/t\u00006com.sun.identity.saml2.jaxb.assertion.AttributeEle"
+"mentq\u0000~\u00003sq\u0000~\u0000\u001dq\u0000~\u0000\u001cp\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u001dpp\u0000sq\u0000~\u0000\u0018ppsq\u0000~\u0000\"q\u0000~\u0000\u001cps"
+"q\u0000~\u0000%q\u0000~\u0000\u001cpq\u0000~\u0000(q\u0000~\u0000,q\u0000~\u0000.sq\u0000~\u0000/t\u00003com.sun.identity.saml2.ja"
+"xb.assertion.AttributeTypeq\u0000~\u00003sq\u0000~\u0000\u0018ppsq\u0000~\u0000%q\u0000~\u0000\u001cpq\u0000~\u0000Aq\u0000~\u0000"
+"Qq\u0000~\u0000.sq\u0000~\u0000/t\u0000\tAttributet\u0000%urn:oasis:names:tc:SAML:2.0:asser"
+"tionq\u0000~\u0000.sq\u0000~\u0000\u0018ppsq\u0000~\u0000%q\u0000~\u0000\u001cpsq\u0000~\u0000>ppsr\u0000\u001fcom.sun.msv.datatyp"
+"e.xsd.IDType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000#com.sun.msv.datatype.xsd.NcnameTy"
+"pe\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\"com.sun.msv.datatype.xsd.TokenType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002"
+"\u0000\u0000xr\u0000#com.sun.msv.datatype.xsd.StringType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001Z\u0000\risAlw"
+"aysValidxq\u0000~\u0000Cq\u0000~\u0000Ht\u0000\u0002IDq\u0000~\u0000L\u0000q\u0000~\u0000Nsq\u0000~\u0000Oq\u0000~\u0001Vq\u0000~\u0000Hsq\u0000~\u0000/t\u0000\u0002"
+"IDt\u0000\u0000q\u0000~\u0000.sq\u0000~\u0000\u0018ppsq\u0000~\u0000%q\u0000~\u0000\u001cpsq\u0000~\u0000>ppsr\u0000%com.sun.msv.dataty"
+"pe.xsd.DurationType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000Cq\u0000~\u0000Ht\u0000\bdurationq\u0000~\u0000Lq\u0000~"
+"\u0000Nsq\u0000~\u0000Oq\u0000~\u0001`q\u0000~\u0000Hsq\u0000~\u0000/t\u0000\rcacheDurationq\u0000~\u0001Zq\u0000~\u0000.sq\u0000~\u0000\u0018ppsq"
+"\u0000~\u0000%q\u0000~\u0000\u001cpq\u0000~\u0000\u00ecsq\u0000~\u0000/t\u0000\berrorURLq\u0000~\u0001Zq\u0000~\u0000.sq\u0000~\u0000%ppsq\u0000~\u0000>ppsr"
+"\u0000!com.sun.msv.datatype.xsd.ListType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bitemTypet\u0000)"
+"Lcom/sun/msv/datatype/xsd/XSDatatypeImpl;xq\u0000~\u0000Dq\u0000~\u0000kt\u0000\u000eanyUR"
+"IListTypeq\u0000~\u0000Lq\u0000~\u0000\u00eeq\u0000~\u0000Npsq\u0000~\u0000/t\u0000\u001aprotocolSupportEnumeration"
+"q\u0000~\u0001Zsq\u0000~\u0000\u0018ppsq\u0000~\u0000%q\u0000~\u0000\u001cpsq\u0000~\u0000>ppsr\u0000%com.sun.msv.datatype.xs"
+"d.DateTimeType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000)com.sun.msv.datatype.xsd.DateTi"
+"meBaseType\u0014W\u001a@3\u00a5\u00b4\u00e5\u0002\u0000\u0000xq\u0000~\u0000Cq\u0000~\u0000Ht\u0000\bdateTimeq\u0000~\u0000Lq\u0000~\u0000Nsq\u0000~\u0000Oq"
+"\u0000~\u0001vq\u0000~\u0000Hsq\u0000~\u0000/t\u0000\nvalidUntilq\u0000~\u0001Zq\u0000~\u0000.sq\u0000~\u0000\u0018ppsq\u0000~\u0000%q\u0000~\u0000\u001cpsq"
+"\u0000~\u0000>ppsr\u0000$com.sun.msv.datatype.xsd.BooleanType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000"
+"~\u0000Cq\u0000~\u0000Ht\u0000\u0007booleanq\u0000~\u0000Lq\u0000~\u0000Nsq\u0000~\u0000Oq\u0000~\u0001\u007fq\u0000~\u0000Hsq\u0000~\u0000/t\u0000\u0017WantAut"
+"hnRequestsSignedq\u0000~\u0001Zq\u0000~\u0000.sr\u0000\"com.sun.msv.grammar.Expression"
+"Pool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun/msv/grammar/Expression"
+"Pool$ClosedHash;xpsr\u0000-com.sun.msv.grammar.ExpressionPool$Clo"
+"sedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0003\u0000\u0003I\u0000\u0005countB\u0000\rstreamVersionL\u0000\u0006parentt\u0000$Lcom/s"
+"un/msv/grammar/ExpressionPool;xp\u0000\u0000\u0000\u0088\u0001pq\u0000~\u0000\u00afq\u0000~\u0000\u00b7q\u0000~\u0000\u00c4q\u0000~\u0000\u0081q\u0000"
+"~\u0001\fq\u0000~\u0001\u0000q\u0000~\u0000\u00f8q\u0000~\u0000\u00e0q\u0000~\u0000\u00d8q\u0000~\u0000\u00cbq\u0000~\u0000\u00c3q\u0000~\u0000!q\u0000~\u00007q\u0000~\u0000Zq\u0000~\u0000bq\u0000~\u0000pq\u0000"
+"~\u0000xq\u0000~\u0000\u0084q\u0000~\u0000\u008cq\u0000~\u0000\u0099q\u0000~\u0000\u00a1q\u0000~\u0000\u00aeq\u0000~\u0000\u00b6q\u0000~\u0001)q\u0000~\u0001!q\u0000~\u0001\u0015q\u0000~\u0001\rq\u0000~\u0000\u0014q\u0000"
+"~\u0001\u0001q\u0000~\u0000\u00f9q\u0000~\u0000\u00e1q\u0000~\u0000\u00d9q\u0000~\u0000\u00ccq\u0000~\u0000$q\u0000~\u00008q\u0000~\u0000[q\u0000~\u0000cq\u0000~\u0000qq\u0000~\u0000yq\u0000~\u0000\u0085q\u0000"
+"~\u0001=q\u0000~\u0001<q\u0000~\u0001Eq\u0000~\u0001Dq\u0000~\u0000\u0006q\u0000~\u0001pq\u0000~\u0000\u0015q\u0000~\u0001[q\u0000~\u00010q\u0000~\u0000\u00e8q\u0000~\u0000\u000fq\u0000~\u0000\fq\u0000"
+"~\u0001Nq\u0000~\u0000\u0005q\u0000~\u0000\u0007q\u0000~\u0001zq\u0000~\u0000\nq\u0000~\u0000\u0016q\u0000~\u0000\u000eq\u0000~\u0000\bq\u0000~\u0000\rq\u0000~\u00013q\u0000~\u0000\u00ebq\u0000~\u0000\tq\u0000"
+"~\u00011q\u0000~\u0000\u00e9q\u0000~\u0000\u000bq\u0000~\u0001dq\u0000~\u0000\u0017q\u0000~\u0001\u001dq\u0000~\u0001\tq\u0000~\u0001&q\u0000~\u0001\u0012q\u0000~\u0000\u00feq\u0000~\u0000\u00deq\u0000~\u0000\u00c9q\u0000"
+"~\u00005q\u0000~\u00014q\u0000~\u0001,q\u0000~\u0001\u0018q\u0000~\u0001\u0004q\u0000~\u0000\u00f1q\u0000~\u0000\u00e4q\u0000~\u0000\u00d0q\u0000~\u0000<q\u0000~\u0000gq\u0000~\u0000}q\u0000~\u0000\u0091q\u0000"
+"~\u0000\u00a6q\u0000~\u0000\u00bbq\u0000~\u0000`q\u0000~\u0000vq\u0000~\u0000\u008aq\u0000~\u0000\u009fq\u0000~\u0000\u00b4q\u0000~\u0000\u00f5q\u0000~\u0000\u00d5q\u0000~\u0000\u00c0q\u0000~\u0000mq\u0000~\u0000\u0096q\u0000"
+"~\u0000\u00abq\u0000~\u0001Iq\u0000~\u0001Bq\u0000~\u00019q\u0000~\u0000\u0013q\u0000~\u0000\u0010q\u0000~\u0001\u001eq\u0000~\u0001\nq\u0000~\u0000\u00f6q\u0000~\u0000\u00d6q\u0000~\u0000\u00c1q\u0000~\u0000\u001aq\u0000"
+"~\u0000Xq\u0000~\u0000nq\u0000~\u0000\u0082q\u0000~\u0000\u0097q\u0000~\u0000\u00acq\u0000~\u0001:q\u0000~\u0000\u0012q\u0000~\u0001\u001cq\u0000~\u0001\bq\u0000~\u0000\u00d4q\u0000~\u0000\u00bfq\u0000~\u0000lq\u0000"
+"~\u0000\u0095q\u0000~\u0000\u00aaq\u0000~\u00018q\u0000~\u0000\u0011q\u0000~\u0001(q\u0000~\u0001 q\u0000~\u0001\u0014q\u0000~\u0000\u0019q\u0000~\u0000Wq\u0000~\u0000\u008dq\u0000~\u0000\u009aq\u0000~\u0000\u00a2x"));
        }
        return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
    }

    public class Unmarshaller
        extends com.sun.identity.saml2.jaxb.assertion.impl.runtime.AbstractUnmarshallingEventHandlerImpl
    {


        public Unmarshaller(com.sun.identity.saml2.jaxb.assertion.impl.runtime.UnmarshallingContext context) {
            super(context, "--------------------");
        }

        protected Unmarshaller(com.sun.identity.saml2.jaxb.assertion.impl.runtime.UnmarshallingContext context, int startState) {
            this(context);
            state = startState;
        }

        public java.lang.Object owner() {
            return com.sun.identity.saml2.jaxb.metadata.impl.IDPSSODescriptorTypeImpl.this;
        }

        public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  14 :
                        if (("AttributeProfile" == ___local)&&("urn:oasis:names:tc:SAML:2.0:metadata" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 12;
                            return ;
                        }
                        if (("Attribute" == ___local)&&("urn:oasis:names:tc:SAML:2.0:assertion" == ___uri)) {
                            _getAttribute().add(((com.sun.identity.saml2.jaxb.assertion.impl.AttributeElementImpl) spawnChildFromEnterElement((com.sun.identity.saml2.jaxb.assertion.impl.AttributeElementImpl.class), 17, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("Attribute" == ___local)&&("urn:oasis:names:tc:SAML:2.0:assertion" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 15;
                            return ;
                        }
                        state = 17;
                        continue outer;
                    case  8 :
                        if (("NameIDMappingService" == ___local)&&("urn:oasis:names:tc:SAML:2.0:metadata" == ___uri)) {
                            _getNameIDMappingService().add(((com.sun.identity.saml2.jaxb.metadata.impl.NameIDMappingServiceElementImpl) spawnChildFromEnterElement((com.sun.identity.saml2.jaxb.metadata.impl.NameIDMappingServiceElementImpl.class), 8, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("NameIDMappingService" == ___local)&&("urn:oasis:names:tc:SAML:2.0:metadata" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 6;
                            return ;
                        }
                        if (("AssertionIDRequestService" == ___local)&&("urn:oasis:names:tc:SAML:2.0:metadata" == ___uri)) {
                            _getAssertionIDRequestService().add(((com.sun.identity.saml2.jaxb.metadata.impl.AssertionIDRequestServiceElementImpl) spawnChildFromEnterElement((com.sun.identity.saml2.jaxb.metadata.impl.AssertionIDRequestServiceElementImpl.class), 11, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("AssertionIDRequestService" == ___local)&&("urn:oasis:names:tc:SAML:2.0:metadata" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 9;
                            return ;
                        }
                        state = 11;
                        continue outer;
                    case  18 :
                        attIdx = context.getAttribute("", "Binding");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        break;
                    case  9 :
                        attIdx = context.getAttribute("", "Binding");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        break;
                    case  15 :
                        attIdx = context.getAttribute("", "FriendlyName");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        attIdx = context.getAttribute("", "Name");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        break;
                    case  5 :
                        if (("SingleSignOnService" == ___local)&&("urn:oasis:names:tc:SAML:2.0:metadata" == ___uri)) {
                            _getSingleSignOnService().add(((com.sun.identity.saml2.jaxb.metadata.impl.SingleSignOnServiceElementImpl) spawnChildFromEnterElement((com.sun.identity.saml2.jaxb.metadata.impl.SingleSignOnServiceElementImpl.class), 5, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("SingleSignOnService" == ___local)&&("urn:oasis:names:tc:SAML:2.0:metadata" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 18;
                            return ;
                        }
                        if (("NameIDMappingService" == ___local)&&("urn:oasis:names:tc:SAML:2.0:metadata" == ___uri)) {
                            _getNameIDMappingService().add(((com.sun.identity.saml2.jaxb.metadata.impl.NameIDMappingServiceElementImpl) spawnChildFromEnterElement((com.sun.identity.saml2.jaxb.metadata.impl.NameIDMappingServiceElementImpl.class), 8, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("NameIDMappingService" == ___local)&&("urn:oasis:names:tc:SAML:2.0:metadata" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 6;
                            return ;
                        }
                        state = 8;
                        continue outer;
                    case  6 :
                        attIdx = context.getAttribute("", "Binding");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        break;
                    case  4 :
                        if (("SingleSignOnService" == ___local)&&("urn:oasis:names:tc:SAML:2.0:metadata" == ___uri)) {
                            _getSingleSignOnService().add(((com.sun.identity.saml2.jaxb.metadata.impl.SingleSignOnServiceElementImpl) spawnChildFromEnterElement((com.sun.identity.saml2.jaxb.metadata.impl.SingleSignOnServiceElementImpl.class), 5, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("SingleSignOnService" == ___local)&&("urn:oasis:names:tc:SAML:2.0:metadata" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 18;
                            return ;
                        }
                        break;
                    case  3 :
                        attIdx = context.getAttribute("", "ID");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        attIdx = context.getAttribute("", "cacheDuration");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        attIdx = context.getAttribute("", "errorURL");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        attIdx = context.getAttribute("", "protocolSupportEnumeration");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        break;
                    case  11 :
                        if (("AssertionIDRequestService" == ___local)&&("urn:oasis:names:tc:SAML:2.0:metadata" == ___uri)) {
                            _getAssertionIDRequestService().add(((com.sun.identity.saml2.jaxb.metadata.impl.AssertionIDRequestServiceElementImpl) spawnChildFromEnterElement((com.sun.identity.saml2.jaxb.metadata.impl.AssertionIDRequestServiceElementImpl.class), 11, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("AssertionIDRequestService" == ___local)&&("urn:oasis:names:tc:SAML:2.0:metadata" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 9;
                            return ;
                        }
                        if (("AttributeProfile" == ___local)&&("urn:oasis:names:tc:SAML:2.0:metadata" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 12;
                            return ;
                        }
                        state = 14;
                        continue outer;
                    case  17 :
                        if (("Attribute" == ___local)&&("urn:oasis:names:tc:SAML:2.0:assertion" == ___uri)) {
                            _getAttribute().add(((com.sun.identity.saml2.jaxb.assertion.impl.AttributeElementImpl) spawnChildFromEnterElement((com.sun.identity.saml2.jaxb.assertion.impl.AttributeElementImpl.class), 17, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("Attribute" == ___local)&&("urn:oasis:names:tc:SAML:2.0:assertion" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 15;
                            return ;
                        }
                        revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                        return ;
                    case  0 :
                        attIdx = context.getAttribute("", "WantAuthnRequestsSigned");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 3;
                            eatText1(v);
                            continue outer;
                        }
                        state = 3;
                        continue outer;
                }
                super.enterElement(___uri, ___local, ___qname, __atts);
                break;
            }
        }

        private void eatText1(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _WantAuthnRequestsSigned = javax.xml.bind.DatatypeConverter.parseBoolean(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                has_WantAuthnRequestsSigned = true;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  10 :
                        if (("AssertionIDRequestService" == ___local)&&("urn:oasis:names:tc:SAML:2.0:metadata" == ___uri)) {
                            context.popAttributes();
                            state = 11;
                            return ;
                        }
                        break;
                    case  14 :
                        state = 17;
                        continue outer;
                    case  8 :
                        state = 11;
                        continue outer;
                    case  18 :
                        attIdx = context.getAttribute("", "Binding");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                    case  9 :
                        attIdx = context.getAttribute("", "Binding");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                    case  15 :
                        attIdx = context.getAttribute("", "FriendlyName");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "Name");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                    case  16 :
                        if (("Attribute" == ___local)&&("urn:oasis:names:tc:SAML:2.0:assertion" == ___uri)) {
                            context.popAttributes();
                            state = 17;
                            return ;
                        }
                        break;
                    case  5 :
                        state = 8;
                        continue outer;
                    case  6 :
                        attIdx = context.getAttribute("", "Binding");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                    case  13 :
                        if (("AttributeProfile" == ___local)&&("urn:oasis:names:tc:SAML:2.0:metadata" == ___uri)) {
                            context.popAttributes();
                            state = 14;
                            return ;
                        }
                        break;
                    case  3 :
                        attIdx = context.getAttribute("", "ID");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "cacheDuration");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "errorURL");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "protocolSupportEnumeration");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                    case  11 :
                        state = 14;
                        continue outer;
                    case  17 :
                        revertToParentFromLeaveElement(___uri, ___local, ___qname);
                        return ;
                    case  7 :
                        if (("NameIDMappingService" == ___local)&&("urn:oasis:names:tc:SAML:2.0:metadata" == ___uri)) {
                            context.popAttributes();
                            state = 8;
                            return ;
                        }
                        break;
                    case  19 :
                        if (("SingleSignOnService" == ___local)&&("urn:oasis:names:tc:SAML:2.0:metadata" == ___uri)) {
                            context.popAttributes();
                            state = 5;
                            return ;
                        }
                        break;
                    case  0 :
                        attIdx = context.getAttribute("", "WantAuthnRequestsSigned");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 3;
                            eatText1(v);
                            continue outer;
                        }
                        state = 3;
                        continue outer;
                }
                super.leaveElement(___uri, ___local, ___qname);
                break;
            }
        }

        public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  14 :
                        state = 17;
                        continue outer;
                    case  8 :
                        state = 11;
                        continue outer;
                    case  18 :
                        if (("Binding" == ___local)&&("" == ___uri)) {
                            _getSingleSignOnService().add(((com.sun.identity.saml2.jaxb.metadata.impl.EndpointTypeImpl) spawnChildFromEnterAttribute((com.sun.identity.saml2.jaxb.metadata.impl.EndpointTypeImpl.class), 19, ___uri, ___local, ___qname)));
                            return ;
                        }
                        break;
                    case  9 :
                        if (("Binding" == ___local)&&("" == ___uri)) {
                            _getAssertionIDRequestService().add(((com.sun.identity.saml2.jaxb.metadata.impl.EndpointTypeImpl) spawnChildFromEnterAttribute((com.sun.identity.saml2.jaxb.metadata.impl.EndpointTypeImpl.class), 10, ___uri, ___local, ___qname)));
                            return ;
                        }
                        break;
                    case  15 :
                        if (("FriendlyName" == ___local)&&("" == ___uri)) {
                            _getAttribute().add(((com.sun.identity.saml2.jaxb.assertion.impl.AttributeTypeImpl) spawnChildFromEnterAttribute((com.sun.identity.saml2.jaxb.assertion.impl.AttributeTypeImpl.class), 16, ___uri, ___local, ___qname)));
                            return ;
                        }
                        if (("Name" == ___local)&&("" == ___uri)) {
                            _getAttribute().add(((com.sun.identity.saml2.jaxb.assertion.impl.AttributeTypeImpl) spawnChildFromEnterAttribute((com.sun.identity.saml2.jaxb.assertion.impl.AttributeTypeImpl.class), 16, ___uri, ___local, ___qname)));
                            return ;
                        }
                        break;
                    case  5 :
                        state = 8;
                        continue outer;
                    case  6 :
                        if (("Binding" == ___local)&&("" == ___uri)) {
                            _getNameIDMappingService().add(((com.sun.identity.saml2.jaxb.metadata.impl.EndpointTypeImpl) spawnChildFromEnterAttribute((com.sun.identity.saml2.jaxb.metadata.impl.EndpointTypeImpl.class), 7, ___uri, ___local, ___qname)));
                            return ;
                        }
                        break;
                    case  3 :
                        if (("ID" == ___local)&&("" == ___uri)) {
                            spawnHandlerFromEnterAttribute((((com.sun.identity.saml2.jaxb.metadata.impl.SSODescriptorTypeImpl)com.sun.identity.saml2.jaxb.metadata.impl.IDPSSODescriptorTypeImpl.this).new Unmarshaller(context)), 4, ___uri, ___local, ___qname);
                            return ;
                        }
                        if (("cacheDuration" == ___local)&&("" == ___uri)) {
                            spawnHandlerFromEnterAttribute((((com.sun.identity.saml2.jaxb.metadata.impl.SSODescriptorTypeImpl)com.sun.identity.saml2.jaxb.metadata.impl.IDPSSODescriptorTypeImpl.this).new Unmarshaller(context)), 4, ___uri, ___local, ___qname);
                            return ;
                        }
                        if (("errorURL" == ___local)&&("" == ___uri)) {
                            spawnHandlerFromEnterAttribute((((com.sun.identity.saml2.jaxb.metadata.impl.SSODescriptorTypeImpl)com.sun.identity.saml2.jaxb.metadata.impl.IDPSSODescriptorTypeImpl.this).new Unmarshaller(context)), 4, ___uri, ___local, ___qname);
                            return ;
                        }
                        if (("protocolSupportEnumeration" == ___local)&&("" == ___uri)) {
                            spawnHandlerFromEnterAttribute((((com.sun.identity.saml2.jaxb.metadata.impl.SSODescriptorTypeImpl)com.sun.identity.saml2.jaxb.metadata.impl.IDPSSODescriptorTypeImpl.this).new Unmarshaller(context)), 4, ___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                    case  11 :
                        state = 14;
                        continue outer;
                    case  17 :
                        revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                        return ;
                    case  0 :
                        if (("WantAuthnRequestsSigned" == ___local)&&("" == ___uri)) {
                            state = 1;
                            return ;
                        }
                        state = 3;
                        continue outer;
                }
                super.enterAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  14 :
                        state = 17;
                        continue outer;
                    case  8 :
                        state = 11;
                        continue outer;
                    case  2 :
                        if (("WantAuthnRequestsSigned" == ___local)&&("" == ___uri)) {
                            state = 3;
                            return ;
                        }
                        break;
                    case  18 :
                        attIdx = context.getAttribute("", "Binding");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                    case  9 :
                        attIdx = context.getAttribute("", "Binding");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                    case  15 :
                        attIdx = context.getAttribute("", "FriendlyName");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "Name");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                    case  5 :
                        state = 8;
                        continue outer;
                    case  6 :
                        attIdx = context.getAttribute("", "Binding");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                    case  3 :
                        attIdx = context.getAttribute("", "ID");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "cacheDuration");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "errorURL");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "protocolSupportEnumeration");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                    case  11 :
                        state = 14;
                        continue outer;
                    case  17 :
                        revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                        return ;
                    case  0 :
                        attIdx = context.getAttribute("", "WantAuthnRequestsSigned");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 3;
                            eatText1(v);
                            continue outer;
                        }
                        state = 3;
                        continue outer;
                }
                super.leaveAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void handleText(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                try {
                    switch (state) {
                        case  14 :
                            state = 17;
                            continue outer;
                        case  8 :
                            state = 11;
                            continue outer;
                        case  18 :
                            attIdx = context.getAttribute("", "Binding");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            break;
                        case  9 :
                            attIdx = context.getAttribute("", "Binding");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            break;
                        case  15 :
                            attIdx = context.getAttribute("", "FriendlyName");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            attIdx = context.getAttribute("", "Name");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            break;
                        case  1 :
                            state = 2;
                            eatText1(value);
                            return ;
                        case  5 :
                            state = 8;
                            continue outer;
                        case  6 :
                            attIdx = context.getAttribute("", "Binding");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            break;
                        case  3 :
                            attIdx = context.getAttribute("", "ID");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            attIdx = context.getAttribute("", "cacheDuration");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            attIdx = context.getAttribute("", "errorURL");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            attIdx = context.getAttribute("", "protocolSupportEnumeration");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            break;
                        case  11 :
                            state = 14;
                            continue outer;
                        case  17 :
                            revertToParentFromText(value);
                            return ;
                        case  12 :
                            state = 13;
                            eatText2(value);
                            return ;
                        case  0 :
                            attIdx = context.getAttribute("", "WantAuthnRequestsSigned");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 3;
                                eatText1(v);
                                continue outer;
                            }
                            state = 3;
                            continue outer;
                    }
                } catch (java.lang.RuntimeException e) {
                    handleUnexpectedTextException(value, e);
                }
                break;
            }
        }

        private void eatText2(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _getAttributeProfile().add(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

    }

}
