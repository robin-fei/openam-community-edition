//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v1.0.6-b27-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2012.06.11 at 10:34:07 AM PDT 
//


package com.sun.identity.saml2.jaxb.metadata.impl;

public class SSODescriptorTypeImpl
    extends com.sun.identity.saml2.jaxb.metadata.impl.RoleDescriptorTypeImpl
    implements com.sun.identity.saml2.jaxb.metadata.SSODescriptorType, com.sun.xml.bind.JAXBObject, com.sun.identity.saml2.jaxb.assertion.impl.runtime.UnmarshallableObject, com.sun.identity.saml2.jaxb.assertion.impl.runtime.XMLSerializable, com.sun.identity.saml2.jaxb.assertion.impl.runtime.ValidatableObject
{

    protected com.sun.xml.bind.util.ListImpl _ManageNameIDService;
    protected com.sun.xml.bind.util.ListImpl _ArtifactResolutionService;
    protected com.sun.xml.bind.util.ListImpl _NameIDFormat;
    protected com.sun.xml.bind.util.ListImpl _SingleLogoutService;
    public final static java.lang.Class version = (com.sun.identity.saml2.jaxb.metadata.impl.JAXBVersion.class);
    private static com.sun.msv.grammar.Grammar schemaFragment;

    private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
        return (com.sun.identity.saml2.jaxb.metadata.SSODescriptorType.class);
    }

    protected com.sun.xml.bind.util.ListImpl _getManageNameIDService() {
        if (_ManageNameIDService == null) {
            _ManageNameIDService = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
        }
        return _ManageNameIDService;
    }

    public java.util.List getManageNameIDService() {
        return _getManageNameIDService();
    }

    protected com.sun.xml.bind.util.ListImpl _getArtifactResolutionService() {
        if (_ArtifactResolutionService == null) {
            _ArtifactResolutionService = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
        }
        return _ArtifactResolutionService;
    }

    public java.util.List getArtifactResolutionService() {
        return _getArtifactResolutionService();
    }

    protected com.sun.xml.bind.util.ListImpl _getNameIDFormat() {
        if (_NameIDFormat == null) {
            _NameIDFormat = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
        }
        return _NameIDFormat;
    }

    public java.util.List getNameIDFormat() {
        return _getNameIDFormat();
    }

    protected com.sun.xml.bind.util.ListImpl _getSingleLogoutService() {
        if (_SingleLogoutService == null) {
            _SingleLogoutService = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
        }
        return _SingleLogoutService;
    }

    public java.util.List getSingleLogoutService() {
        return _getSingleLogoutService();
    }

    public com.sun.identity.saml2.jaxb.assertion.impl.runtime.UnmarshallingEventHandler createUnmarshaller(com.sun.identity.saml2.jaxb.assertion.impl.runtime.UnmarshallingContext context) {
        return new com.sun.identity.saml2.jaxb.metadata.impl.SSODescriptorTypeImpl.Unmarshaller(context);
    }

    public void serializeBody(com.sun.identity.saml2.jaxb.assertion.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        int idx1 = 0;
        final int len1 = ((_ManageNameIDService == null)? 0 :_ManageNameIDService.size());
        int idx2 = 0;
        final int len2 = ((_ArtifactResolutionService == null)? 0 :_ArtifactResolutionService.size());
        int idx3 = 0;
        final int len3 = ((_NameIDFormat == null)? 0 :_NameIDFormat.size());
        int idx4 = 0;
        final int len4 = ((_SingleLogoutService == null)? 0 :_SingleLogoutService.size());
        super.serializeBody(context);
        while (idx2 != len2) {
            if (_ArtifactResolutionService.get(idx2) instanceof javax.xml.bind.Element) {
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _ArtifactResolutionService.get(idx2 ++)), "ArtifactResolutionService");
            } else {
                context.startElement("urn:oasis:names:tc:SAML:2.0:metadata", "ArtifactResolutionService");
                int idx_0 = idx2;
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _ArtifactResolutionService.get(idx_0 ++)), "ArtifactResolutionService");
                context.endNamespaceDecls();
                int idx_1 = idx2;
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _ArtifactResolutionService.get(idx_1 ++)), "ArtifactResolutionService");
                context.endAttributes();
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _ArtifactResolutionService.get(idx2 ++)), "ArtifactResolutionService");
                context.endElement();
            }
        }
        while (idx4 != len4) {
            if (_SingleLogoutService.get(idx4) instanceof javax.xml.bind.Element) {
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _SingleLogoutService.get(idx4 ++)), "SingleLogoutService");
            } else {
                context.startElement("urn:oasis:names:tc:SAML:2.0:metadata", "SingleLogoutService");
                int idx_2 = idx4;
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _SingleLogoutService.get(idx_2 ++)), "SingleLogoutService");
                context.endNamespaceDecls();
                int idx_3 = idx4;
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _SingleLogoutService.get(idx_3 ++)), "SingleLogoutService");
                context.endAttributes();
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _SingleLogoutService.get(idx4 ++)), "SingleLogoutService");
                context.endElement();
            }
        }
        while (idx1 != len1) {
            if (_ManageNameIDService.get(idx1) instanceof javax.xml.bind.Element) {
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _ManageNameIDService.get(idx1 ++)), "ManageNameIDService");
            } else {
                context.startElement("urn:oasis:names:tc:SAML:2.0:metadata", "ManageNameIDService");
                int idx_4 = idx1;
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _ManageNameIDService.get(idx_4 ++)), "ManageNameIDService");
                context.endNamespaceDecls();
                int idx_5 = idx1;
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _ManageNameIDService.get(idx_5 ++)), "ManageNameIDService");
                context.endAttributes();
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _ManageNameIDService.get(idx1 ++)), "ManageNameIDService");
                context.endElement();
            }
        }
        while (idx3 != len3) {
            context.startElement("urn:oasis:names:tc:SAML:2.0:metadata", "NameIDFormat");
            int idx_6 = idx3;
            try {
                idx_6 += 1;
            } catch (java.lang.Exception e) {
                com.sun.identity.saml2.jaxb.assertion.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endNamespaceDecls();
            int idx_7 = idx3;
            try {
                idx_7 += 1;
            } catch (java.lang.Exception e) {
                com.sun.identity.saml2.jaxb.assertion.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttributes();
            try {
                context.text(((java.lang.String) _NameIDFormat.get(idx3 ++)), "NameIDFormat");
            } catch (java.lang.Exception e) {
                com.sun.identity.saml2.jaxb.assertion.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
    }

    public void serializeAttributes(com.sun.identity.saml2.jaxb.assertion.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        int idx1 = 0;
        final int len1 = ((_ManageNameIDService == null)? 0 :_ManageNameIDService.size());
        int idx2 = 0;
        final int len2 = ((_ArtifactResolutionService == null)? 0 :_ArtifactResolutionService.size());
        int idx3 = 0;
        final int len3 = ((_NameIDFormat == null)? 0 :_NameIDFormat.size());
        int idx4 = 0;
        final int len4 = ((_SingleLogoutService == null)? 0 :_SingleLogoutService.size());
        super.serializeAttributes(context);
        while (idx2 != len2) {
            if (_ArtifactResolutionService.get(idx2) instanceof javax.xml.bind.Element) {
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _ArtifactResolutionService.get(idx2 ++)), "ArtifactResolutionService");
            } else {
                idx2 += 1;
            }
        }
        while (idx4 != len4) {
            if (_SingleLogoutService.get(idx4) instanceof javax.xml.bind.Element) {
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _SingleLogoutService.get(idx4 ++)), "SingleLogoutService");
            } else {
                idx4 += 1;
            }
        }
        while (idx1 != len1) {
            if (_ManageNameIDService.get(idx1) instanceof javax.xml.bind.Element) {
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _ManageNameIDService.get(idx1 ++)), "ManageNameIDService");
            } else {
                idx1 += 1;
            }
        }
        while (idx3 != len3) {
            try {
                idx3 += 1;
            } catch (java.lang.Exception e) {
                com.sun.identity.saml2.jaxb.assertion.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
        }
    }

    public void serializeURIs(com.sun.identity.saml2.jaxb.assertion.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        int idx1 = 0;
        final int len1 = ((_ManageNameIDService == null)? 0 :_ManageNameIDService.size());
        int idx2 = 0;
        final int len2 = ((_ArtifactResolutionService == null)? 0 :_ArtifactResolutionService.size());
        int idx3 = 0;
        final int len3 = ((_NameIDFormat == null)? 0 :_NameIDFormat.size());
        int idx4 = 0;
        final int len4 = ((_SingleLogoutService == null)? 0 :_SingleLogoutService.size());
        super.serializeURIs(context);
        while (idx2 != len2) {
            if (_ArtifactResolutionService.get(idx2) instanceof javax.xml.bind.Element) {
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _ArtifactResolutionService.get(idx2 ++)), "ArtifactResolutionService");
            } else {
                idx2 += 1;
            }
        }
        while (idx4 != len4) {
            if (_SingleLogoutService.get(idx4) instanceof javax.xml.bind.Element) {
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _SingleLogoutService.get(idx4 ++)), "SingleLogoutService");
            } else {
                idx4 += 1;
            }
        }
        while (idx1 != len1) {
            if (_ManageNameIDService.get(idx1) instanceof javax.xml.bind.Element) {
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _ManageNameIDService.get(idx1 ++)), "ManageNameIDService");
            } else {
                idx1 += 1;
            }
        }
        while (idx3 != len3) {
            try {
                idx3 += 1;
            } catch (java.lang.Exception e) {
                com.sun.identity.saml2.jaxb.assertion.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
        }
    }

    public java.lang.Class getPrimaryInterface() {
        return (com.sun.identity.saml2.jaxb.metadata.SSODescriptorType.class);
    }

    public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
        if (schemaFragment == null) {
            schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.su"
+"n.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gra"
+"mmar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expressi"
+"on\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0002L\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000b"
+"expandedExpq\u0000~\u0000\u0002xpppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000pp"
+"sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsr\u0000\u001d"
+"com.sun.msv.grammar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0001ppsq\u0000~\u0000\u0012sr\u0000\u0011ja"
+"va.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000psr\u0000\'com.sun.msv.gramma"
+"r.trex.ElementPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\tnameClasst\u0000\u001fLcom/sun/msv/"
+"grammar/NameClass;xr\u0000\u001ecom.sun.msv.grammar.ElementExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001"
+"\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAttributesL\u0000\fcontentModelq\u0000~\u0000\u0002xq\u0000~\u0000\u0003q\u0000"
+"~\u0000\u0016p\u0000sq\u0000~\u0000\u0012ppsr\u0000 com.sun.msv.grammar.OneOrMoreExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000"
+"xr\u0000\u001ccom.sun.msv.grammar.UnaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0003expq\u0000~\u0000\u0002xq\u0000~\u0000\u0003"
+"q\u0000~\u0000\u0016psr\u0000 com.sun.msv.grammar.AttributeExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq"
+"\u0000~\u0000\u0002L\u0000\tnameClassq\u0000~\u0000\u0018xq\u0000~\u0000\u0003q\u0000~\u0000\u0016psr\u00002com.sun.msv.grammar.Exp"
+"ression$AnyStringExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003sq\u0000~\u0000\u0015\u0001q\u0000~\u0000\"sr\u0000 "
+"com.sun.msv.grammar.AnyNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.sun.msv.g"
+"rammar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.sun.msv.grammar.Express"
+"ion$EpsilonExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003q\u0000~\u0000#q\u0000~\u0000(sr\u0000#com.sun."
+"msv.grammar.SimpleNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNamet\u0000\u0012Ljava/l"
+"ang/String;L\u0000\fnamespaceURIq\u0000~\u0000*xq\u0000~\u0000%t\u00003com.sun.identity.sam"
+"l2.jaxb.xmlsig.SignatureElementt\u0000+http://java.sun.com/jaxb/x"
+"jc/dummy-elementssq\u0000~\u0000\u0017q\u0000~\u0000\u0016p\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0017pp\u0000sq\u0000~\u0000\u0012ppsq\u0000~\u0000"
+"\u001cq\u0000~\u0000\u0016psq\u0000~\u0000\u001fq\u0000~\u0000\u0016pq\u0000~\u0000\"q\u0000~\u0000&q\u0000~\u0000(sq\u0000~\u0000)t\u00000com.sun.identity."
+"saml2.jaxb.xmlsig.SignatureTypeq\u0000~\u0000-sq\u0000~\u0000\u0012ppsq\u0000~\u0000\u001fq\u0000~\u0000\u0016psr\u0000\u001b"
+"com.sun.msv.grammar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/relaxng/d"
+"atatype/Datatype;L\u0000\u0006exceptq\u0000~\u0000\u0002L\u0000\u0004namet\u0000\u001dLcom/sun/msv/util/S"
+"tringPair;xq\u0000~\u0000\u0003ppsr\u0000\"com.sun.msv.datatype.xsd.QnameType\u0000\u0000\u0000\u0000"
+"\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000*com.sun.msv.datatype.xsd.BuiltinAtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.datatype.xsd.ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'"
+"com.sun.msv.datatype.xsd.XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespa"
+"ceUriq\u0000~\u0000*L\u0000\btypeNameq\u0000~\u0000*L\u0000\nwhiteSpacet\u0000.Lcom/sun/msv/datat"
+"ype/xsd/WhiteSpaceProcessor;xpt\u0000 http://www.w3.org/2001/XMLS"
+"chemat\u0000\u0005QNamesr\u00005com.sun.msv.datatype.xsd.WhiteSpaceProcesso"
+"r$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun.msv.datatype.xsd.WhiteSpace"
+"Processor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.sun.msv.grammar.Expression$Nul"
+"lSetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003q\u0000~\u0000\u0016psr\u0000\u001bcom.sun.msv.util.St"
+"ringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000*L\u0000\fnamespaceURIq\u0000~\u0000*xpq\u0000"
+"~\u0000Cq\u0000~\u0000Bsq\u0000~\u0000)t\u0000\u0004typet\u0000)http://www.w3.org/2001/XMLSchema-ins"
+"tanceq\u0000~\u0000(sq\u0000~\u0000)t\u0000\tSignaturet\u0000\"http://www.w3.org/2000/09/xml"
+"dsig#q\u0000~\u0000(sq\u0000~\u0000\u0012ppsq\u0000~\u0000\u0012q\u0000~\u0000\u0016psq\u0000~\u0000\u0017q\u0000~\u0000\u0016p\u0000sq\u0000~\u0000\u0012ppsq\u0000~\u0000\u001cq\u0000~"
+"\u0000\u0016psq\u0000~\u0000\u001fq\u0000~\u0000\u0016pq\u0000~\u0000\"q\u0000~\u0000&q\u0000~\u0000(sq\u0000~\u0000)t\u00006com.sun.identity.saml"
+"2.jaxb.metadata.ExtensionsElementq\u0000~\u0000-sq\u0000~\u0000\u0017q\u0000~\u0000\u0016p\u0000sq\u0000~\u0000\u0000pps"
+"q\u0000~\u0000\u0017pp\u0000sq\u0000~\u0000\u0012ppsq\u0000~\u0000\u001cq\u0000~\u0000\u0016psq\u0000~\u0000\u001fq\u0000~\u0000\u0016pq\u0000~\u0000\"q\u0000~\u0000&q\u0000~\u0000(sq\u0000~\u0000"
+")t\u00003com.sun.identity.saml2.jaxb.metadata.ExtensionsTypeq\u0000~\u0000-"
+"sq\u0000~\u0000\u0012ppsq\u0000~\u0000\u001fq\u0000~\u0000\u0016pq\u0000~\u0000;q\u0000~\u0000Kq\u0000~\u0000(sq\u0000~\u0000)t\u0000\nExtensionst\u0000$urn"
+":oasis:names:tc:SAML:2.0:metadataq\u0000~\u0000(sq\u0000~\u0000\u0012ppsq\u0000~\u0000\u001cq\u0000~\u0000\u0016psq"
+"\u0000~\u0000\u0012q\u0000~\u0000\u0016psq\u0000~\u0000\u0017q\u0000~\u0000\u0016p\u0000sq\u0000~\u0000\u0012ppsq\u0000~\u0000\u001cq\u0000~\u0000\u0016psq\u0000~\u0000\u001fq\u0000~\u0000\u0016pq\u0000~\u0000\""
+"q\u0000~\u0000&q\u0000~\u0000(sq\u0000~\u0000)t\u00009com.sun.identity.saml2.jaxb.metadata.KeyD"
+"escriptorElementq\u0000~\u0000-sq\u0000~\u0000\u0017q\u0000~\u0000\u0016p\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0017pp\u0000sq\u0000~\u0000\u0012pps"
+"q\u0000~\u0000\u001cq\u0000~\u0000\u0016psq\u0000~\u0000\u001fq\u0000~\u0000\u0016pq\u0000~\u0000\"q\u0000~\u0000&q\u0000~\u0000(sq\u0000~\u0000)t\u00006com.sun.ident"
+"ity.saml2.jaxb.metadata.KeyDescriptorTypeq\u0000~\u0000-sq\u0000~\u0000\u0012ppsq\u0000~\u0000\u001f"
+"q\u0000~\u0000\u0016pq\u0000~\u0000;q\u0000~\u0000Kq\u0000~\u0000(sq\u0000~\u0000)t\u0000\rKeyDescriptorq\u0000~\u0000eq\u0000~\u0000(sq\u0000~\u0000\u0012p"
+"psq\u0000~\u0000\u0012q\u0000~\u0000\u0016psq\u0000~\u0000\u0017q\u0000~\u0000\u0016p\u0000sq\u0000~\u0000\u0012ppsq\u0000~\u0000\u001cq\u0000~\u0000\u0016psq\u0000~\u0000\u001fq\u0000~\u0000\u0016pq\u0000"
+"~\u0000\"q\u0000~\u0000&q\u0000~\u0000(sq\u0000~\u0000)t\u00008com.sun.identity.saml2.jaxb.metadata.O"
+"rganizationElementq\u0000~\u0000-sq\u0000~\u0000\u0017q\u0000~\u0000\u0016p\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0017pp\u0000sq\u0000~\u0000\u0012p"
+"psq\u0000~\u0000\u001cq\u0000~\u0000\u0016psq\u0000~\u0000\u001fq\u0000~\u0000\u0016pq\u0000~\u0000\"q\u0000~\u0000&q\u0000~\u0000(sq\u0000~\u0000)t\u00005com.sun.ide"
+"ntity.saml2.jaxb.metadata.OrganizationTypeq\u0000~\u0000-sq\u0000~\u0000\u0012ppsq\u0000~\u0000"
+"\u001fq\u0000~\u0000\u0016pq\u0000~\u0000;q\u0000~\u0000Kq\u0000~\u0000(sq\u0000~\u0000)t\u0000\fOrganizationq\u0000~\u0000eq\u0000~\u0000(sq\u0000~\u0000\u0012p"
+"psq\u0000~\u0000\u001cq\u0000~\u0000\u0016psq\u0000~\u0000\u0012q\u0000~\u0000\u0016psq\u0000~\u0000\u0017q\u0000~\u0000\u0016p\u0000sq\u0000~\u0000\u0012ppsq\u0000~\u0000\u001cq\u0000~\u0000\u0016psq"
+"\u0000~\u0000\u001fq\u0000~\u0000\u0016pq\u0000~\u0000\"q\u0000~\u0000&q\u0000~\u0000(sq\u0000~\u0000)t\u00009com.sun.identity.saml2.jax"
+"b.metadata.ContactPersonElementq\u0000~\u0000-sq\u0000~\u0000\u0017q\u0000~\u0000\u0016p\u0000sq\u0000~\u0000\u0000ppsq\u0000"
+"~\u0000\u0017pp\u0000sq\u0000~\u0000\u0012ppsq\u0000~\u0000\u001cq\u0000~\u0000\u0016psq\u0000~\u0000\u001fq\u0000~\u0000\u0016pq\u0000~\u0000\"q\u0000~\u0000&q\u0000~\u0000(sq\u0000~\u0000)t"
+"\u00000com.sun.identity.saml2.jaxb.metadata.ContactTypeq\u0000~\u0000-sq\u0000~\u0000"
+"\u0012ppsq\u0000~\u0000\u001fq\u0000~\u0000\u0016pq\u0000~\u0000;q\u0000~\u0000Kq\u0000~\u0000(sq\u0000~\u0000)t\u0000\rContactPersonq\u0000~\u0000eq\u0000~"
+"\u0000(sq\u0000~\u0000\u0012ppsq\u0000~\u0000\u001cq\u0000~\u0000\u0016psq\u0000~\u0000\u0012q\u0000~\u0000\u0016psq\u0000~\u0000\u0017q\u0000~\u0000\u0016p\u0000sq\u0000~\u0000\u0012ppsq\u0000~\u0000"
+"\u001cq\u0000~\u0000\u0016psq\u0000~\u0000\u001fq\u0000~\u0000\u0016pq\u0000~\u0000\"q\u0000~\u0000&q\u0000~\u0000(sq\u0000~\u0000)t\u0000Ecom.sun.identity."
+"saml2.jaxb.metadata.ArtifactResolutionServiceElementq\u0000~\u0000-sq\u0000"
+"~\u0000\u0017q\u0000~\u0000\u0016p\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0017pp\u0000sq\u0000~\u0000\u0012ppsq\u0000~\u0000\u001cq\u0000~\u0000\u0016psq\u0000~\u0000\u001fq\u0000~\u0000\u0016pq"
+"\u0000~\u0000\"q\u0000~\u0000&q\u0000~\u0000(sq\u0000~\u0000)t\u00008com.sun.identity.saml2.jaxb.metadata."
+"IndexedEndpointTypeq\u0000~\u0000-sq\u0000~\u0000\u0012ppsq\u0000~\u0000\u001fq\u0000~\u0000\u0016pq\u0000~\u0000;q\u0000~\u0000Kq\u0000~\u0000(s"
+"q\u0000~\u0000)t\u0000\u0019ArtifactResolutionServiceq\u0000~\u0000eq\u0000~\u0000(sq\u0000~\u0000\u0012ppsq\u0000~\u0000\u001cq\u0000~"
+"\u0000\u0016psq\u0000~\u0000\u0012q\u0000~\u0000\u0016psq\u0000~\u0000\u0017q\u0000~\u0000\u0016p\u0000sq\u0000~\u0000\u0012ppsq\u0000~\u0000\u001cq\u0000~\u0000\u0016psq\u0000~\u0000\u001fq\u0000~\u0000\u0016p"
+"q\u0000~\u0000\"q\u0000~\u0000&q\u0000~\u0000(sq\u0000~\u0000)t\u0000?com.sun.identity.saml2.jaxb.metadata"
+".SingleLogoutServiceElementq\u0000~\u0000-sq\u0000~\u0000\u0017q\u0000~\u0000\u0016p\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0017p"
+"p\u0000sq\u0000~\u0000\u0012ppsq\u0000~\u0000\u001cq\u0000~\u0000\u0016psq\u0000~\u0000\u001fq\u0000~\u0000\u0016pq\u0000~\u0000\"q\u0000~\u0000&q\u0000~\u0000(sq\u0000~\u0000)t\u00001co"
+"m.sun.identity.saml2.jaxb.metadata.EndpointTypeq\u0000~\u0000-sq\u0000~\u0000\u0012pp"
+"sq\u0000~\u0000\u001fq\u0000~\u0000\u0016pq\u0000~\u0000;q\u0000~\u0000Kq\u0000~\u0000(sq\u0000~\u0000)t\u0000\u0013SingleLogoutServiceq\u0000~\u0000e"
+"q\u0000~\u0000(sq\u0000~\u0000\u0012ppsq\u0000~\u0000\u001cq\u0000~\u0000\u0016psq\u0000~\u0000\u0012q\u0000~\u0000\u0016psq\u0000~\u0000\u0017q\u0000~\u0000\u0016p\u0000sq\u0000~\u0000\u0012ppsq"
+"\u0000~\u0000\u001cq\u0000~\u0000\u0016psq\u0000~\u0000\u001fq\u0000~\u0000\u0016pq\u0000~\u0000\"q\u0000~\u0000&q\u0000~\u0000(sq\u0000~\u0000)t\u0000?com.sun.identi"
+"ty.saml2.jaxb.metadata.ManageNameIDServiceElementq\u0000~\u0000-sq\u0000~\u0000\u0017"
+"q\u0000~\u0000\u0016p\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0017pp\u0000sq\u0000~\u0000\u0012ppsq\u0000~\u0000\u001cq\u0000~\u0000\u0016psq\u0000~\u0000\u001fq\u0000~\u0000\u0016pq\u0000~\u0000"
+"\"q\u0000~\u0000&q\u0000~\u0000(sq\u0000~\u0000)q\u0000~\u0000\u00c9q\u0000~\u0000-sq\u0000~\u0000\u0012ppsq\u0000~\u0000\u001fq\u0000~\u0000\u0016pq\u0000~\u0000;q\u0000~\u0000Kq\u0000~"
+"\u0000(sq\u0000~\u0000)t\u0000\u0013ManageNameIDServiceq\u0000~\u0000eq\u0000~\u0000(sq\u0000~\u0000\u0012ppsq\u0000~\u0000\u001cq\u0000~\u0000\u0016p"
+"sq\u0000~\u0000\u0017q\u0000~\u0000\u0016p\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u00008q\u0000~\u0000\u0016psr\u0000#com.sun.msv.datatype.xs"
+"d.AnyURIType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000=q\u0000~\u0000Bt\u0000\u0006anyURIq\u0000~\u0000Fq\u0000~\u0000Hsq\u0000~\u0000Iq"
+"\u0000~\u0000\u00e9q\u0000~\u0000Bsq\u0000~\u0000\u0012ppsq\u0000~\u0000\u001fq\u0000~\u0000\u0016pq\u0000~\u0000;q\u0000~\u0000Kq\u0000~\u0000(sq\u0000~\u0000)t\u0000\fNameIDF"
+"ormatq\u0000~\u0000eq\u0000~\u0000(sq\u0000~\u0000\u0012ppsq\u0000~\u0000\u001fq\u0000~\u0000\u0016psq\u0000~\u00008ppsr\u0000\u001fcom.sun.msv.d"
+"atatype.xsd.IDType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000#com.sun.msv.datatype.xsd.Nc"
+"nameType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\"com.sun.msv.datatype.xsd.TokenType\u0000\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000#com.sun.msv.datatype.xsd.StringType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001Z\u0000"
+"\risAlwaysValidxq\u0000~\u0000=q\u0000~\u0000Bt\u0000\u0002IDq\u0000~\u0000F\u0000q\u0000~\u0000Hsq\u0000~\u0000Iq\u0000~\u0000\u00f7q\u0000~\u0000Bsq\u0000"
+"~\u0000)t\u0000\u0002IDt\u0000\u0000q\u0000~\u0000(sq\u0000~\u0000\u0012ppsq\u0000~\u0000\u001fq\u0000~\u0000\u0016psq\u0000~\u00008ppsr\u0000%com.sun.msv."
+"datatype.xsd.DurationType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000=q\u0000~\u0000Bt\u0000\bdurationq\u0000"
+"~\u0000Fq\u0000~\u0000Hsq\u0000~\u0000Iq\u0000~\u0001\u0001q\u0000~\u0000Bsq\u0000~\u0000)t\u0000\rcacheDurationq\u0000~\u0000\u00fbq\u0000~\u0000(sq\u0000~"
+"\u0000\u0012ppsq\u0000~\u0000\u001fq\u0000~\u0000\u0016pq\u0000~\u0000\u00e6sq\u0000~\u0000)t\u0000\berrorURLq\u0000~\u0000\u00fbq\u0000~\u0000(sq\u0000~\u0000\u001fppsq\u0000~"
+"\u00008ppsr\u0000!com.sun.msv.datatype.xsd.ListType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bitemT"
+"ypet\u0000)Lcom/sun/msv/datatype/xsd/XSDatatypeImpl;xq\u0000~\u0000>q\u0000~\u0000et\u0000"
+"\u000eanyURIListTypeq\u0000~\u0000Fq\u0000~\u0000\u00e8q\u0000~\u0000Hpsq\u0000~\u0000)t\u0000\u001aprotocolSupportEnume"
+"rationq\u0000~\u0000\u00fbsq\u0000~\u0000\u0012ppsq\u0000~\u0000\u001fq\u0000~\u0000\u0016psq\u0000~\u00008ppsr\u0000%com.sun.msv.datat"
+"ype.xsd.DateTimeType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000)com.sun.msv.datatype.xsd."
+"DateTimeBaseType\u0014W\u001a@3\u00a5\u00b4\u00e5\u0002\u0000\u0000xq\u0000~\u0000=q\u0000~\u0000Bt\u0000\bdateTimeq\u0000~\u0000Fq\u0000~\u0000Hs"
+"q\u0000~\u0000Iq\u0000~\u0001\u0017q\u0000~\u0000Bsq\u0000~\u0000)t\u0000\nvalidUntilq\u0000~\u0000\u00fbq\u0000~\u0000(sr\u0000\"com.sun.msv."
+"grammar.ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun/msv/"
+"grammar/ExpressionPool$ClosedHash;xpsr\u0000-com.sun.msv.grammar."
+"ExpressionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0003\u0000\u0003I\u0000\u0005countB\u0000\rstreamVersion"
+"L\u0000\u0006parentt\u0000$Lcom/sun/msv/grammar/ExpressionPool;xp\u0000\u0000\u0000Z\u0001pq\u0000~\u0000"
+"\u007fq\u0000~\u0000sq\u0000~\u0000kq\u0000~\u0000]q\u0000~\u0000Uq\u0000~\u00002q\u0000~\u0000\u001eq\u0000~\u0000\u00c6q\u0000~\u0000\fq\u0000~\u0000\u00d3q\u0000~\u0000\u00dbq\u0000~\u0000\u00e2q\u0000~\u0000"
+"\u0007q\u0000~\u0000\u00a5q\u0000~\u0000\u0090q\u0000~\u0000gq\u0000~\u0000\u00baq\u0000~\u0000\u00cfq\u0000~\u0000\u00b0q\u0000~\u0000\u00a8q\u0000~\u0000\u009bq\u0000~\u0000\u0093q\u0000~\u0000\u0086q\u0000~\u0000~q\u0000~\u0000"
+"rq\u0000~\u0000jq\u0000~\u0000\\q\u0000~\u0000Tq\u0000~\u00001q\u0000~\u0000\u001bq\u0000~\u0000\u00bdq\u0000~\u0000\u00c5q\u0000~\u0000\u00d2q\u0000~\u0000\u00daq\u0000~\u0000\u00aeq\u0000~\u0000\u0099q\u0000~\u0000"
+"\u0084q\u0000~\u0000pq\u0000~\u0000Zq\u0000~\u0000/q\u0000~\u0000\u00c3q\u0000~\u0000\u00d8q\u0000~\u0000\rq\u0000~\u0000\tq\u0000~\u0000{q\u0000~\u0000Qq\u0000~\u0000\u0013q\u0000~\u0000\u00efq\u0000~\u0000"
+"\u00a4q\u0000~\u0000\u008fq\u0000~\u0000fq\u0000~\u0000\u00b9q\u0000~\u0000\u00ceq\u0000~\u0000\u00a6q\u0000~\u0000\u0091q\u0000~\u0000|q\u0000~\u0000hq\u0000~\u0000Rq\u0000~\u0000\u0014q\u0000~\u0000\u00bbq\u0000~\u0000"
+"\u00d0q\u0000~\u0001\u0011q\u0000~\u0001\u0005q\u0000~\u0000\bq\u0000~\u0000\u00b5q\u0000~\u0000\u00a0q\u0000~\u0000\u008bq\u0000~\u0000wq\u0000~\u0000aq\u0000~\u00006q\u0000~\u0000\u00caq\u0000~\u0000\u00deq\u0000~\u0000"
+"\u00ebq\u0000~\u0000\u000eq\u0000~\u0000\u0011q\u0000~\u0000\u0006q\u0000~\u0000\u000fq\u0000~\u0000\u00e5q\u0000~\u0000\nq\u0000~\u0000\u0010q\u0000~\u0000\u0005q\u0000~\u0000\u000bq\u0000~\u0000\u00fcq\u0000~\u0000\u00e3q\u0000~\u0000"
+"\u00beq\u0000~\u0000\u00b1q\u0000~\u0000\u00a9q\u0000~\u0000\u009cq\u0000~\u0000\u0094q\u0000~\u0000\u0087x"));
        }
        return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
    }

    public class Unmarshaller
        extends com.sun.identity.saml2.jaxb.assertion.impl.runtime.AbstractUnmarshallingEventHandlerImpl
    {


        public Unmarshaller(com.sun.identity.saml2.jaxb.assertion.impl.runtime.UnmarshallingContext context) {
            super(context, "--------------");
        }

        protected Unmarshaller(com.sun.identity.saml2.jaxb.assertion.impl.runtime.UnmarshallingContext context, int startState) {
            this(context);
            state = startState;
        }

        public java.lang.Object owner() {
            return com.sun.identity.saml2.jaxb.metadata.impl.SSODescriptorTypeImpl.this;
        }

        public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  3 :
                        attIdx = context.getAttribute("", "Binding");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        break;
                    case  6 :
                        if (("ManageNameIDService" == ___local)&&("urn:oasis:names:tc:SAML:2.0:metadata" == ___uri)) {
                            _getManageNameIDService().add(((com.sun.identity.saml2.jaxb.metadata.impl.ManageNameIDServiceElementImpl) spawnChildFromEnterElement((com.sun.identity.saml2.jaxb.metadata.impl.ManageNameIDServiceElementImpl.class), 6, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("ManageNameIDService" == ___local)&&("urn:oasis:names:tc:SAML:2.0:metadata" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 10;
                            return ;
                        }
                        if (("NameIDFormat" == ___local)&&("urn:oasis:names:tc:SAML:2.0:metadata" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 7;
                            return ;
                        }
                        state = 9;
                        continue outer;
                    case  2 :
                        if (("ArtifactResolutionService" == ___local)&&("urn:oasis:names:tc:SAML:2.0:metadata" == ___uri)) {
                            _getArtifactResolutionService().add(((com.sun.identity.saml2.jaxb.metadata.impl.ArtifactResolutionServiceElementImpl) spawnChildFromEnterElement((com.sun.identity.saml2.jaxb.metadata.impl.ArtifactResolutionServiceElementImpl.class), 2, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("ArtifactResolutionService" == ___local)&&("urn:oasis:names:tc:SAML:2.0:metadata" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 12;
                            return ;
                        }
                        if (("SingleLogoutService" == ___local)&&("urn:oasis:names:tc:SAML:2.0:metadata" == ___uri)) {
                            _getSingleLogoutService().add(((com.sun.identity.saml2.jaxb.metadata.impl.SingleLogoutServiceElementImpl) spawnChildFromEnterElement((com.sun.identity.saml2.jaxb.metadata.impl.SingleLogoutServiceElementImpl.class), 5, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("SingleLogoutService" == ___local)&&("urn:oasis:names:tc:SAML:2.0:metadata" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 3;
                            return ;
                        }
                        state = 5;
                        continue outer;
                    case  12 :
                        attIdx = context.getAttribute("", "index");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        break;
                    case  5 :
                        if (("SingleLogoutService" == ___local)&&("urn:oasis:names:tc:SAML:2.0:metadata" == ___uri)) {
                            _getSingleLogoutService().add(((com.sun.identity.saml2.jaxb.metadata.impl.SingleLogoutServiceElementImpl) spawnChildFromEnterElement((com.sun.identity.saml2.jaxb.metadata.impl.SingleLogoutServiceElementImpl.class), 5, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("SingleLogoutService" == ___local)&&("urn:oasis:names:tc:SAML:2.0:metadata" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 3;
                            return ;
                        }
                        if (("ManageNameIDService" == ___local)&&("urn:oasis:names:tc:SAML:2.0:metadata" == ___uri)) {
                            _getManageNameIDService().add(((com.sun.identity.saml2.jaxb.metadata.impl.ManageNameIDServiceElementImpl) spawnChildFromEnterElement((com.sun.identity.saml2.jaxb.metadata.impl.ManageNameIDServiceElementImpl.class), 6, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("ManageNameIDService" == ___local)&&("urn:oasis:names:tc:SAML:2.0:metadata" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 10;
                            return ;
                        }
                        state = 6;
                        continue outer;
                    case  10 :
                        attIdx = context.getAttribute("", "Binding");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        break;
                    case  1 :
                        if (("ArtifactResolutionService" == ___local)&&("urn:oasis:names:tc:SAML:2.0:metadata" == ___uri)) {
                            _getArtifactResolutionService().add(((com.sun.identity.saml2.jaxb.metadata.impl.ArtifactResolutionServiceElementImpl) spawnChildFromEnterElement((com.sun.identity.saml2.jaxb.metadata.impl.ArtifactResolutionServiceElementImpl.class), 2, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("ArtifactResolutionService" == ___local)&&("urn:oasis:names:tc:SAML:2.0:metadata" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 12;
                            return ;
                        }
                        state = 2;
                        continue outer;
                    case  0 :
                        attIdx = context.getAttribute("", "ID");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        attIdx = context.getAttribute("", "cacheDuration");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        attIdx = context.getAttribute("", "errorURL");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        attIdx = context.getAttribute("", "protocolSupportEnumeration");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        break;
                    case  9 :
                        if (("NameIDFormat" == ___local)&&("urn:oasis:names:tc:SAML:2.0:metadata" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 7;
                            return ;
                        }
                        revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                        return ;
                }
                super.enterElement(___uri, ___local, ___qname, __atts);
                break;
            }
        }

        public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  3 :
                        attIdx = context.getAttribute("", "Binding");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                    case  6 :
                        state = 9;
                        continue outer;
                    case  2 :
                        state = 5;
                        continue outer;
                    case  4 :
                        if (("SingleLogoutService" == ___local)&&("urn:oasis:names:tc:SAML:2.0:metadata" == ___uri)) {
                            context.popAttributes();
                            state = 5;
                            return ;
                        }
                        break;
                    case  12 :
                        attIdx = context.getAttribute("", "index");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                    case  5 :
                        state = 6;
                        continue outer;
                    case  11 :
                        if (("ManageNameIDService" == ___local)&&("urn:oasis:names:tc:SAML:2.0:metadata" == ___uri)) {
                            context.popAttributes();
                            state = 6;
                            return ;
                        }
                        break;
                    case  10 :
                        attIdx = context.getAttribute("", "Binding");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                    case  1 :
                        state = 2;
                        continue outer;
                    case  13 :
                        if (("ArtifactResolutionService" == ___local)&&("urn:oasis:names:tc:SAML:2.0:metadata" == ___uri)) {
                            context.popAttributes();
                            state = 2;
                            return ;
                        }
                        break;
                    case  0 :
                        attIdx = context.getAttribute("", "ID");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "cacheDuration");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "errorURL");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "protocolSupportEnumeration");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                    case  8 :
                        if (("NameIDFormat" == ___local)&&("urn:oasis:names:tc:SAML:2.0:metadata" == ___uri)) {
                            context.popAttributes();
                            state = 9;
                            return ;
                        }
                        break;
                    case  9 :
                        revertToParentFromLeaveElement(___uri, ___local, ___qname);
                        return ;
                }
                super.leaveElement(___uri, ___local, ___qname);
                break;
            }
        }

        public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  3 :
                        if (("Binding" == ___local)&&("" == ___uri)) {
                            _getSingleLogoutService().add(((com.sun.identity.saml2.jaxb.metadata.impl.EndpointTypeImpl) spawnChildFromEnterAttribute((com.sun.identity.saml2.jaxb.metadata.impl.EndpointTypeImpl.class), 4, ___uri, ___local, ___qname)));
                            return ;
                        }
                        break;
                    case  6 :
                        state = 9;
                        continue outer;
                    case  2 :
                        state = 5;
                        continue outer;
                    case  12 :
                        if (("index" == ___local)&&("" == ___uri)) {
                            _getArtifactResolutionService().add(((com.sun.identity.saml2.jaxb.metadata.impl.IndexedEndpointTypeImpl) spawnChildFromEnterAttribute((com.sun.identity.saml2.jaxb.metadata.impl.IndexedEndpointTypeImpl.class), 13, ___uri, ___local, ___qname)));
                            return ;
                        }
                        break;
                    case  5 :
                        state = 6;
                        continue outer;
                    case  10 :
                        if (("Binding" == ___local)&&("" == ___uri)) {
                            _getManageNameIDService().add(((com.sun.identity.saml2.jaxb.metadata.impl.EndpointTypeImpl) spawnChildFromEnterAttribute((com.sun.identity.saml2.jaxb.metadata.impl.EndpointTypeImpl.class), 11, ___uri, ___local, ___qname)));
                            return ;
                        }
                        break;
                    case  1 :
                        state = 2;
                        continue outer;
                    case  0 :
                        if (("ID" == ___local)&&("" == ___uri)) {
                            spawnHandlerFromEnterAttribute((((com.sun.identity.saml2.jaxb.metadata.impl.RoleDescriptorTypeImpl)com.sun.identity.saml2.jaxb.metadata.impl.SSODescriptorTypeImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname);
                            return ;
                        }
                        if (("cacheDuration" == ___local)&&("" == ___uri)) {
                            spawnHandlerFromEnterAttribute((((com.sun.identity.saml2.jaxb.metadata.impl.RoleDescriptorTypeImpl)com.sun.identity.saml2.jaxb.metadata.impl.SSODescriptorTypeImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname);
                            return ;
                        }
                        if (("errorURL" == ___local)&&("" == ___uri)) {
                            spawnHandlerFromEnterAttribute((((com.sun.identity.saml2.jaxb.metadata.impl.RoleDescriptorTypeImpl)com.sun.identity.saml2.jaxb.metadata.impl.SSODescriptorTypeImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname);
                            return ;
                        }
                        if (("protocolSupportEnumeration" == ___local)&&("" == ___uri)) {
                            spawnHandlerFromEnterAttribute((((com.sun.identity.saml2.jaxb.metadata.impl.RoleDescriptorTypeImpl)com.sun.identity.saml2.jaxb.metadata.impl.SSODescriptorTypeImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                    case  9 :
                        revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                        return ;
                }
                super.enterAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  3 :
                        attIdx = context.getAttribute("", "Binding");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                    case  6 :
                        state = 9;
                        continue outer;
                    case  2 :
                        state = 5;
                        continue outer;
                    case  12 :
                        attIdx = context.getAttribute("", "index");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                    case  5 :
                        state = 6;
                        continue outer;
                    case  10 :
                        attIdx = context.getAttribute("", "Binding");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                    case  1 :
                        state = 2;
                        continue outer;
                    case  0 :
                        attIdx = context.getAttribute("", "ID");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "cacheDuration");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "errorURL");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "protocolSupportEnumeration");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                    case  9 :
                        revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                        return ;
                }
                super.leaveAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void handleText(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                try {
                    switch (state) {
                        case  3 :
                            attIdx = context.getAttribute("", "Binding");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            break;
                        case  6 :
                            state = 9;
                            continue outer;
                        case  2 :
                            state = 5;
                            continue outer;
                        case  12 :
                            attIdx = context.getAttribute("", "index");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            break;
                        case  5 :
                            state = 6;
                            continue outer;
                        case  10 :
                            attIdx = context.getAttribute("", "Binding");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            break;
                        case  1 :
                            state = 2;
                            continue outer;
                        case  7 :
                            state = 8;
                            eatText1(value);
                            return ;
                        case  0 :
                            attIdx = context.getAttribute("", "ID");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            attIdx = context.getAttribute("", "cacheDuration");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            attIdx = context.getAttribute("", "errorURL");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            attIdx = context.getAttribute("", "protocolSupportEnumeration");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            break;
                        case  9 :
                            revertToParentFromText(value);
                            return ;
                    }
                } catch (java.lang.RuntimeException e) {
                    handleUnexpectedTextException(value, e);
                }
                break;
            }
        }

        private void eatText1(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _getNameIDFormat().add(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

    }

}
