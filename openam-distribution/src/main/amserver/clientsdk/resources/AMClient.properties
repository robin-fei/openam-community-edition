#
# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.
#
# Copyright (c) 2006 Sun Microsystems Inc. All Rights Reserved
#
# The contents of this file are subject to the terms
# of the Common Development and Distribution License
# (the License). You may not use this file except in
# compliance with the License.
#
# You can obtain a copy of the License at
# https://opensso.dev.java.net/public/CDDLv1.0.html or
# opensso/legal/CDDLv1.0.txt
# See the License for the specific language governing
# permission and limitations under the License.
#
# When distributing Covered Code, include this CDDL
# Header Notice in each file and include the License file
# at opensso/legal/CDDLv1.0.txt.
# If applicable, add the following below the CDDL Header,
# with the fields enclosed by brackets [] replaced by
# your own identifying information:
# "Portions Copyrighted [year] [name of copyright owner]"
#
# $Id: AMClient.properties,v 1.24 2009/08/12 17:43:03 beomsuk Exp $
#
#

#
# Portions Copyrighted [2010] [ForgeRock AS]
#

/* The following keys are used to configure the Debug service.
 * Possible values for the key 'level' are: off | error | warning | message. 
 * The key 'directory' specifies the output directory where the debug files 
 * will be created.
 * Trailing spaces are significant.
 * Windows: Use forward slashes "/" separate directories, not backslash "\".
 * Windows: Spaces in the file name are allowed for Windows.
 */
com.iplanet.services.debug.level=@DEBUG_LEVEL@
com.iplanet.services.debug.directory=@DEBUG_DIR@

/*
 * Server mode should be 'false'
 */
com.iplanet.am.serverMode=false

/*
 * Cache enable / disable properties
 */
com.iplanet.am.sdk.caching.enabled=true
com.sun.identity.idm.cache.enabled=true
com.sun.identity.sm.cache.enabled=true

/*
 * Refresh time for appssotoken, value in minutes
 */
com.iplanet.am.client.appssotoken.refreshtime=3

/*
 * Logging status
 */
com.iplanet.am.logstatus=ACTIVE

/*
 * SDK package name
 */
com.iplanet.am.sdk.package=com.iplanet.am.sdk.remote

/*
 * Configure remote plugin classes for configuration (SMS)
 */
com.sun.identity.sm.sms_object_class_name=com.sun.identity.sm.jaxrpc.SMSJAXRPCObject

/*
 * Naming URL
 */
com.iplanet.am.naming.url=@NAMING_URL@

/*
 * Notification URL
 */
com.sun.identity.client.notification.url=@NOTIFICATION_URL@

/*
 * Security Credentails to read the configuration data
 */
com.sun.identity.agents.app.username=@APPLICATION_USER@
com.iplanet.am.service.password=@APPLICATION_PASSWD@
com.iplanet.am.service.secret=@ENCODED_APPLICATION_PASSWORD@

/*
 * Encryption key that will be used to encrypt and decypt
 * data to communicate with the server.
 * This key is needed to decrypt passwords stored
 * in the SMS configuration.
 */
am.encryption.pwd=@ENCRYPTION_KEY@

/*
 * Encryption key that will be used to encrypt and decypt
 * data used locally within the client.
 */
com.sun.identity.client.encryptionKey=@ENCRYPTION_KEY_LOCAL@

/*
 * Encryption: The key "com.iplanet.security.encryptor" specifies
 * the encrypting class implementation.
 * Available classes are:
 *    com.iplanet.services.util.JCEEncryption
 *    com.iplanet.services.util.JSSEncryption
 */
com.iplanet.security.encryptor=com.iplanet.services.util.JCEEncryption

/*
 * Property to enable/disable the notifications for am.sdk and IdRepo Caches. 
 * If set to "true" notifications are enabled and disabled if set to "false".
 */
com.sun.identity.idm.remote.notification.enabled=false

/*
 * Property to enable/disable the notifications for service management caches.
 * If set to "true" notifications are enabled and disabled if set to "false".
 */
com.sun.identity.sm.notification.enabled=false

/*
 * Cache update time (in minutes) for am.sdk & IdRepo Caches
 * if notification URL is not provided or if notifications are disabled.
 * Note: 
 * 1. This property is applicable only if 
 *    'com.sun.identity.client.notification.url'
 *    is not provided or if 'com.sun.identity.idm.remote.notification.enabled'
 *    is set to 'false'.
 * 2. If the polling time is set as 0, then polling is disabled. 
 */
com.iplanet.am.sdk.remote.pollingTime=0

/*
 * Cache update time (in minutes) for service configutation data,
 * if notification URL is not provided or if notifications are disabled.
 * Note: 
 * 1. This property is applicable only if 
 * 'com.sun.identity.client.notification.url'
 *    is not provided or if 'com.sun.identity.sm.notification.enabled' is 
 *    set to 'false'.
 * 2. If the cache time is set as 0, then no cache updates will occur.
 */
com.sun.identity.sm.cacheTime=10

/*
* The following are the properties to configure service management Cache for
* TTL. If the property 'com.sun.identity.sm.cache.ttl.enable' is set to
* true, the cache entries will expire based on the time specified in the
* property "com.sun.identity.sm.cache.ttl" (in minutes).
com.sun.identity.sm.cache.ttl.enable=true
com.sun.identity.sm.cache.ttl=30

/*
* The following are the properties to configure IdRepo cache for TTL.
* If the property 'com.sun.identity.idm.cache.entry.expire.enabled' is set to
* true, the cache entries will expire based on the time specified in the
* properties below. The properties 'com.sun.identity.idm.cache.user.expire.time'
* & 'com.sun.identity.idm.cache.default.expire.time' specify time in minutes
* for which the user & non-user entries respectively remain valid after their
* last modification. In other words after this specified period of time
* elapses (after the last modification/read from the directory), the data
* for the entry that is cached will expire. At that instant new requests for
* data for these entries will result in reading it from the IdRepo plugins.
*/
com.sun.identity.idm.cache.entry.expire.enabled=true
com.sun.identity.idm.cache.entry.user.expire.time=1
com.sun.identity.idm.cache.entry.default.expire.time=1

/*
* The following are the properties to configure AMSDK plugin Cache for TTL.
* If the property 'com.iplanet.am.sdk.cache.entry.expire.enabled' is set to
* true, the cache entries will expire based on the time specified in the
* properties below. The properties 'com.iplanet.am.sdk.cache.user.expire.time'
* & 'com.iplanet.am.sdk.cache.default.expire.time' specify time in minutes for
* which the user & non-user entries respectively remain valid after their last
* modification. In other words after this specified period of time elapses
* (after the last modification/read from the directory), the data for the
* entry that is cached will expire. At that instant new requests for data for
* these entries will result in reading it from the Directory.
*/
com.iplanet.am.sdk.cache.entry.expire.enabled=true
com.iplanet.am.sdk.cache.entry.user.expire.time=1
com.iplanet.am.sdk.cache.entry.default.expire.time=1

/*
 * Server protocol, host and port to be used by Client Services
 */
com.iplanet.am.server.protocol=@SERVER_PROTOCOL@
com.iplanet.am.server.host=@SERVER_HOST@
com.iplanet.am.server.port=@SERVER_PORT@
com.iplanet.am.services.deploymentDescriptor=@DEPLOY_URI@
com.iplanet.am.console.protocol=@CONSOLE_PROTOCOL@
com.iplanet.am.console.host=@CONSOLE_HOST@
com.iplanet.am.console.port=@CONSOLE_PORT@
com.iplanet.am.console.deploymentDescriptor=@CONSOLE_DEPLOY_URI@
com.iplanet.am.console.remote=@CONSOLE_REMOTE@

com.iplanet.am.cookie.name=@AM_COOKIE_NAME@

/*
 * Session related properties.
 */
com.iplanet.am.session.client.polling.enable=true
com.iplanet.am.session.client.polling.period=180

/*
 * Identify cert db directory path, prefix and password file
 * to initialize JSS Socket Factory when Web Container is configured SSL
 */
com.iplanet.am.admin.cli.certdb.dir=@CONTAINER_CERTDB_DIR@
com.iplanet.am.admin.cli.certdb.prefix=@CONTAINER_CERTDB_PREFIX@
com.iplanet.am.admin.cli.certdb.passfile=@BASEDIR@/@PRODUCT_DIR@/config/.wtpass

/*
 * Identify property value for SSL ApprovalCallback / HostnameVerifier
 *    If com.iplanet.services.comm is configured as protocol handler
 *    and the checkSubjectAltName or resolveIPAddress feature is enabled, 
 *    cert8.db and key3.db with the prefix value of 
 *    com.iplanet.am.admin.cli.certdb.prefix will have to be created under 
 *    the directory of com.iplanet.am.admin.cli.certdb.dir before server is 
 *    restarted.
 */
com.iplanet.am.jssproxy.trustAllServerCerts=false
com.iplanet.am.jssproxy.checkSubjectAltName=false
com.iplanet.am.jssproxy.resolveIPAddress=false
com.iplanet.am.jssproxy.SSLTrustHostList=

/**************************************************************
 *              Policy Client parameters
 **************************************************************/
/* Policy decision log parameters. Possible values for logging.level
 * are NONE, ALLOW, DENY, BOTH, and DECISION */
com.sun.identity.agents.server.log.file.name=amRemotePolicyLog
com.sun.identity.agents.logging.level=NONE

/* Notification URL for updating cache */
com.sun.identity.agents.notification.enabled=false
com.sun.identity.agents.notification.url=@NOTIFICATION_URL@

/* Cache time in minutes */
com.sun.identity.agents.polling.interval=3

/* Information to cache. Possible value are "subtree" or "self" */
com.sun.identity.policy.client.cacheMode=subtree

/* Policy client clock skew value in seconds */
com.sun.identity.policy.client.clockSkew=10 

/*
* Explicitly disable monitoring services in the client applications.
*/
com.sun.identity.monitoring=off

/*
* Specify if allow to use cached data for HttpURLConnection 
*/
com.sun.identity.urlconnection.useCache=false

/**
 * Property to enable or disable to use the metro implementation
 * for ws-trust client.
 */
com.sun.identity.wss.trustclient.enablemetro=false

/**
 * Property to use the SOAP version for ws-trust client. The containers
 * that do not support JavaEE5 should use the version 1.1 but make sure that
 * the STS service is compatible with 1.1 version. 
 */ 
com.sun.identity.wss.soapversion=1.2

/**
 * This property defines interval in seconds for web services security 
 * cache timeout.
 */
com.sun.identity.wss.security.cache.timeout.interval=300

/**
 * This property defines an interval in seconds for cleaning up the
 * web services security cache.
 */
com.sun.identity.wss.security.cache.cleanup.interval=60

/**
 * This property indicates a plugin class for WSSCacheRepository that can be
 * used for storing web services security cache persistently.
 */
com.sun.identity.wss.security.cacherepository.plugin=

/**
 * This property is used by the standone SAML Tokens in web services security 
 * for the issuer name. If this property is not set, they will use the server
 * host name as the default.
 */
com.sun.identity.wss.security.samlassertion.issuer=

/**
 * This property is used to define the time skew in milli seconds used when 
 * the time stamps are validated.
 */
com.sun.identity.wss.security.timeskew=5000

/**
 * Policy ResourceComparators to be used for different service names
 */
serviceType=iPlanetAMWebAgentService|class=com.sun.identity.policy.plugins.HttpURLResourceName|wildcard=*|delimiter=/|caseSensitive=false|oneLevelWildCard=-*-

/*
 * Protocol handler pkg name for HTTPS protocol.
 * Default value is none. 
 * Available impl classes are:
 *   com.iplanet.services.comm (uses JSS)
 *   com.sun.identity.protocol (pure Java)
 */
opensso.protocol.handler.pkgs=

/**
 * When the Site monitoring needs to be disabled, set this property to true
 * When a client SDK application runs in the same container as the OpenAM server
 * this property might be set to true
 */
openam.naming.sitemonitor.disabled=false
